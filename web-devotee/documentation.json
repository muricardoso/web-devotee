{
    "pipes": [],
    "interfaces": [
        {
            "name": "AddressComponent",
            "id": "interface-AddressComponent-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "long_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "short_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Bounds",
            "id": "interface-Bounds-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "northeast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Northeast2",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "southwest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Southwest2",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Datum",
            "id": "interface-Datum-79d2f80178ee7713a6567eb031ced7772b8fb013f862a726fd11f6e2dfa9f842f688e8d80ce0af64d6fd30e5d49134bb825b8b053517e62c7881ec6219769dd4",
            "file": "src/app/shared/model/response/get-hosptals/get-hosptals.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelHosptals {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      lat: number;\n      lng: number;\n      country: string;\n      codeiso2: string;\n      codeiso3: string;\n      distance: number;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url: string;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "codeiso2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "codeiso3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Datum",
            "id": "interface-Datum-d0982f06fc16406300b66133a871e6ea79929dc88b0e749a1338241f6f2692627738b2e8e2efdc2c5e53f75421db128451b3c2b9957603031bf094632ffdad7c-1",
            "file": "src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetMedicalProceduresReponse {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      name_en: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url?: any;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name_en",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Datum-1"
        },
        {
            "name": "Datum",
            "id": "interface-Datum-cb89b81f3709f5ae4fce526fd1aaab569e5fd2c92edff02d3467f8417ca6be6b366bb28e78c8070270543613f9e6d1701e33122bd92179ea75a05167f9070594-2",
            "file": "src/app/shared/model/response/get-medicines/get-medicines.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetMedicines {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      name_en: string;\n      country: string;\n      codeiso2: string;\n      codeiso3: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url?: any;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "codeiso2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "codeiso3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name_en",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Datum-2"
        },
        {
            "name": "Datum",
            "id": "interface-Datum-92470db77f22eb91d7bb674a5ce12a01b80d009b7509bf77d0c3615689d8ab772d96a17796a479be5e3ef20f05c44379051aa93160843f9fe0de02af874e8d37-3",
            "file": "src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelSugestionMatchsResponse {\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Datum {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description: string;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs: string;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      distance: number;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      data: Datum[];\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "about",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "address_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "age_max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "age_min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "automatic_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "birthdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "disability_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "email_verified_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "illicit_drugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "legacy_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "max_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "notification_like",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "notification_match",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "notification_message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "notification_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "occupation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "old_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "os",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "osVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "plan_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "prejudice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "profile_picture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfilePicture[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "reason_cancel_account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "reason_cancel_plan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "relationship_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "sexual_orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "show_age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "show_as_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "show_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "show_me",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "stripe_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "subscription_order_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "subscriptions_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "target_account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "target_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "things_i_use",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "tiic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Datum-3"
        },
        {
            "name": "defaultDataAnyway",
            "id": "interface-defaultDataAnyway-5f56c11e09131bd8b3432e70d98315e6a3b646ca36648581351a6f50760fa68b169ba3ac5ab9c72ee1887becc529e58771c880cd38ec4bf11d295c39399de896",
            "file": "src/app/shared/model/card-img-title-text/card-img-title-text.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export class ModelCardImgTitleText implements IModelCardImgTitleText {\n  id: string;\n  icon?: string;\n  title?: string;\n  text?: string;\n  constructor(\n    id: string,\n    icon?: string,\n    title?: string,\n    text?: string,\n    ){\n      this.id = id;\n      this.icon = icon;\n      this.text = text;\n      this.title = title;\n    }\n}\nexport interface IModelCardImgTitleText {\n  id: string;\n  icon?: string;\n  title?: string;\n  text?: string;\n}\ninterface defaultDataAnyway {\n  id: string;\n  label: string;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Geometry",
            "id": "interface-Geometry-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "bounds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Bounds",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Location",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "location_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "viewport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Viewport",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IAppState",
            "id": "interface-IAppState-cec81aecf28d6e8035494e3741afa6a238f15805957e8b87e05521da398df9a37a0da40d786fe039ddbc6ab51ddbb6d3118bfd50b757c198b022a1f3a617a8b0",
            "file": "src/app/state-management/app.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IControlsApp } from './controls/controls-app.state';\nimport { IListCards } from './list-cards/list-cards.state';\nimport { IRegisterUser } from './register/register.state';\nimport { IUserData } from './user-data/user-data.state';\n\nexport interface IAppState {\n  registerData: IRegisterUser,\n  controlsApp: IControlsApp,\n  userData: IUserData.RootObject,\n  listCards: IListCards.RootObject\n}\n",
            "properties": [
                {
                    "name": "controlsApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IControlsApp",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "listCards",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IListCards.RootObject",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "registerData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IRegisterUser",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "userData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUserData.RootObject",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IControlsApp",
            "id": "interface-IControlsApp-bee247b0e2f9eda6b04e3fcf790c81a55fad54045dae630ad6ca82a95ab6b0066f3804336cdf51cd1265f5545460e16344b553057773477682d476ef37f6bcbd",
            "file": "src/app/state-management/controls/controls-app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IControlsApp {\n  openSingIn: boolean;\n  showAds: boolean;\n  countShowAds: number;\n}\nexport const INITIAL_STATE_CONTROLS_APP =  {\n  openSingIn: false,\n  showAds: false,\n  countShowAds: 0,\n}\n",
            "properties": [
                {
                    "name": "countShowAds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "openSingIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "showAds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IData",
            "id": "interface-IData-dcff09efbdabb0b21e228bdd03bbdc79e446e2a25bcdbbfaf4f0c9d2f532611359d76931939052f4ef3fb717c2c5c53bebfc5faebd8ed82eb71396b5d5d295fc",
            "file": "src/app/shared/model/response/get-cids/get-cids.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelCidsResponse {\n\n  export interface IData {\n      id: number;\n      code: string;\n      description: string;\n      description_en: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: IData[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url: string;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "description_en",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IData",
            "id": "interface-IData-509151992e51094aadf0c192a27206532b27822b7ccc88bfa0fb3774ecfe131ff8b0f37c59aa6d6a6317ec9f35a2db2075400b238e566a9d40e238d955ae3173-1",
            "file": "src/app/shared/model/response/like-dislike-response/like-dislike.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelLikeDislikeReponse {\n\n  export interface IData {\n    user_id: number;\n    target_user: number;\n    type: string;\n    updated_at: string;\n    created_at: string;\n    id: number;\n    is_match: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      data: IData;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "is_match",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "target_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IData-1"
        },
        {
            "name": "IDataQrcode",
            "id": "interface-IDataQrcode-750053727c19106d0f9a679e059902296ad7a0b4e4ef6ed0fcd842c5ccada240676c16746d51907ee7f6ccf1408278556defdc00e977e37f80c947bdaf0899ba",
            "file": "src/app/shared/model/qrcode/qrcode.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGenerateHashQrcodeResponse {\n  export interface IRootObjetct {\n    status: boolean;\n    data: IDataQrcode\n  }\n  export interface IDataQrcode {\n    hash: string;\n\t\tupdated_at: string;\n\t\tcreated_at: string;\n\t  id: number;\n  }\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IHeaderCardsInitialPage",
            "id": "interface-IHeaderCardsInitialPage-c7ed452ba6cb5b56333efef4acb1fde4739dbf1b11f4295f1e8cf72eb79e2fb954ca8997361083c934f1d424ebc66b68238a62e2a4250e9cd24606c9127ccbbc",
            "file": "src/app/shared/components/header-cards-initial-page/model/header-cards.data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHeaderCardsInitialPage {\n  title: titleHeader;\n  text?: textHeader;\n}\nexport interface titleHeader {\n  id: string,\n  label: string,\n}\nexport interface textHeader {\n  id: string,\n  label: string,\n}\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "textHeader",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "titleHeader",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IModelCardImgTitleText",
            "id": "interface-IModelCardImgTitleText-5f56c11e09131bd8b3432e70d98315e6a3b646ca36648581351a6f50760fa68b169ba3ac5ab9c72ee1887becc529e58771c880cd38ec4bf11d295c39399de896",
            "file": "src/app/shared/model/card-img-title-text/card-img-title-text.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export class ModelCardImgTitleText implements IModelCardImgTitleText {\n  id: string;\n  icon?: string;\n  title?: string;\n  text?: string;\n  constructor(\n    id: string,\n    icon?: string,\n    title?: string,\n    text?: string,\n    ){\n      this.id = id;\n      this.icon = icon;\n      this.text = text;\n      this.title = title;\n    }\n}\nexport interface IModelCardImgTitleText {\n  id: string;\n  icon?: string;\n  title?: string;\n  text?: string;\n}\ninterface defaultDataAnyway {\n  id: string;\n  label: string;\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IPayload",
            "id": "interface-IPayload-d79f10c8cfecd83fc131221db36a67a0f66de4fe1414cd670614e5c7794e8add87ab779e1d5dba1975ce6c3d740a2570c65ce225fbcbe5177d302bad39e33d49",
            "file": "src/app/state-management/type.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IPayload {\n  key?: string;\n  value?: any;\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-dcff09efbdabb0b21e228bdd03bbdc79e446e2a25bcdbbfaf4f0c9d2f532611359d76931939052f4ef3fb717c2c5c53bebfc5faebd8ed82eb71396b5d5d295fc",
            "file": "src/app/shared/model/response/get-cids/get-cids.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelCidsResponse {\n\n  export interface IData {\n      id: number;\n      code: string;\n      description: string;\n      description_en: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: IData[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url: string;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "current_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IData[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "first_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "from",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "last_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "last_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Link[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "next_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "per_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "prev_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-79d2f80178ee7713a6567eb031ced7772b8fb013f862a726fd11f6e2dfa9f842f688e8d80ce0af64d6fd30e5d49134bb825b8b053517e62c7881ec6219769dd4-1",
            "file": "src/app/shared/model/response/get-hosptals/get-hosptals.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelHosptals {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      lat: number;\n      lng: number;\n      country: string;\n      codeiso2: string;\n      codeiso3: string;\n      distance: number;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url: string;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "current_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Datum[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "first_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "from",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "last_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "last_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Link[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "next_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "per_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "prev_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IRootObject-1"
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-d0982f06fc16406300b66133a871e6ea79929dc88b0e749a1338241f6f2692627738b2e8e2efdc2c5e53f75421db128451b3c2b9957603031bf094632ffdad7c-2",
            "file": "src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetMedicalProceduresReponse {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      name_en: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url?: any;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "current_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Datum[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "first_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "from",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "last_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "last_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Link[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "next_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "per_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "prev_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "IRootObject-2"
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-cb89b81f3709f5ae4fce526fd1aaab569e5fd2c92edff02d3467f8417ca6be6b366bb28e78c8070270543613f9e6d1701e33122bd92179ea75a05167f9070594-3",
            "file": "src/app/shared/model/response/get-medicines/get-medicines.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetMedicines {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      name_en: string;\n      country: string;\n      codeiso2: string;\n      codeiso3: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url?: any;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "current_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Datum[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "first_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "from",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "last_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "last_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Link[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "next_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "per_page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "prev_page_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "IRootObject-3"
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-92470db77f22eb91d7bb674a5ce12a01b80d009b7509bf77d0c3615689d8ab772d96a17796a479be5e3ef20f05c44379051aa93160843f9fe0de02af874e8d37-4",
            "file": "src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelSugestionMatchsResponse {\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Datum {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description: string;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs: string;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      distance: number;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      data: Datum[];\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Datum[]",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "IRootObject-4"
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-509151992e51094aadf0c192a27206532b27822b7ccc88bfa0fb3774ecfe131ff8b0f37c59aa6d6a6317ec9f35a2db2075400b238e566a9d40e238d955ae3173-5",
            "file": "src/app/shared/model/response/like-dislike-response/like-dislike.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelLikeDislikeReponse {\n\n  export interface IData {\n    user_id: number;\n    target_user: number;\n    type: string;\n    updated_at: string;\n    created_at: string;\n    id: number;\n    is_match: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      data: IData;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IData",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 5,
            "duplicateName": "IRootObject-5"
        },
        {
            "name": "IRootObject",
            "id": "interface-IRootObject-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437-6",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "predictions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Prediction[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 6,
            "duplicateName": "IRootObject-6"
        },
        {
            "name": "IRootObjetct",
            "id": "interface-IRootObjetct-750053727c19106d0f9a679e059902296ad7a0b4e4ef6ed0fcd842c5ccada240676c16746d51907ee7f6ccf1408278556defdc00e977e37f80c947bdaf0899ba",
            "file": "src/app/shared/model/qrcode/qrcode.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGenerateHashQrcodeResponse {\n  export interface IRootObjetct {\n    status: boolean;\n    data: IDataQrcode\n  }\n  export interface IDataQrcode {\n    hash: string;\n\t\tupdated_at: string;\n\t\tcreated_at: string;\n\t  id: number;\n  }\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDataQrcode",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRootObjetct",
            "id": "interface-IRootObjetct-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd-1",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "plus_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PlusCode",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "results",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Result[]",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IRootObjetct-1"
        },
        {
            "name": "Link",
            "id": "interface-Link-dcff09efbdabb0b21e228bdd03bbdc79e446e2a25bcdbbfaf4f0c9d2f532611359d76931939052f4ef3fb717c2c5c53bebfc5faebd8ed82eb71396b5d5d295fc",
            "file": "src/app/shared/model/response/get-cids/get-cids.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelCidsResponse {\n\n  export interface IData {\n      id: number;\n      code: string;\n      description: string;\n      description_en: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: IData[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url: string;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Link",
            "id": "interface-Link-79d2f80178ee7713a6567eb031ced7772b8fb013f862a726fd11f6e2dfa9f842f688e8d80ce0af64d6fd30e5d49134bb825b8b053517e62c7881ec6219769dd4-1",
            "file": "src/app/shared/model/response/get-hosptals/get-hosptals.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelHosptals {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      lat: number;\n      lng: number;\n      country: string;\n      codeiso2: string;\n      codeiso3: string;\n      distance: number;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url: string;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Link-1"
        },
        {
            "name": "Link",
            "id": "interface-Link-d0982f06fc16406300b66133a871e6ea79929dc88b0e749a1338241f6f2692627738b2e8e2efdc2c5e53f75421db128451b3c2b9957603031bf094632ffdad7c-2",
            "file": "src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetMedicalProceduresReponse {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      name_en: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url?: any;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Link-2"
        },
        {
            "name": "Link",
            "id": "interface-Link-cb89b81f3709f5ae4fce526fd1aaab569e5fd2c92edff02d3467f8417ca6be6b366bb28e78c8070270543613f9e6d1701e33122bd92179ea75a05167f9070594-3",
            "file": "src/app/shared/model/response/get-medicines/get-medicines.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetMedicines {\n\n  export interface Datum {\n      id: number;\n      name: string;\n      name_en: string;\n      country: string;\n      codeiso2: string;\n      codeiso3: string;\n  }\n\n  export interface Link {\n      url: string;\n      label: string;\n      active: boolean;\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      current_page: number;\n      data: Datum[];\n      first_page_url: string;\n      from: number;\n      last_page: number;\n      last_page_url: string;\n      links: Link[];\n      next_page_url: string;\n      path: string;\n      per_page: number;\n      prev_page_url?: any;\n      to: number;\n      total: number;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Link-3"
        },
        {
            "name": "Location",
            "id": "interface-Location-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MainTextMatchedSubstring",
            "id": "interface-MainTextMatchedSubstring-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MatchedSubstring",
            "id": "interface-MatchedSubstring-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Northeast",
            "id": "interface-Northeast-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Northeast2",
            "id": "interface-Northeast2-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PlusCode",
            "id": "interface-PlusCode-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "compound_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "global_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PlusCode2",
            "id": "interface-PlusCode2-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "compound_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "global_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Prediction",
            "id": "interface-Prediction-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "matched_substrings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatchedSubstring[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "place_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "reference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "structured_formatting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StructuredFormatting",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "terms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Term[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProfilePicture",
            "id": "interface-ProfilePicture-f04a8b449499bed10732c582c14167062fa0269bd390c0f82e8259f4af392bd02a72f9bad8cac3e014eb33e8b5746ce2c9c1474a6f060d89001fbf0a0ad1436a",
            "file": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ILikedMe {\n\n  export interface User {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name?: any;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type?: any;\n      gender?: any;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender?: any;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token?: any;\n      lat?: any;\n      lng?: any;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation?: any;\n      about?: any;\n      address_description?: any;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os?: any;\n      model?: any;\n      osVersion?: any;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: any[];\n  }\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Target {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface RootObject {\n      id: number;\n      user_id: number;\n      target_user: number;\n      active: number;\n      type: string;\n      created_at: string;\n      updated_at: string;\n      user: User;\n      target: Target;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "order",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProfilePicture",
            "id": "interface-ProfilePicture-92470db77f22eb91d7bb674a5ce12a01b80d009b7509bf77d0c3615689d8ab772d96a17796a479be5e3ef20f05c44379051aa93160843f9fe0de02af874e8d37-1",
            "file": "src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelSugestionMatchsResponse {\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Datum {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description: string;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs: string;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      distance: number;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface IRootObject {\n      status: boolean;\n      data: Datum[];\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "order",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProfilePicture-1"
        },
        {
            "name": "Response",
            "id": "interface-Response-d9684422ee1e2c8facce3c618bd9edee7d55ae21c8a69df79b5de67da23f490d9d323d396acfa15aecdeac475c47a0ad79135b77ed9a0ae34a2c5cd9dfffc4ee",
            "file": "src/app/shared/model/verify-email/verify-email.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module VerifyEmail {\n  export interface Response {\n    message: string,\n    errors: ResponseErrors\n  }\n  interface ResponseErrors {\n    password: Array<string>,\n    email: Array<string>\n  }\n}\n",
            "properties": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponseErrors",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponseErrors",
            "id": "interface-ResponseErrors-d9684422ee1e2c8facce3c618bd9edee7d55ae21c8a69df79b5de67da23f490d9d323d396acfa15aecdeac475c47a0ad79135b77ed9a0ae34a2c5cd9dfffc4ee",
            "file": "src/app/shared/model/verify-email/verify-email.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module VerifyEmail {\n  export interface Response {\n    message: string,\n    errors: ResponseErrors\n  }\n  interface ResponseErrors {\n    password: Array<string>,\n    email: Array<string>\n  }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<string>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<string>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Result",
            "id": "interface-Result-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "address_components",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddressComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "formatted_address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "geometry",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Geometry",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "place_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "plus_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PlusCode2",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RootObject",
            "id": "interface-RootObject-f04a8b449499bed10732c582c14167062fa0269bd390c0f82e8259f4af392bd02a72f9bad8cac3e014eb33e8b5746ce2c9c1474a6f060d89001fbf0a0ad1436a",
            "file": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ILikedMe {\n\n  export interface User {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name?: any;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type?: any;\n      gender?: any;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender?: any;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token?: any;\n      lat?: any;\n      lng?: any;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation?: any;\n      about?: any;\n      address_description?: any;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os?: any;\n      model?: any;\n      osVersion?: any;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: any[];\n  }\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Target {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface RootObject {\n      id: number;\n      user_id: number;\n      target_user: number;\n      active: number;\n      type: string;\n      created_at: string;\n      updated_at: string;\n      user: User;\n      target: Target;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Target",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "target_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 119
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SecondaryTextMatchedSubstring",
            "id": "interface-SecondaryTextMatchedSubstring-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Serializer",
            "id": "interface-Serializer-567c39d8233b28810954c036d6744431979efcdc4e290f0b0735b6d7aa9c3c17a1a17bee83d4dfb4eed496a3152b75b61ff98e58157c526098d2e4b22c229ea9",
            "file": "src/app/shared/model/serializer/serializer.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Resource } from \"./resource.model\";\n\nexport interface Serializer {\n  fromJson(json: any): any;\n  toJson(resource: any): any;\n}\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "json",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "json",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "resource",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "resource",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Southwest",
            "id": "interface-Southwest-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Southwest2",
            "id": "interface-Southwest2-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StructuredFormatting",
            "id": "interface-StructuredFormatting-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "main_text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "main_text_matched_substrings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MainTextMatchedSubstring[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "secondary_text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "secondary_text_matched_substrings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SecondaryTextMatchedSubstring[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Target",
            "id": "interface-Target-f04a8b449499bed10732c582c14167062fa0269bd390c0f82e8259f4af392bd02a72f9bad8cac3e014eb33e8b5746ce2c9c1474a6f060d89001fbf0a0ad1436a",
            "file": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ILikedMe {\n\n  export interface User {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name?: any;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type?: any;\n      gender?: any;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender?: any;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token?: any;\n      lat?: any;\n      lng?: any;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation?: any;\n      about?: any;\n      address_description?: any;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os?: any;\n      model?: any;\n      osVersion?: any;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: any[];\n  }\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Target {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface RootObject {\n      id: number;\n      user_id: number;\n      target_user: number;\n      active: number;\n      type: string;\n      created_at: string;\n      updated_at: string;\n      user: User;\n      target: Target;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "about",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "address_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "age_max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "age_min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "automatic_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "birthdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "disability_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "email_verified_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "illicit_drugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "legacy_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "max_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "notification_like",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "notification_match",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "notification_message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "notification_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "occupation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "old_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "os",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "osVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "plan_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "prejudice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "profile_picture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfilePicture[]",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "reason_cancel_account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "reason_cancel_plan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "relationship_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "sexual_orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "show_age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "show_as_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "show_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "show_me",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "stripe_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "subscription_order_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "subscriptions_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "target_account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "target_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "things_i_use",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "tiic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 89
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Term",
            "id": "interface-Term-97dcb905b90030cd380111cff03826d27c9e381afa77d974709146ad1d24b050f375ee35955fec5485aaa184437e1d9371d5d717fc8ee75a42315be54e4e1437",
            "file": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelPlacesAutocomplete {\n\n  export interface MatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface MainTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface SecondaryTextMatchedSubstring {\n      length: number;\n      offset: number;\n  }\n\n  export interface StructuredFormatting {\n      main_text: string;\n      main_text_matched_substrings: MainTextMatchedSubstring[];\n      secondary_text: string;\n      secondary_text_matched_substrings: SecondaryTextMatchedSubstring[];\n  }\n\n  export interface Term {\n      offset: number;\n      value: string;\n  }\n\n  export interface Prediction {\n      description: string;\n      matched_substrings: MatchedSubstring[];\n      place_id: string;\n      reference: string;\n      structured_formatting: StructuredFormatting;\n      terms: Term[];\n      types: string[];\n  }\n\n  export interface IRootObject {\n      predictions: Prediction[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "textHeader",
            "id": "interface-textHeader-c7ed452ba6cb5b56333efef4acb1fde4739dbf1b11f4295f1e8cf72eb79e2fb954ca8997361083c934f1d424ebc66b68238a62e2a4250e9cd24606c9127ccbbc",
            "file": "src/app/shared/components/header-cards-initial-page/model/header-cards.data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHeaderCardsInitialPage {\n  title: titleHeader;\n  text?: textHeader;\n}\nexport interface titleHeader {\n  id: string,\n  label: string,\n}\nexport interface textHeader {\n  id: string,\n  label: string,\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "titleHeader",
            "id": "interface-titleHeader-c7ed452ba6cb5b56333efef4acb1fde4739dbf1b11f4295f1e8cf72eb79e2fb954ca8997361083c934f1d424ebc66b68238a62e2a4250e9cd24606c9127ccbbc",
            "file": "src/app/shared/components/header-cards-initial-page/model/header-cards.data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHeaderCardsInitialPage {\n  title: titleHeader;\n  text?: textHeader;\n}\nexport interface titleHeader {\n  id: string,\n  label: string,\n}\nexport interface textHeader {\n  id: string,\n  label: string,\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-f04a8b449499bed10732c582c14167062fa0269bd390c0f82e8259f4af392bd02a72f9bad8cac3e014eb33e8b5746ce2c9c1474a6f060d89001fbf0a0ad1436a-1",
            "file": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ILikedMe {\n\n  export interface User {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name?: any;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type?: any;\n      gender?: any;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender?: any;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token?: any;\n      lat?: any;\n      lng?: any;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation?: any;\n      about?: any;\n      address_description?: any;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os?: any;\n      model?: any;\n      osVersion?: any;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: any[];\n  }\n\n  export interface ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n\n  export interface Target {\n      id: number;\n      stripe_id?: any;\n      subscriptions_id?: any;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate: string;\n      account_type: string;\n      gender: string;\n      show_as_gender: string;\n      sexual_orientation: string;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id?: any;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      subscription_order_id?: any;\n      profile_picture: ProfilePicture[];\n  }\n\n  export interface RootObject {\n      id: number;\n      user_id: number;\n      target_user: number;\n      active: number;\n      type: string;\n      created_at: string;\n      updated_at: string;\n      user: User;\n      target: Target;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "about",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "address_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "age_max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "age_min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "automatic_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "birthdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "disability_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "email_verified_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "illicit_drugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "legacy_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "max_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "notification_like",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "notification_match",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "notification_message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "notification_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "occupation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "old_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "os",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "osVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "plan_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "prejudice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "profile_picture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "reason_cancel_account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "reason_cancel_plan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "relationship_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "sexual_orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "show_age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "show_as_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "show_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "show_me",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "stripe_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "subscription_order_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "subscriptions_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "target_account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "target_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "things_i_use",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tiic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        },
        {
            "name": "Viewport",
            "id": "interface-Viewport-e163f168508ec8c8fe0955ed03d4e2d2f7a5420743d82942c81bc9751157dfba563fcd206ac367bad5ad49ec81adfe3ab5d2c4bfa9d45c16cdb93c29fa99c3fd",
            "file": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare module ModelGetAddressLatLong {\n\n  export interface PlusCode {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface AddressComponent {\n      long_name: string;\n      short_name: string;\n      types: string[];\n  }\n\n  export interface Location {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Northeast {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Viewport {\n      northeast: Northeast;\n      southwest: Southwest;\n  }\n\n  export interface Northeast2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Southwest2 {\n      lat: number;\n      lng: number;\n  }\n\n  export interface Bounds {\n      northeast: Northeast2;\n      southwest: Southwest2;\n  }\n\n  export interface Geometry {\n      location: Location;\n      location_type: string;\n      viewport: Viewport;\n      bounds: Bounds;\n  }\n\n  export interface PlusCode2 {\n      compound_code: string;\n      global_code: string;\n  }\n\n  export interface Result {\n      address_components: AddressComponent[];\n      formatted_address: string;\n      geometry: Geometry;\n      place_id: string;\n      plus_code: PlusCode2;\n      types: string[];\n  }\n\n  export interface IRootObjetct {\n      plus_code: PlusCode;\n      results: Result[];\n      status: string;\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "northeast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Northeast",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "southwest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Southwest",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ChangeMaskService",
            "id": "injectable-ChangeMaskService-4214b662e816447fe9f9de56b751bf0b46daa3d34c1838ad1a52cb7edc8cc33ad29aacb45e0e85f6f1e383cb09de7ac4de05994514fa650a82c9e41de026438b",
            "file": "src/app/shared/functions/change-mask/change-mask.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "changeMaskBirthDate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { EnumLanguages } from 'src/app/shared/enum/languages/languages.enum';\nimport { TranslateService } from './../../../core/services/translate/translate.service';\nimport { Injectable } from '@angular/core';\nimport { EnumFormatsInputs } from '../../enum/formats-inputs/formats-inputs.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeMaskService {\n\n  constructor(\n    private translateService: TranslateService,\n  ) { }\n\n  changeMaskBirthDate() {\n    if (EnumLanguages.PT === this.translateService.dataFormatation) {\n      return EnumFormatsInputs.datePt;\n    }\n    return EnumFormatsInputs.dateUs\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ChangePasswordService",
            "id": "injectable-ChangePasswordService-8db6acfad6415b8ed4a132ce530c3bf4dbaf8cf40f419c776c848335a2028fb46b74c372cad799708ed42406e5551012b85932d1ff91385c4922c42abee4f89d",
            "file": "src/app/core/services/change-password/change-password.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { ModelChangePassword } from 'src/app/shared/model/change-password/change-password.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangePasswordService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.updateUser,\n      new ChangePasswordSerializer());\n  }\n}\nclass ChangePasswordSerializer {\n  constructor () {}\n  fromJson(signInData: ModelChangePassword ): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: IUserData.RootObject): IUserData.RootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "ChatConnectorService",
            "id": "injectable-ChatConnectorService-6b505ea71e5627b07333cbaa356f6961656b0113276419716e13cfa6e6c76b5bbe510693462a7caa77756df6bd5f5cee15f37ea079ef8479427613625d48a893",
            "file": "src/app/core/services/websockets/chat-connector/chat-connector.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "connectWebSocketChatMessages",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Pusher from 'pusher-js';\nimport { environment } from 'src/environments/environment';\nimport { PusherAuthService } from '../pusher/pusher-auth/pusher-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatConnectorService {\n  constructor(\n    private pusherAuthService: PusherAuthService,\n\n  ) { }\n  connectWebSocketChatMessages(id) {\n    const pusherConnect = this.pusherAuthService.pusherConfig()\n    const pusherBind = pusherConnect.subscribe( `${environment.webSocket.channels.chat}${id}`);\n    pusherConnect.allChannels().forEach(channel => console.log(channel.name));\n    return pusherBind;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DialogsService",
            "id": "injectable-DialogsService-10e270c9538892c038d10aeae890b66a07fa9a4b8d69973fa05de7a479d8c0bd223b3a30c1d557cbee61d82e267435a1f942fb4f11e056ad097372075dbb7e17",
            "file": "src/app/shared/functions/dialogs/dialogs.service.ts",
            "properties": [
                {
                    "name": "isExtraSmall",
                    "defaultValue": "this.breakpointObserver.observe(\n    Breakpoints.XSmall\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BreakpointState>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isLarge",
                    "defaultValue": "this.breakpointObserver.observe(\n    Breakpoints.Large\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BreakpointState>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isMedium",
                    "defaultValue": "this.breakpointObserver.observe(\n    Breakpoints.Medium\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BreakpointState>",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [
                {
                    "name": "openActivateLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openChangePassword",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDevoteePlus",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openEditAboutMe",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openEditProfilePicture",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openProfile",
                    "args": [
                        {
                            "name": "data",
                            "type": "IUserData.IData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IUserData.IData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openQrCodeSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSizes",
                    "args": [
                        {
                            "name": "modal",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modal",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ModelGetAddressLatLong } from 'src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { ActivateLocationComponent } from '../../components/dialogs/activate-location/activate-location.component';\nimport { LoginQrCodeComponent } from '../../components/dialogs/login-qr-code/login-qr-code.component';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { ProfileComponent } from '../../components/dialogs/profile/profile.component';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { EditProfilePicturesComponent } from '../../components/dialogs/edit-profile-pictures/edit-profile-pictures.component';\nimport { EditAboutMeComponent } from '../../components/dialogs/edit-about-me/edit-about-me.component';\nimport { ChangePasswordComponent } from '../../components/dialogs/change-password/change-password.component';\nimport { UseOfTermsComponent } from '../../components/dialogs/use-of-terms/use-of-terms.component';\nimport { PrivacyPolicyComponent } from '../../components/dialogs/privacy-policy/privacy-policy.component';\nimport { DevoteePlusComponent } from '../../components/dialogs/devotee-plus/devotee-plus.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogsService {\n  isExtraSmall: Observable<BreakpointState> = this.breakpointObserver.observe(\n    Breakpoints.XSmall\n  );\n  isMedium: Observable<BreakpointState> = this.breakpointObserver.observe(\n    Breakpoints.Medium\n  );\n  isLarge: Observable<BreakpointState> = this.breakpointObserver.observe(\n    Breakpoints.Large\n  );\n  constructor(\n    private dialog: MatDialog,\n    private readonly breakpointObserver: BreakpointObserver\n  ) { }\n  updateSizes(modal) {\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n\n    const mediumDialogSubscription = this.isMedium.subscribe(size => {\n       size.matches ? modal.updateSize('70%', '50%') : undefined;\n    });\n    const largeDialogSubscription = this.isLarge.subscribe(size => {\n      size.matches ? modal.updateSize('70%', '70%'): undefined ;\n\n    });\n    modal.afterClosed().subscribe(() => {\n      smallDialogSubscription.unsubscribe();\n      mediumDialogSubscription.unsubscribe();\n      largeDialogSubscription.unsubscribe();\n    });\n\n  }\n  openQrCodeSignIn() {\n    const modal = this.dialog.open(\n      LoginQrCodeComponent,\n      {\n        width: 'calc(100% - 50px)',\n        maxWidth: '100vw'\n      }\n    );\n    this.updateSizes(modal);\n  }\n  openActivateLocation() {\n   const modal =  this.dialog.open(\n      ActivateLocationComponent,\n      {\n        width: 'calc(100% - 50px)',\n        maxWidth: '450px'\n      }\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n  openProfile(data?: IUserData.IData) {\n    const modal =  this.dialog.open(\n      ProfileComponent,\n      {\n        width: 'calc(100% - 50px)',\n        maxWidth: '1100px',\n        panelClass: 'profile-container',\n        data: data\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n  openEditProfilePicture() {\n    const modal =  this.dialog.open(\n      EditProfilePicturesComponent,\n      {\n        width: 'calc(50%)',\n        maxWidth: '1100px',\n        panelClass: 'container-edit-profile',\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n  openEditAboutMe() {\n    const modal =  this.dialog.open(\n      EditAboutMeComponent,\n      {\n        width: 'calc(80%)',\n        maxWidth: '1100px',\n        panelClass: 'container-edit-profile',\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n\n  openChangePassword() {\n    const modal =  this.dialog.open(\n      ChangePasswordComponent,\n      {\n        width: 'calc(60%)',\n        maxWidth: '800px',\n        panelClass: 'container-change-password',\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', ''): undefined ;\n    });\n    return modal;\n  }\n  openTerms() {\n    const modal =  this.dialog.open(\n      UseOfTermsComponent,\n      {\n        width: 'calc(80%)',\n        maxWidth: '1100px',\n        panelClass: 'container-terms-use',\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n  openPrivacy() {\n    const modal =  this.dialog.open(\n      PrivacyPolicyComponent,\n      {\n        width: 'calc(80%)',\n        maxWidth: '1100px',\n        panelClass: 'container-terms-use',\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n  openDevoteePlus() {\n    const modal =  this.dialog.open(\n      DevoteePlusComponent,\n      {\n        width: 'calc(80%)',\n        maxWidth: '1100px',\n        panelClass: 'profile-container',\n      },\n    );\n    const smallDialogSubscription = this.isExtraSmall.subscribe(size => {\n      size.matches ? modal.updateSize('100vw', '100vh'): undefined ;\n    });\n    return modal;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GenerateHashQrcodeService",
            "id": "injectable-GenerateHashQrcodeService-02789df17926aab8e98e06d43b773f80207230c2f12f0bb8a9bca665f246fa1affdff33555a4e70d6c55f2439d72b1e797d4af021b82623d748ee88d031b4091",
            "file": "src/app/core/services/generate-hash-qrcode/generate-hash-qrcode.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { ModelGenerateHashQrcodeResponse } from 'src/app/shared/model/qrcode/qrcode.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateHashQrcodeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.generateHash,\n      new GenerateHashQrcodeSerializer());\n  }\n}\nclass GenerateHashQrcodeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGenerateHashQrcodeResponse.IRootObjetct): ModelGenerateHashQrcodeResponse.IRootObjetct {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGenerateHashQrcodeResponse.IRootObjetct): ModelGenerateHashQrcodeResponse.IRootObjetct {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetAddressLatLongService",
            "id": "injectable-GetAddressLatLongService-d3000e386190e8785103f6c88ad425f3c0674d9e8179909b3ec4e9b89a879f1798badee082cc663b6a9d412f73d6583b0b4a73f48f026404547edfdb2285be3d",
            "file": "src/app/core/services/get-address-lat-long/get-address-lat-long.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetAddressLatLong } from 'src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetAddressLatLongService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.googleApis.api,\n      environment.googleApis.getAddrress,\n      new GetAddressLatLongSerializer());\n  }\n}\nclass GetAddressLatLongSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetAddressLatLong.IRootObjetct): ModelGetAddressLatLong.IRootObjetct {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetAddressLatLong.IRootObjetct): ModelGetAddressLatLong.IRootObjetct {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetChatService",
            "id": "injectable-GetChatService-cbfd4bb2bca661e3fed8ece504225d82dd19c9f0ed0178d8434e43e034f6015613392f118c9d3c4494e397f2f921407cc3ac4193696d5c56f86c3866c12bdb0d",
            "file": "src/app/core/services/get-chat/get-chat.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetChatService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getChat,\n      new GetChatServiceSerializer());\n  }\n}\nclass GetChatServiceSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any):  any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetCidsService",
            "id": "injectable-GetCidsService-9edf6c6e856f0c8a2dfb3023918e26089e048c86240b04cae20b22700e2912f0ad95aa0c41dd51a556440b44dedeb4308cac12965c196a0e9ccdbeb58bc3772d",
            "file": "src/app/core/services/get-cids/get-cids.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelCidsResponse } from 'src/app/shared/model/response/get-cids/get-cids.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetCidsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getCids,\n      new GetCidsSerializer());\n  }\n}\nclass GetCidsSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelCidsResponse.IRootObject): ModelCidsResponse.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelCidsResponse.IRootObject):  ModelCidsResponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetHosptalsService",
            "id": "injectable-GetHosptalsService-340997991213414908afc2cc6accc80578ec089d6dc125ebf8dc0a5f667f5f79dddbabd902a898770965b78f3991fdd7753b49ed6d4091939ca5d0eeecafe2f0",
            "file": "src/app/core/services/get-hosptals/get-hosptals.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelHosptals } from 'src/app/shared/model/response/get-hosptals/get-hosptals.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetHosptalsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getHosptals,\n      new GetHosptalsSerializer());\n  }\n}\nclass GetHosptalsSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelHosptals.IRootObject): ModelHosptals.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelHosptals.IRootObject):  ModelHosptals.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetMatchesService",
            "id": "injectable-GetMatchesService-dc16089ffb750c4da8d6f5baf29661b59621d3d9a9de817378a5a5476616603eb807247f8867407c4e160c1e3a27facf3d4a520ffad381e5c6b63b3a89e43307",
            "file": "src/app/core/services/get-matches/get-matches.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetMatchesService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getMatches,\n      new GetMatchesSerializer());\n  }\n}\nclass GetMatchesSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetMatchesResponse.RootObject): ModelGetMatchesResponse.RootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetMatchesResponse.RootObject):  ModelGetMatchesResponse.RootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetMedicalProceduresService",
            "id": "injectable-GetMedicalProceduresService-688c66b2f29b5de777fdaec0c62a90fa1a0683f6fcbf9879dc5fc9b807db78f5213d92f339f317bbe5f8240e522ce9d30b2ff2e217ca8986481b403e5bf05814",
            "file": "src/app/core/services/get-medical-procedures/get-medical-procedures.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicalProceduresReponse } from 'src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetMedicalProceduresService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getMedicalProcedure,\n      new GetMedicalProceduresSerializer());\n  }\n}\nclass GetMedicalProceduresSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetMedicalProceduresReponse.IRootObject): ModelGetMedicalProceduresReponse.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetMedicalProceduresReponse.IRootObject): ModelGetMedicalProceduresReponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetMedicinesService",
            "id": "injectable-GetMedicinesService-269a9780360f369b485920a972f961f917b93a26c079b13f47f6162ac49798a0ffe52849b27d9b56a0295b320f8784182760ff086dfb2477b9fd83cc61a73942",
            "file": "src/app/core/services/get-medicines/get-medicines.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetMedicinesService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getMedicines,\n      new GetMedicinesSerializer());\n  }\n}\nclass GetMedicinesSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetMedicines.IRootObject): ModelGetMedicines.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetMedicines.IRootObject): ModelGetMedicines.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "GetSelectsSpecialPersonService",
            "id": "injectable-GetSelectsSpecialPersonService-f6d11e97e1c627d2a3c9891ee107dad87c488059bc0fea71ee426cbc7e502903ebd7cc6adfa6ec098362bdf53684b78dc9779969014520dda279c686d634a637",
            "file": "src/app/shared/functions/get-selects-special-person/get-selects-special-person.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCids",
                    "args": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDrugsMedicines",
                    "args": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHosptals",
                    "args": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        },
                        {
                            "name": "pg",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pg",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHosptalsLogged",
                    "args": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        },
                        {
                            "name": "pg",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pg",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMedicalProcedures",
                    "args": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "valueSearch",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { State } from '@ngrx/store';\nimport { GetCidsService } from 'src/app/core/services/get-cids/get-cids.service';\nimport { GetHosptalsService } from 'src/app/core/services/get-hosptals/get-hosptals.service';\nimport { GetMedicalProceduresService } from 'src/app/core/services/get-medical-procedures/get-medical-procedures.service';\nimport { GetMedicinesService } from 'src/app/core/services/get-medicines/get-medicines.service';\nimport { IAppState } from 'src/app/state-management/app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetSelectsSpecialPersonService {\n\n  constructor(\n    protected state: State<IAppState>,\n    private getCidsService: GetCidsService,\n    private getHosptalsService: GetHosptalsService,\n    private getMedicalProceduresService: GetMedicalProceduresService,\n    private getMedicinesService: GetMedicinesService,\n  ) { }\n  async getCids(valueSearch: string = '') {\n    const params: Params = {\n      q: valueSearch\n    }\n    const responseSelect = await this.getCidsService.get(false, params).toPromise();\n    return responseSelect;\n\n  }\n  async getMedicalProcedures(valueSearch: string = '') {\n    const params: Params = {\n      q: valueSearch\n    }\n    const responseSelect = await this.getMedicalProceduresService.get(false, params).toPromise();\n    return responseSelect;\n\n  }\n  async getDrugsMedicines(valueSearch: string = '') {\n    const params: Params = {\n      q: valueSearch\n    }\n    const responseSelect = await this.getMedicinesService.get(false, params).toPromise();\n    return responseSelect;\n\n  }\n  async getHosptals(valueSearch: string = '', pg = 1) {\n    const registerData = this.state.getValue().registerData;\n    const params: Params = {\n      lat: registerData.lat,\n      lng: registerData.lng,\n      page: pg,\n      q: valueSearch\n\n    }\n    const responseSelect = await this.getHosptalsService.get(false, params).toPromise();\n    return responseSelect;\n  }\n  async getHosptalsLogged(valueSearch: string = '', pg = 1) {\n    const registerData = this.state.getValue().userData.data;\n    const params: Params = {\n      lat: registerData.lat,\n      lng: registerData.lng,\n      page: pg,\n      q: valueSearch\n\n    }\n    const responseSelect = await this.getHosptalsService.get(false, params).toPromise();\n    return responseSelect;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getCidsService",
                        "type": "GetCidsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getHosptalsService",
                        "type": "GetHosptalsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getMedicalProceduresService",
                        "type": "GetMedicalProceduresService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getMedicinesService",
                        "type": "GetMedicinesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getCidsService",
                        "type": "GetCidsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getHosptalsService",
                        "type": "GetHosptalsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getMedicalProceduresService",
                        "type": "GetMedicalProceduresService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getMedicinesService",
                        "type": "GetMedicinesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetSugestionMatchsService",
            "id": "injectable-GetSugestionMatchsService-65df88c014d97ac31c777ea7ac380e2af836132b43f6da718f0a477e51e17dc9b08701845b1e71700627712124f10f214aa74c59a234175ceaa3df32612fa984",
            "file": "src/app/core/services/get-sugestion-matchs/get-sugestion-matchs.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { ModelSugestionMatchsResponse } from 'src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetSugestionMatchsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getSugestionMatchs,\n      new GetSugestionSerializer());\n  }\n}\nclass GetSugestionSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelSugestionMatchsResponse.IRootObject): ModelSugestionMatchsResponse.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelSugestionMatchsResponse.IRootObject):  ModelSugestionMatchsResponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "HttpService",
            "id": "injectable-HttpService-01980e1c6fa4e78374c63c007ad341ed81da7fd443b88d153a36bb46052022d308d07f3eb807f2501558ee39776fc75f80685f51d9bfb84e01df305b9241a7e1",
            "file": "src/app/core/services/generics-http/httpService.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Resource } from 'src/app/shared/model/serializer/resource.model';\nimport { Serializer } from 'src/app/shared/model/serializer/serializer.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService <T extends Resource> {\n  options = {}\n  constructor(\n    private httpClient: HttpClient,\n    private api: string,\n    private url: string,\n    private serializer: Serializer,\n\n  ) {\n    this.options = {\n      responseType: 'json',\n      headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${localStorage?.getItem('access_token') || ''}`,\n      })\n  }\n  }\n  get(id?: any, params?: Params): Observable<T> {\n    return this.httpClient\n      .get(\n        this.returnUrl(id),\n        {\n          ...this.options,\n          params\n        })\n      .pipe(\n        map((data: any) => this.serializer.toJson(data) as T),\n\n        );\n  }\n  post(item?: T, id?: any, params?: Params): Observable<T> {\n    return this.httpClient\n      .post(\n        this.returnUrl(id),\n        this.serializer.fromJson(item),\n        {\n          ...this.options,\n          params\n        })\n      .pipe(map((data: any) => this.serializer.toJson(data) as T));\n  }\n  postWithOutOptions(item?: T, id?: any, params?: Params): Observable<T> {\n    return this.httpClient\n      .post(\n        this.returnUrl(id),\n        this.serializer.fromJson(item),\n        {\n          ...this.options,\n          params\n        })\n      .pipe(map((data: any) => this.serializer.toJson(data) as T));\n  }\n  getWithOutOptions(id?: any, params?: Params): Observable<T> {\n    return this.httpClient\n      .get(\n        this.returnUrl(id),\n        {\n          headers: {},\n          params\n        })\n      .pipe(\n        map((data: any) => this.serializer.toJson(data) as T),\n\n        );\n  }\n  delete(id?: any, params?: Params) {\n    return this.httpClient\n      .delete(\n        this.returnUrl(id),\n        {\n          ...this.options,\n          params\n        })\n      .pipe(\n        map((data: any) => this.serializer.toJson(data) as T),\n\n        );\n  }\n  private returnUrl(id?: any) {\n    const apiURL = `${this.api}${this.url}`;\n    if (id) {\n      return `${apiURL}/${id}`;\n    }\n    return apiURL;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "api",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serializer",
                        "type": "Serializer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serializer",
                        "type": "Serializer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LikeDislikeService",
            "id": "injectable-LikeDislikeService-8a23143dbae16099a4410e6fcbb8718a72b845c3683400a24b052d3f9e6f9b111f1a0054e68ed7148de2d905b430a750582c8ed5ba4adc2964d4241c345e4e78",
            "file": "src/app/core/services/like-dislike/like-dislike.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { ModelLikeDislikeReponse } from 'src/app/shared/model/response/like-dislike-response/like-dislike.model';\nimport { ModelLikeDislikeRequest } from 'src/app/shared/model/request/like-dislike-request/like-dislike.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LikeDislikeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.likes,\n      new LikeDislikeSerializer());\n  }\n}\nclass LikeDislikeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelLikeDislikeRequest): ModelLikeDislikeRequest {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelLikeDislikeReponse.IRootObject): ModelLikeDislikeReponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "LikedMeService",
            "id": "injectable-LikedMeService-e46363dc1128e5ccad8f7340edfc9c973154927593a3e4496368bc780848ee06ee27a317aafcce1abaeba7d7015c1124336e2b1211b0040c70d7d746af56f636",
            "file": "src/app/core/services/liked-me/liked-me.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { ModelLikeDislikeReponse } from 'src/app/shared/model/response/like-dislike-response/like-dislike.model';\nimport { ModelLikeDislikeRequest } from 'src/app/shared/model/request/like-dislike-request/like-dislike.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LikedMeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.likedMe,\n      new LikedMeSerializer());\n  }\n}\nclass LikedMeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: IUserData.RootObject): IUserData.RootObject{\n    if(signInData != undefined ) {\n      return signInData;\n    }\n  }\n\n  toJson(signInData:IUserData.RootObject): IUserData.RootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "ListCardsService",
            "id": "injectable-ListCardsService-62aa6e5639f560ea615f3f6207ed0c067c0de73d92a52a1f0cf3b13871901fadd367b5916957a3a870dcae322d9a14ec0fc2b335c8257b636a847082e869b94f",
            "file": "src/app/core/services/list-cards/list-cards.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\nimport { IListCards } from 'src/app/state-management/list-cards/list-cards.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListCardsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.listCards,\n      new ListCardsSerializer());\n  }\n}\nclass ListCardsSerializer {\n  constructor () {}\n  fromJson(registerRequest: IListCards.RootObject): IListCards.RootObject {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: IListCards.RootObject): IListCards.RootObject {\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "LocationService",
            "id": "injectable-LocationService-4d67f971b6d5b8f59f55744e11194347997c5773de803a09d801c5b50c02d2a243341bede2644f9872f102638fd70990d3a4d8c4d4da66f65519de3fd7580591",
            "file": "src/app/core/services/location.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCurrentLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<MLocation>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MLocation } from 'src/app/shared/model/location/location.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor() { }\n  getCurrentLocation(): Promise<MLocation> {\n    return new Promise<MLocation>((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(currentPosition => {\n        resolve(new MLocation(\n          currentPosition.coords.latitude,\n          currentPosition.coords.longitude,\n          true\n        ));\n      }, err => {\n        reject(err);\n      });\n    })\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "LoginGoogleService",
            "id": "injectable-LoginGoogleService-c7d8988e4b7466bb5ca6a08047732b67180134fbd91ade5d35fd8fca1843bcfe0dfc008e4f22e04bfaf12bcad40f8c2154df5acb497e4e05b79ea0485328405d",
            "file": "src/app/core/services/others-sign-in/login-google/login-google.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { ISignInGoogle } from 'src/app/shared/model/others-sign-in/sign-in.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGoogleService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.login,\n      new LoginGoogleSerializer());\n  }\n}\nclass LoginGoogleSerializer {\n  constructor (\n    private store?: Store<IAppState>,\n    private state?: State<IAppState>\n    ) {}\n  fromJson(signInData: ISignInGoogle): ISignInGoogle {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: IUserData.RootObject): any {\n    if (signInData.status) {\n      localStorage.setItem('access_token', `${signInData?.access_token}`);\n      localStorage.setItem('userId', `${signInData?.data.id}`);\n    }\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "LoginQrcodeConnectorService",
            "id": "injectable-LoginQrcodeConnectorService-b5b663248b0d17215b03dd6432b22aeec982241cbaf8285f3600afeee436669e11194d918561ebfba9cc78d5b0ea9186d3b196e47f13287fa9ff691055e3ed88",
            "file": "src/app/core/services/websockets/login-qrcode-connector/login-qrcode-connector.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "connectWebSOcket",
                    "args": [
                        {
                            "name": "hash",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hash",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n// import { pusher } from '../pusher/pusher-auth/pusher-auth.service';\nimport Pusher from 'pusher-js';\nimport { PusherAuthService } from '../pusher/pusher-auth/pusher-auth.service';\nimport { StateManagementFuncService } from 'src/app/shared/functions/state-management/state-management-func.service';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginQrcodeConnectorService {\n\n  constructor(\n    private pusherAuthService: PusherAuthService,\n  ) { }\n  connectWebSOcket(hash: string) {\n      const pusherConnect = this.pusherAuthService.pusherConfig()\n      const pusherBind = pusherConnect.subscribe( `${environment.webSocket.channels.loginQrCode}${hash}`);\n      pusherConnect.allChannels().forEach(channel => console.log(channel.name));\n      return pusherBind;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MatchesConnectorService",
            "id": "injectable-MatchesConnectorService-aa30e6f7dfa86443087d0e2224cb13a64447548cb4981555101311c51075d3f9da44edc914b51be57c879ddcf7bd0b1ef32ce9fe5d773843aec34acb896b00ea",
            "file": "src/app/core/services/websockets/matches-connector/matches-connector.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "connectWebSocketChatMessages",
                    "args": [
                        {
                            "name": "userId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { PusherAuthService } from '../pusher/pusher-auth/pusher-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchesConnectorService {\n  constructor(\n    private pusherAuthService: PusherAuthService,\n\n  ) { }\n  connectWebSocketChatMessages(userId) {\n    const pusherConnect = this.pusherAuthService.pusherConfig()\n    const pusherBind = pusherConnect.subscribe( `${environment.webSocket.channels.matches}${userId}`);\n    pusherConnect.allChannels().forEach(channel => console.log(channel.name));\n    return pusherBind;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PlacesAutoCompleteService",
            "id": "injectable-PlacesAutoCompleteService-b129a58f15906fd0e24b34ce3f79f0d2316d03048574b69d96f4fb0b4315fb1611c63deab81c52b697196f2af122d65ddf033f055f3b0787328594a81c35c5b5",
            "file": "src/app/core/services/places-auto-complete/places-auto-complete.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelPlacesAutocomplete } from 'src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesAutoCompleteService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.googleApis.api,\n      environment.googleApis.getPlacesAutocomplete,\n      new PlacesAutoCompleteSerializer());\n  }\n}\nclass PlacesAutoCompleteSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelPlacesAutocomplete.IRootObject): ModelPlacesAutocomplete.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelPlacesAutocomplete.IRootObject): ModelPlacesAutocomplete.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "PrivacyPolicyServiceEn",
            "id": "injectable-PrivacyPolicyServiceEn-f87f1e28a9afbadf5e07352376595cf9047419abd368596024ec9cf43e4089e8c3ed335b9c4059a9de432179407859a66d2bdb8cc8c6e79f3c295ba6cf9617a8",
            "file": "src/app/core/services/legal-policy/privacy-policy/privacy-policy.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { TranslateService } from '../../translate/translate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivacyPolicyServicePt extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.privacyPolicyPt,\n      new TermsOfUseSerializer());\n  }\n}\n\nclass TermsOfUseSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivacyPolicyServiceEn extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.privacyPolicyEn,\n      new TermsOfUseSerializer());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "PrivacyPolicyServicePt",
            "id": "injectable-PrivacyPolicyServicePt-f87f1e28a9afbadf5e07352376595cf9047419abd368596024ec9cf43e4089e8c3ed335b9c4059a9de432179407859a66d2bdb8cc8c6e79f3c295ba6cf9617a8",
            "file": "src/app/core/services/legal-policy/privacy-policy/privacy-policy.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { TranslateService } from '../../translate/translate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivacyPolicyServicePt extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.privacyPolicyPt,\n      new TermsOfUseSerializer());\n  }\n}\n\nclass TermsOfUseSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivacyPolicyServiceEn extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.privacyPolicyEn,\n      new TermsOfUseSerializer());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "ProfilePicturesService",
            "id": "injectable-ProfilePicturesService-5c9280d9f162c755fc7b5f144ce89bb3ce718426b3cf53bae72651776f0e0b0b677a1e36f06761733b7311db11dc0a142d8d411e61b79bb088861bb6bf4f50c9",
            "file": "src/app/core/services/profile-pictures/profile-pictures.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilePicturesService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.profilePictures,\n      new ProfilePicturesSerializer());\n    this.options = {\n      headers: new HttpHeaders({\n          'Authorization': `Bearer ${localStorage?.getItem('access_token') || ''}`,\n      })\n    }\n  }\n}\nclass ProfilePicturesSerializer {\n  constructor (\n    ) {}\n  fromJson(profileData: any): any {\n    if(profileData != undefined ) {\n      return profileData;\n    }\n\n  }\n\n  toJson(profileData: any): any {\n    return profileData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "PusherAuthService",
            "id": "injectable-PusherAuthService-847ddb9ae39b5554f319a6f2aed9a41b3eb48ddfdd8601e15b32c2d60d636a10fd27d7760f63ec400fc0d086211fed447b5dd48fe63ae8a8e5f8f34a4fae5428",
            "file": "src/app/core/services/websockets/pusher/pusher-auth/pusher-auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "pusherConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pusherConnect",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport Pusher from 'pusher-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PusherAuthService {\n\n  constructor() { }\n  pusherConfig() {\n    const webSocket = environment.webSocket;\n    const pusherConnect = new Pusher('1hfEn3KQ0G', {\n      cluster: webSocket.cluster,\n      disableStats: true,\n      forceTLS: false, // true quando for prod\n      wsHost: webSocket.url,\n      wssPort: webSocket.port,\n      wsPort: webSocket.port,\n    })\n    return pusherConnect;\n  }\n  pusherConnect() {\n    return this.pusherConfig();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "ReadHashQrcodeService",
            "id": "injectable-ReadHashQrcodeService-f86e7a85ada4b15a302c786be2456b69d0d972fc7e48a619d2a7db7fe567499e2f4f1ef75c9a399fac2ffeee17df92152838e19bf106947cd03114a64386372f",
            "file": "src/app/core/services/read-hash-qrcode/read-hash-qrcode.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { ModelGenerateHashQrcodeResponse } from 'src/app/shared/model/qrcode/qrcode.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReadHashQrcodeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.readHash,\n      new ReadHashQrcodeSerializer());\n  }\n}\nclass ReadHashQrcodeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "RegisterService",
            "id": "injectable-RegisterService-7a322d88c680a23ed8c7bac42d92b1069ae582eba69ed7d05809ea0d012830f1b8a00fdea68327dc0849daca3223eafb084e72eeeb5b376e895f1c02d8845285",
            "file": "src/app/core/services/register/register.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.registerUser,\n      new RegisterUserSerializer());\n  }\n}\nclass RegisterUserSerializer {\n  constructor () {}\n  fromJson(registerRequest: IRegisterUser): IRegisterUser {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: IUserData.RootObject): IUserData.RootObject {\n    localStorage.setItem('access_token', `${registerResponse.access_token}`);\n    localStorage.setItem('userId', `${registerResponse.data.id}`);\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "RouteService",
            "id": "injectable-RouteService-814ca282d472200263e6b265748f1ed8c85a1156d658224652168c41a4f90d27ac1814b2d0fef70e92b8623227c7206e8e6f35fe14416b571ecf365e7e5b01cd",
            "file": "src/app/shared/functions/routes/route.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "navigateToURL",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "verifyOpenSingIn",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { State } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteService {\n  constructor(\n    protected state: State<IAppState>,\n    private router: Router,\n\n  ){}\n  navigateToURL(url: string) {\n    this.router.navigate([url]);\n  }\n  verifyOpenSingIn() {\n    return this.state.getValue().controlsApp.openSingIn;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SendMessageService",
            "id": "injectable-SendMessageService-b88937abb092d9ccc1b58cd567da22fb8f333643ac9f7e0f0c5e60e6b83f202b138824c87d195b39e7fc5b6b33c12fd18f6216251063c77b03f147c0877f0e2a",
            "file": "src/app/core/services/send-message/send-message.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendMessageService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getChat,\n      new SendMessageSerializer());\n  }\n}\nclass SendMessageSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "SignInService",
            "id": "injectable-SignInService-86825290f6b09fabce859f3c9321b031a07f8a0230174f2c9e4315d8d2eacdf0f404bc685c6ec99754b9fc3ed70e9c300f8981e238c5839f5745dc244e0eebac",
            "file": "src/app/core/services/sign-in/sign-in.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.login,\n      new SignInSerializer());\n  }\n}\nclass SignInSerializer {\n  constructor (\n    private store?: Store<IAppState>,\n    private state?: State<IAppState>\n    ) {}\n  fromJson(signInData: ISignIn): ISignIn {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: IUserData.RootObject): any {\n    if (signInData.status) {\n      localStorage.setItem('access_token', `${signInData?.access_token}`);\n      localStorage.setItem('userId', `${signInData?.data.id}`);\n    }\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "SnackBarService",
            "id": "injectable-SnackBarService-710e9ecdb887c31f124b7296459b120e4cb335a646bfc29a143af306f195758caa8140aeb5b4adadc764f613f1918cb22a5fb5241966db79633df5f8846ccde8",
            "file": "src/app/core/services/snack-bar/snack-bar.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "openSnackbarLocationBlocked",
                    "args": [
                        {
                            "name": "mensage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "button",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "backgroudClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'bg-color-white'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mensage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "backgroudClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'bg-color-white'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSnackbarSuccess",
                    "args": [
                        {
                            "name": "mensage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "button",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "backgroudClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'success-snackbar'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mensage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "backgroudClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'success-snackbar'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSnackbarWarning",
                    "args": [
                        {
                            "name": "mensage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "button",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2000"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mensage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackBarService {\n\n  constructor(\n    private snackBar: MatSnackBar,\n  ) { }\n  openSnackbarLocationBlocked(mensage?: string, button?: string, backgroudClass = 'bg-color-white') {\n    this.snackBar.open(\n      mensage, button,\n      {\n        panelClass: backgroudClass,\n      }\n    );\n  }\n  openSnackbarSuccess(mensage: string, button: string, backgroudClass = 'success-snackbar') {\n    this.snackBar.open(\n      mensage, button,\n      {\n        duration: 2000,\n        panelClass: backgroudClass,\n      }\n    );\n  }\n  openSnackbarWarning(\n    mensage: string,\n    button: string,\n    duration = 2000\n    ) {\n    this.snackBar.open(\n      mensage, button,\n      {\n        duration: duration,\n        panelClass: 'warning-snackbar',\n      }\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StateManagementFuncService",
            "id": "injectable-StateManagementFuncService-e7f3e56a08bb5014376dfdc4443b810ff2704120ab5ca42121bbd8a518cee10065ef8816bd4e5acad83324d5fd3f2a432c8dbe32e116604f6c5323f197da4aad",
            "file": "src/app/shared/functions/state-management/state-management-func.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "funcAddAllDataUser",
                    "args": [
                        {
                            "name": "dataUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "funcAddDataRegister",
                    "args": [
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "incrementCountShowAdsense",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetCountShowAdsense",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { ResetCountShowAds, IncrementCountShowAds } from 'src/app/state-management/controls/copntrols-app.action';\nimport { AddDataRegister } from 'src/app/state-management/register/register.action';\nimport { AddAllDataUser } from 'src/app/state-management/user-data/user-data.action';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateManagementFuncService {\n\nconstructor(\n  protected store: Store<IAppState>,\n  protected state: State<IAppState>,\n) { }\n  funcAddAllDataUser(dataUser: any): boolean {\n    this.store.dispatch(new AddAllDataUser(dataUser));\n    return true;\n  }\n  funcAddDataRegister(payload: any): boolean {\n    this.store.dispatch(new AddDataRegister(payload));\n    return true;\n  }\n  incrementCountShowAdsense() {\n    this.store.dispatch(new IncrementCountShowAds());\n    return true;\n  }\n  resetCountShowAdsense() {\n    this.store.dispatch(new ResetCountShowAds());\n    return true;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TermsOfUseServiceEn",
            "id": "injectable-TermsOfUseServiceEn-400ee1b899a5f1aa7788493bc4958db552820d5c8cbd6910d4045208350de1d8d4e6597b3f76ef5276114941238f2c9ee78e56f798ac51f3a22ae363b7327bdb",
            "file": "src/app/core/services/legal-policy/terms-of-user/terms-of-use.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { TranslateService } from '../../translate/translate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsOfUseServicePt extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.termsOfUsePt,\n      new TermsOfUseSerializer());\n  }\n}\n\nclass TermsOfUseSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsOfUseServiceEn extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.termsOfUseEn,\n      new TermsOfUseSerializer());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "TermsOfUseServicePt",
            "id": "injectable-TermsOfUseServicePt-400ee1b899a5f1aa7788493bc4958db552820d5c8cbd6910d4045208350de1d8d4e6597b3f76ef5276114941238f2c9ee78e56f798ac51f3a22ae363b7327bdb",
            "file": "src/app/core/services/legal-policy/terms-of-user/terms-of-use.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from '../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { TranslateService } from '../../translate/translate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsOfUseServicePt extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.termsOfUsePt,\n      new TermsOfUseSerializer());\n  }\n}\n\nclass TermsOfUseSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsOfUseServiceEn extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.termsOfUseEn,\n      new TermsOfUseSerializer());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "TransformAgeService",
            "id": "injectable-TransformAgeService-96f53c49f06cca0c4f4fd49371d117efe0123f0304bd58454d6c7a830e2d75fe9d2682693a1d572ae78b3afddabae93cda412fd8e040a73e01ca01cf70842cea",
            "file": "src/app/shared/functions/transform-age/transform-age.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "transformAge",
                    "args": [
                        {
                            "name": "birthdateData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "birthdateData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransformAgeService {\n\n  constructor() { }\n\n  transformAge(birthdateData) {\n    const birthdate = birthdateData.replace(/-/g, '')\n    const year = Number(birthdate.substr(0, 4));\n    const today = new Date();\n    const month = Number(birthdate.substr(4, 2)) - 1;\n    const day = Number(birthdate.substr(6, 2));\n    let age = today.getFullYear() - year;\n    if (today.getMonth() < month || (today.getMonth() == month && today.getDate() < day)) {\n      age--;\n    }\n    return age;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "TranslateService",
            "id": "injectable-TranslateService-81b83845a7a26418fa262704695178a217ab06e69efe20eb421377c2627a76298f673068f43f05a22d8ecb67cccec479055eaecb67ef8e91173ae841c1ed58d7",
            "file": "src/app/core/services/translate/translate.service.ts",
            "properties": [
                {
                    "name": "dataFormatation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "textTranslate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "getDataTranslate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectLanguage",
                    "args": [
                        {
                            "name": "language",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "language",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "traductionLanguage",
                    "args": [
                        {
                            "name": "dataLanguage",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataLanguage",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "veriyLanguage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport * as data from './translate.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  textTranslate: string;\n  dataFormatation: string;\nconstructor() { }\n  veriyLanguage(): void {\n    let userLang = navigator.language;\n    this.selectLanguage(userLang);\n  }\n  getDataTranslate(): any {\n    return Object.entries(data);\n  }\n  selectLanguage(language): void {\n    let data = this.getDataTranslate();\n\n\n    switch (language) {\n      case 'pt-BR':\n        this.traductionLanguage(data[0][1]);\n        this.dataFormatation = 'pt';\n        break;\n      case 'en-US':\n        this.traductionLanguage(data[1][1]);\n        this.dataFormatation = 'us';\n        break;\n\n      default:\n        this.traductionLanguage(data[1][1]);\n        this.dataFormatation = 'us';\n        break;\n    }\n  }\n  traductionLanguage(dataLanguage): void{\n    this.textTranslate = dataLanguage;\n}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "UpdateDataService",
            "id": "injectable-UpdateDataService-6c1708b586aed947b8f3dfb9be4863461357fb52e30910901e4edaffa9a7b813eb712b10d8cddddc2c9967ddd5f84441525e9e95dae94533007e31e687737434",
            "file": "src/app/core/services/update-data/update-data.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateDataService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.updateUser,\n      new UpdateDataSerializer());\n  }\n}\nclass UpdateDataSerializer {\n  constructor (\n    private store?: Store<IAppState>,\n    private state?: State<IAppState>\n    ) {}\n  fromJson(signInData: IUserData.RootObject | any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ISignIn): any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "UpdatePictureByOrderService",
            "id": "injectable-UpdatePictureByOrderService-7ab136462f77967f19a0c5d47cab1d6b31f23b7505fa252eaa1fb9e8716275a8e48d189bae2f9e62057a25601b3610d5a45b7e1dfae4eb372db40c831f539278",
            "file": "src/app/core/services/update-picture-by-order/update-picture-by-order.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdatePictureByOrderService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.updateProfilePictureByOrder,\n      new UpdatePictureByOrderSerializer());\n      this.options = {\n        headers: new HttpHeaders({\n            'Authorization': `Bearer ${localStorage?.getItem('access_token') || ''}`,\n        })\n      }\n  }\n}\nclass UpdatePictureByOrderSerializer {\n  constructor (\n    ) {}\n  fromJson(profileData: any): any {\n    if(profileData != undefined ) {\n      return profileData;\n    }\n\n  }\n\n  toJson(profileData: any): any {\n    return profileData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "UserProfileService",
            "id": "injectable-UserProfileService-d0dca22e3ebd8db2b9c223346323ef98ef0c0e4e36c2e73ea8b22bbfd7d6bec447372c54b9bd3e081a87da4720555fb75fb748a37d1447d1d2154795aece1f07",
            "file": "src/app/core/services/user-profile/user-profile.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.userProfile,\n      new UserProfileSerializer());\n  }\n}\nclass UserProfileSerializer {\n  constructor () {}\n  fromJson(registerRequest: IUserData.RootObject): IUserData.RootObject {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: IUserData.RootObject): IUserData.RootObject {\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "VerifyEmailService",
            "id": "injectable-VerifyEmailService-02a08a5ed52ddf520d210dbddb11a4f0b12e8b05e13527432739f600444ced54e1e6f7731047a502fcbb6b28a9213d9aa0ed403d90a870102a2bbadfb6c407c1",
            "file": "src/app/core/services/verify-email/verify-email.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "getWithOutOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "postWithOutOptions",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                },
                {
                    "name": "returnUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "HttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\nimport { VerifyEmail } from 'src/app/shared/model/verify-email/verify-email.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerifyEmailService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.registerUser,\n      new RegisterUserSerializer());\n  }\n}\nclass RegisterUserSerializer {\n  constructor () {}\n  fromJson(registerRequest: string): string {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: VerifyEmail.Response): VerifyEmail.Response {\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "HttpService",
            "type": "injectable"
        },
        {
            "name": "VerifyStageRegisterDataService",
            "id": "injectable-VerifyStageRegisterDataService-66b27049e6bea0ee03627cf5a68707467a12fe5161a7b241825ea6697362cb3d569565ef9ca68030bc39f176b2a0198c745036f7b7f26948066cf25b3457bb51",
            "file": "src/app/shared/functions/verify-stage-register-data/verify-stage-register-data.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getUserData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "redirectRouteWithDataRegistered",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "verifyDataRegistered",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { INITIAL_STATE_REGISTER_USER } from './../../../state-management/register/register.state';\nimport { AddAllDataUser } from 'src/app/state-management/user-data/user-data.action';\nimport { Injectable } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { UserProfileService } from 'src/app/core/services/user-profile/user-profile.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { EnumRoutesApplication } from '../../enum/routes.enum';\nimport { RouteService } from '../routes/route.service';\nimport { StateManagementFuncService } from '../state-management/state-management-func.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerifyStageRegisterDataService {\n\n  constructor(\n    protected state: State<IAppState>,\n    protected store: Store<IAppState>,\n    private routeService: RouteService,\n    private userProfileService: UserProfileService,\n    private stateManagementFuncServices: StateManagementFuncService\n  ) { }\n  verifyDataRegistered() {\n\n  }\n  async redirectRouteWithDataRegistered() {\n    await this.getUserData();\n    const dataRegister: IRegisterUser  = this.state.getValue().registerData;\n    if (!dataRegister.account_type) {\n      this.routeService.navigateToURL(EnumRoutesApplication.REGISTER_WHO_ARE_YOU);\n    } else if(\n      !dataRegister.address_description\n      || !dataRegister.birthdate\n      || !dataRegister.gender\n      || !dataRegister.lat\n      || !dataRegister.lng\n      || !dataRegister.sexual_orientation\n      || !dataRegister.name\n    ) {\n      this.routeService.navigateToURL(EnumRoutesApplication.REGISTER_USER_DATA);\n    } else {\n      this.stateManagementFuncServices.funcAddDataRegister(INITIAL_STATE_REGISTER_USER);\n      this.routeService.navigateToURL(EnumRoutesApplication.MATCHS);\n    }\n  }\n  async getUserData() {\n    const userId = parseInt(localStorage.getItem('userId'));\n    if(userId) {\n      const dataUser: IUserData.RootObject = await this.userProfileService.get(userId).toPromise();\n      this.store.dispatch(new AddAllDataUser(dataUser));\n      this.stateManagementFuncServices.funcAddDataRegister(dataUser.data);\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stateManagementFuncServices",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stateManagementFuncServices",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuardService",
            "id": "injectable-AuthGuardService-6774669046534479708f0c90ec764d64e1688a56916fb917956a9b5b8ff6eced381875bc8701c86d21984283245a38c5f747c95d0460737492c67964b9e64dbc",
            "file": "src/app/core/guards/auth-guard/auth.guard.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate       {\n\n  constructor(\n    private router: Router,\n    ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Observable<boolean> | boolean {\n      const getLocalStorageId = localStorage.getItem('userId');\n      const getLocalStorageTOken = localStorage.getItem('access_token');\n\n      if (getLocalStorageId && getLocalStorageTOken){\n        return true;\n      }\n      this.router.navigate(['/login']);\n      return false;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "LoggedService",
            "id": "injectable-LoggedService-cfa290fd0b1c0af6747d440b2f5c9c8b4bad0ab650f6097c28ed6e94a8d591023a9c5869a152c9ae65583e7fcf76c3742ae0dfb936d363109adc370850594e86",
            "file": "src/app/core/guards/logged/logged.guard.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedService implements CanActivate {\n\n  constructor(\n    private router: Router,\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Observable<boolean> | boolean {\n      const getLocalStorageId = localStorage.getItem('userId');\n      const getLocalStorageTOken = localStorage.getItem('access_token');\n      if (!getLocalStorageId && !getLocalStorageTOken){\n        return true;\n      }\n      this.router.navigate([EnumRoutesApplication.MATCHS]);\n      return false;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "UserRegistredCorrectService",
            "id": "injectable-UserRegistredCorrectService-f301e56ffe9a0e688a39d1300408b1714db6544f5f24ff54e7b2ad08870147a8805da5212e68da0f2ee0ca29c1d7a145a2ebcadee605e3b117bc213df09bd72d",
            "file": "src/app/core/guards/user-registred-correct/user-registred-correct.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "verifyRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { State } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { VerifyStageRegisterDataService } from 'src/app/shared/functions/verify-stage-register-data/verify-stage-register-data.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistredCorrectService implements CanActivate {\n\n  constructor(\n    protected state: State<IAppState>,\n    private router: Router,\n    private verifyStageRegisterDataService: VerifyStageRegisterDataService,\n    private routeService: RouteService,\n\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Observable<boolean> | boolean {\n     this.verifyStageRegisterDataService.getUserData();\n     const dataRegister: IRegisterUser  = this.state.getValue().registerData;\n     if (!dataRegister.account_type) {\n      this.routeService.navigateToURL(EnumRoutesApplication.REGISTER_WHO_ARE_YOU)\n      return false;\n\n      } else if(\n        !dataRegister.address_description\n        || !dataRegister.birthdate\n        || !dataRegister.gender\n        || !dataRegister.lat\n        || !dataRegister.lng\n        || !dataRegister.sexual_orientation\n        || !dataRegister.name\n      ) {\n        return true;\n      }\n      this.router.navigate([EnumRoutesApplication.MATCHS]);\n      return false;\n    }\n  async verifyRoute() {\n    const routeReturned = await this.verifyStageRegisterDataService.redirectRouteWithDataRegistered();\n\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "WhoAreYouRegistredCorrectService",
            "id": "injectable-WhoAreYouRegistredCorrectService-8bd465bd1d9c6c07ef66d6338dab327b9b3147aae2a4b4808763f6099d7290f02a9f3d0b670259b9e6908d4be4cd53d328305769103da73ca04de126453b030f",
            "file": "src/app/core/guards/who-are-you-registred-correct/who-are-you-registred-correct.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "verifyRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { State } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { VerifyStageRegisterDataService } from 'src/app/shared/functions/verify-stage-register-data/verify-stage-register-data.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WhoAreYouRegistredCorrectService implements CanActivate {\n\n  constructor(\n    protected state: State<IAppState>,\n    private router: Router,\n    private verifyStageRegisterDataService: VerifyStageRegisterDataService,\n    private routeService: RouteService,\n\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Observable<boolean> | boolean {\n     this.verifyStageRegisterDataService.getUserData();\n     const dataRegister: IRegisterUser  = this.state.getValue().registerData;\n\n     if (!dataRegister.account_type) {\n      return true;\n\n    } else if(\n      !dataRegister.address_description\n      || !dataRegister.birthdate\n      || !dataRegister.gender\n      || !dataRegister.lat\n      || !dataRegister.lng\n      || !dataRegister.sexual_orientation\n      || !dataRegister.name\n    ) {\n      this.routeService.navigateToURL(EnumRoutesApplication.REGISTER_USER_DATA);\n      return false;\n    }\n      this.router.navigate([EnumRoutesApplication.MATCHS]);\n      return false;\n    }\n  async verifyRoute() {\n    const routeReturned = await this.verifyStageRegisterDataService.redirectRouteWithDataRegistered();\n\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AddAllDataUser",
            "id": "class-AddAllDataUser-17cec56dcda62306400c9003ce1093ac351ac195dcbe2eed27b07e03498655c343f036b4ec0bb335e55cb522d9f4ac0b2292db4fae79652c4ad12112f98c69ff",
            "file": "src/app/state-management/user-data/user-data.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActionCreator, createAction, props } from '@ngrx/store';\nimport { CustomAction } from '../custom.action';\nimport { UserDataEnum } from './user-data.enum';\n\n// export const addEmail = createAction(\n//     '[Register Component] addEmail',\n//     props<{ email: IRegisterUser }>()\n//   );\n\nexport class AddAllDataUser implements CustomAction {\n  type = UserDataEnum.addDataAll;\n  constructor(public payload?: any){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserDataEnum.addDataAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "ActionCreator",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "CustomAction"
            ]
        },
        {
            "name": "AddControlApp",
            "id": "class-AddControlApp-d05d0c7db8d1bc6deffe9b95eef8c568eac9c3237300021ac023c0e3128c4be82322641daf115be71b8410cc37c36a69d60e4995e702503fad8b07808d5cfd8f",
            "file": "src/app/state-management/controls/copntrols-app.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActionCreator, createAction, props } from '@ngrx/store';\nimport { CustomAction } from '../custom.action';\nimport { IControlsApp } from './controls-app.state';\nimport { ControlsEnum } from './register.enum';\n\n\nexport class AddControlApp implements CustomAction {\n  type = ControlsEnum.addControlsApp;\n  constructor(public payload?: any){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\nexport class IncrementCountShowAds implements CustomAction {\n  type = ControlsEnum.countShowAds;\n  constructor(public payload?: IControlsApp){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\nexport class ResetCountShowAds implements CustomAction {\n  type = ControlsEnum.addControlsApp;\n  constructor(public payload?: IControlsApp){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "ControlsEnum.addControlsApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "ActionCreator",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "CustomAction"
            ]
        },
        {
            "name": "AddDataRegister",
            "id": "class-AddDataRegister-9f6e020421a392e98c70df3ada36f9cbd13cc9f0a53dcf4051167719955ebeb9f4d3088d94fb37914f862bc1471b48309fb7b5022c52ae14bce1acb3b9fc0f08",
            "file": "src/app/state-management/register/register.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActionCreator, createAction, props } from '@ngrx/store';\nimport { CustomAction } from '../custom.action';\nimport { RegisterEnum } from './register.enum';\n\n// export const addEmail = createAction(\n//     '[Register Component] addEmail',\n//     props<{ email: IRegisterUser }>()\n//   );\n\nexport class AddDataRegister implements CustomAction {\n  type = RegisterEnum.addData;\n  constructor(public payload?: any){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "RegisterEnum.addData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "ActionCreator",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "CustomAction"
            ]
        },
        {
            "name": "AppPage",
            "id": "class-AppPage-216456583e25428faed77a4328eb6552448b3ca5a60c594cca6093d48f5332766845debfe0c05c76cc89e95f1f958caf3ad9253a229c2cc3a570b8ec03f2b4c7",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ChangePasswordSerializer",
            "id": "class-ChangePasswordSerializer-8db6acfad6415b8ed4a132ce530c3bf4dbaf8cf40f419c776c848335a2028fb46b74c372cad799708ed42406e5551012b85932d1ff91385c4922c42abee4f89d",
            "file": "src/app/core/services/change-password/change-password.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { ModelChangePassword } from 'src/app/shared/model/change-password/change-password.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangePasswordService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.updateUser,\n      new ChangePasswordSerializer());\n  }\n}\nclass ChangePasswordSerializer {\n  constructor () {}\n  fromJson(signInData: ModelChangePassword ): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: IUserData.RootObject): IUserData.RootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelChangePassword",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelChangePassword",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IUserData.RootObject",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomAction",
            "id": "class-CustomAction-5d2261b513489edf91722ce3f5d98ca8000284fe22e0c276cc38dfc264c7b682b753643a27b12b64f2103375c2d5f404b88686c4fa97627c34c86b0e2f648fa0",
            "file": "src/app/state-management/custom.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action, createAction } from '@ngrx/store';\n\nexport class CustomAction implements Action{\n  readonly type: string;\n  constructor(public payload?: any) {}\n  creatAction(): any {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "GenerateHashQrcodeSerializer",
            "id": "class-GenerateHashQrcodeSerializer-02789df17926aab8e98e06d43b773f80207230c2f12f0bb8a9bca665f246fa1affdff33555a4e70d6c55f2439d72b1e797d4af021b82623d748ee88d031b4091",
            "file": "src/app/core/services/generate-hash-qrcode/generate-hash-qrcode.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { ModelGenerateHashQrcodeResponse } from 'src/app/shared/model/qrcode/qrcode.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateHashQrcodeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.generateHash,\n      new GenerateHashQrcodeSerializer());\n  }\n}\nclass GenerateHashQrcodeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGenerateHashQrcodeResponse.IRootObjetct): ModelGenerateHashQrcodeResponse.IRootObjetct {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGenerateHashQrcodeResponse.IRootObjetct): ModelGenerateHashQrcodeResponse.IRootObjetct {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGenerateHashQrcodeResponse.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGenerateHashQrcodeResponse.IRootObjetct",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGenerateHashQrcodeResponse.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGenerateHashQrcodeResponse.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGenerateHashQrcodeResponse.IRootObjetct",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGenerateHashQrcodeResponse.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetAddressLatLongSerializer",
            "id": "class-GetAddressLatLongSerializer-d3000e386190e8785103f6c88ad425f3c0674d9e8179909b3ec4e9b89a879f1798badee082cc663b6a9d412f73d6583b0b4a73f48f026404547edfdb2285be3d",
            "file": "src/app/core/services/get-address-lat-long/get-address-lat-long.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetAddressLatLong } from 'src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetAddressLatLongService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.googleApis.api,\n      environment.googleApis.getAddrress,\n      new GetAddressLatLongSerializer());\n  }\n}\nclass GetAddressLatLongSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetAddressLatLong.IRootObjetct): ModelGetAddressLatLong.IRootObjetct {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetAddressLatLong.IRootObjetct): ModelGetAddressLatLong.IRootObjetct {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetAddressLatLong.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetAddressLatLong.IRootObjetct",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetAddressLatLong.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetAddressLatLong.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetAddressLatLong.IRootObjetct",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetAddressLatLong.IRootObjetct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetChatServiceSerializer",
            "id": "class-GetChatServiceSerializer-cbfd4bb2bca661e3fed8ece504225d82dd19c9f0ed0178d8434e43e034f6015613392f118c9d3c4494e397f2f921407cc3ac4193696d5c56f86c3866c12bdb0d",
            "file": "src/app/core/services/get-chat/get-chat.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetChatService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getChat,\n      new GetChatServiceSerializer());\n  }\n}\nclass GetChatServiceSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any):  any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetCidsSerializer",
            "id": "class-GetCidsSerializer-9edf6c6e856f0c8a2dfb3023918e26089e048c86240b04cae20b22700e2912f0ad95aa0c41dd51a556440b44dedeb4308cac12965c196a0e9ccdbeb58bc3772d",
            "file": "src/app/core/services/get-cids/get-cids.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelCidsResponse } from 'src/app/shared/model/response/get-cids/get-cids.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetCidsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getCids,\n      new GetCidsSerializer());\n  }\n}\nclass GetCidsSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelCidsResponse.IRootObject): ModelCidsResponse.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelCidsResponse.IRootObject):  ModelCidsResponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelCidsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelCidsResponse.IRootObject",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelCidsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelCidsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelCidsResponse.IRootObject",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelCidsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetHosptalsSerializer",
            "id": "class-GetHosptalsSerializer-340997991213414908afc2cc6accc80578ec089d6dc125ebf8dc0a5f667f5f79dddbabd902a898770965b78f3991fdd7753b49ed6d4091939ca5d0eeecafe2f0",
            "file": "src/app/core/services/get-hosptals/get-hosptals.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelHosptals } from 'src/app/shared/model/response/get-hosptals/get-hosptals.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetHosptalsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getHosptals,\n      new GetHosptalsSerializer());\n  }\n}\nclass GetHosptalsSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelHosptals.IRootObject): ModelHosptals.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelHosptals.IRootObject):  ModelHosptals.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelHosptals.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelHosptals.IRootObject",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelHosptals.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelHosptals.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelHosptals.IRootObject",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelHosptals.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetMatchesSerializer",
            "id": "class-GetMatchesSerializer-dc16089ffb750c4da8d6f5baf29661b59621d3d9a9de817378a5a5476616603eb807247f8867407c4e160c1e3a27facf3d4a520ffad381e5c6b63b3a89e43307",
            "file": "src/app/core/services/get-matches/get-matches.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetMatchesService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getMatches,\n      new GetMatchesSerializer());\n  }\n}\nclass GetMatchesSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetMatchesResponse.RootObject): ModelGetMatchesResponse.RootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetMatchesResponse.RootObject):  ModelGetMatchesResponse.RootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMatchesResponse.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetMatchesResponse.RootObject",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMatchesResponse.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMatchesResponse.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetMatchesResponse.RootObject",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMatchesResponse.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetMedicalProceduresSerializer",
            "id": "class-GetMedicalProceduresSerializer-688c66b2f29b5de777fdaec0c62a90fa1a0683f6fcbf9879dc5fc9b807db78f5213d92f339f317bbe5f8240e522ce9d30b2ff2e217ca8986481b403e5bf05814",
            "file": "src/app/core/services/get-medical-procedures/get-medical-procedures.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicalProceduresReponse } from 'src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetMedicalProceduresService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getMedicalProcedure,\n      new GetMedicalProceduresSerializer());\n  }\n}\nclass GetMedicalProceduresSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetMedicalProceduresReponse.IRootObject): ModelGetMedicalProceduresReponse.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetMedicalProceduresReponse.IRootObject): ModelGetMedicalProceduresReponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicalProceduresReponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetMedicalProceduresReponse.IRootObject",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicalProceduresReponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicalProceduresReponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetMedicalProceduresReponse.IRootObject",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicalProceduresReponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetMedicinesSerializer",
            "id": "class-GetMedicinesSerializer-269a9780360f369b485920a972f961f917b93a26c079b13f47f6162ac49798a0ffe52849b27d9b56a0295b320f8784182760ff086dfb2477b9fd83cc61a73942",
            "file": "src/app/core/services/get-medicines/get-medicines.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetMedicinesService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getMedicines,\n      new GetMedicinesSerializer());\n  }\n}\nclass GetMedicinesSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelGetMedicines.IRootObject): ModelGetMedicines.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelGetMedicines.IRootObject): ModelGetMedicines.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicines.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetMedicines.IRootObject",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicines.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicines.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelGetMedicines.IRootObject",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelGetMedicines.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetSugestionSerializer",
            "id": "class-GetSugestionSerializer-65df88c014d97ac31c777ea7ac380e2af836132b43f6da718f0a477e51e17dc9b08701845b1e71700627712124f10f214aa74c59a234175ceaa3df32612fa984",
            "file": "src/app/core/services/get-sugestion-matchs/get-sugestion-matchs.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { ModelSugestionMatchsResponse } from 'src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetSugestionMatchsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getSugestionMatchs,\n      new GetSugestionSerializer());\n  }\n}\nclass GetSugestionSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelSugestionMatchsResponse.IRootObject): ModelSugestionMatchsResponse.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelSugestionMatchsResponse.IRootObject):  ModelSugestionMatchsResponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelSugestionMatchsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelSugestionMatchsResponse.IRootObject",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelSugestionMatchsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelSugestionMatchsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelSugestionMatchsResponse.IRootObject",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelSugestionMatchsResponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ICid",
            "id": "class-ICid-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "description_en",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IData",
            "id": "class-IData-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "about",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "address_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "age_max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "age_min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "automatic_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "birthdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "disability_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "email_verified_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "illicit_drugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "legacy_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "max_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "medical_procedures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMedicalProcedures[]",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "my_cids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMyICDs[]",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "my_drugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMyDrugs[]",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "my_hospitals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMyHosptals[]",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "notification_like",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "notification_match",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "notification_message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "notification_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "occupation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "old_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "os",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 115
                },
                {
                    "name": "osVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "plan_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "prejudice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "profile_picture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfilePicture[]",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "reason_cancel_account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "reason_cancel_plan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "relationship_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "sexual_orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "show_age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "show_as_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "show_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "show_me",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "stripe_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "subscriptions_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "target_account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "target_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "things_i_use",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "tiic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 97
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IData",
            "id": "class-IData-dfe9de5cc7821bcdbc3ec38de007bb779650e7e20c61180081472081693c212bf5c1cb6afa803bf6ebf3a0fd20da936bb7096fbf0f1492f34d9e7e83461fcce0-1",
            "file": "src/app/shared/model/response/get-matches/get-matches.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IUserData } from \"src/app/state-management/user-data/user-data.state\";\n\nexport declare module ModelGetMatchesResponse {\n  export class RootObject {\n    status: boolean;\n    data: IData[];\n  }\n  export class IData {\n    match_id: number;\n    target_user: ITargetUser;\n    latest_message: any;\n  }\n  export class ITargetUser extends IUserData.IData {\n\n  }\n  export class ILastedMessage {\n    id: number;\n    match_id: number;\n    user_id: number;\n    recipient_id: number;\n    content: string;\n    type: string;\n    path: any;\n    read: boolean;\n    created_at: string;\n    updated_at: string;\n    user: IUserDataMatches;\n  }\n  export class IUserDataMatches extends IUserData.IData {\n\n  }\n}\n",
            "properties": [
                {
                    "name": "latest_message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "match_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "target_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITargetUser",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IData-1"
        },
        {
            "name": "IDrug",
            "id": "class-IDrug-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "codeiso2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "codeiso3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "name_en",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IHosptal",
            "id": "class-IHosptal-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "codeiso2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "codeiso3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ILastedMessage",
            "id": "class-ILastedMessage-dfe9de5cc7821bcdbc3ec38de007bb779650e7e20c61180081472081693c212bf5c1cb6afa803bf6ebf3a0fd20da936bb7096fbf0f1492f34d9e7e83461fcce0",
            "file": "src/app/shared/model/response/get-matches/get-matches.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IUserData } from \"src/app/state-management/user-data/user-data.state\";\n\nexport declare module ModelGetMatchesResponse {\n  export class RootObject {\n    status: boolean;\n    data: IData[];\n  }\n  export class IData {\n    match_id: number;\n    target_user: ITargetUser;\n    latest_message: any;\n  }\n  export class ITargetUser extends IUserData.IData {\n\n  }\n  export class ILastedMessage {\n    id: number;\n    match_id: number;\n    user_id: number;\n    recipient_id: number;\n    content: string;\n    type: string;\n    path: any;\n    read: boolean;\n    created_at: string;\n    updated_at: string;\n    user: IUserDataMatches;\n  }\n  export class IUserDataMatches extends IUserData.IData {\n\n  }\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "match_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "read",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "recipient_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUserDataMatches",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IMedicalProcedures",
            "id": "class-IMedicalProcedures-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "medical_procedures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMedicaPocedureData",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "medical_procedures_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IMedicaPocedureData",
            "id": "class-IMedicaPocedureData-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "name_en",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IMyDrugs",
            "id": "class-IMyDrugs-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "drug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDrug",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "drug_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IMyHosptals",
            "id": "class-IMyHosptals-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "hospital",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IHosptal",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "hospital_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IMyICDs",
            "id": "class-IMyICDs-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "cid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICid",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "cid_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IncrementCountShowAds",
            "id": "class-IncrementCountShowAds-d05d0c7db8d1bc6deffe9b95eef8c568eac9c3237300021ac023c0e3128c4be82322641daf115be71b8410cc37c36a69d60e4995e702503fad8b07808d5cfd8f",
            "file": "src/app/state-management/controls/copntrols-app.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActionCreator, createAction, props } from '@ngrx/store';\nimport { CustomAction } from '../custom.action';\nimport { IControlsApp } from './controls-app.state';\nimport { ControlsEnum } from './register.enum';\n\n\nexport class AddControlApp implements CustomAction {\n  type = ControlsEnum.addControlsApp;\n  constructor(public payload?: any){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\nexport class IncrementCountShowAds implements CustomAction {\n  type = ControlsEnum.countShowAds;\n  constructor(public payload?: IControlsApp){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\nexport class ResetCountShowAds implements CustomAction {\n  type = ControlsEnum.addControlsApp;\n  constructor(public payload?: IControlsApp){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "IControlsApp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "IControlsApp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IControlsApp",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "ControlsEnum.countShowAds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "ActionCreator",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "CustomAction"
            ]
        },
        {
            "name": "IRegisterUser",
            "id": "class-IRegisterUser-45074d3c442e23dbca9bcad0ced7d09a1ca6189081629108e347fe05384da41d38ea1e2fe66b8132f4795a7b0730a677b01890c8bb2c40addfa9a9010e1b84ba",
            "file": "src/app/state-management/register/register.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class IRegisterUser {\n\taccount_type: string; // selecao\n\tname: string;\n\tbirthdate: string; // depend language en: YYYY-MM-DD br: DD-MM-YYYY\n\tgender: string; // masculino; feminino; Trans and onther\n\tsexual_orientation: string; // heterosexual; homosexual; bisexual\n\ttarget_gender: string; // homem; mulher e todos\n\trelationship_type: string; // nao perguntar default all types: sexo; amizade; namoro e todos\n\ttarget_account_type: string; // i do know\n\tprofile_picture: Array<string>; // array de pictures\n\tautomatic_location: boolean; // caso boolean mostrar campos para cadastro de localizacao cidade estado\n\tlat: number;\n\tlng: number;\n\tnotification_message: boolean;// pergunta unica\n\tnotification_match: boolean; // pergunta unica\n\tnotification_like: boolean; // pergunta unica\n\toccupation: string; // decidir se mostrar no cadastro\n\tabout: string;// decidir se mostrar no cadastro\n\taddress_description: string; // \"Mogi das Cruzes - São Paulo\"\n\tage_min: number; // no cadastro nao perguntar trazer por default 18\n\tage_max: number; // no cadastro nao perguntar trazer por default 50\n\tmax_distance: number; // nao pergunta default 10km\n\tshow_as_gender: string; // string male, woman, trans\n\ttiic: boolean; // default false\n\tshow_me: boolean; // default true\n\tprejudice: boolean;  // default false\n\tshow_age: boolean;  // default true\n\tshow_distance: boolean;  // default true\n\tthings_i_use: string;  // default null\n\tillicit_drugs: string;  // default null\n}\nexport const INITIAL_STATE_REGISTER_USER: IRegisterUser = {\n\taccount_type: null,\n\tname: null,\n\tbirthdate: null,\n\tgender: null,\n\tsexual_orientation: null,\n\ttarget_gender: null,\n\trelationship_type: 'all',\n\ttarget_account_type: 'all',\n\tprofile_picture: null,\n\tautomatic_location: null,\n\tlat: null,\n\tlng: null,\n\tnotification_message: true,// pergunta unica\n\tnotification_match: true,\n\tnotification_like: true,\n\toccupation: null,\n\tabout: null,\n\taddress_description: null,\n\tage_min: 18,\n\tage_max: 50,\n\tmax_distance: 10, // nao pergunta default 10km\n\tshow_as_gender: null,// string male, woman, trans\n\ttiic: false, // default false\n\tshow_me: true, // default true\n\tprejudice: false,  // default false\n\tshow_age: true,  // default true\n\tshow_distance: true,  // default true\n\tthings_i_use: null,  // default null\n\tillicit_drugs: null,  // default null\n}\n",
            "properties": [
                {
                    "name": "about",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "address_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "age_max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "age_min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "automatic_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "birthdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "illicit_drugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "max_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "notification_like",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "notification_match",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "notification_message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "occupation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "prejudice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "profile_picture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<string>",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "relationship_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sexual_orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "show_age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "show_as_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "show_distance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "show_me",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "target_account_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "target_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "things_i_use",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "tiic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ISignIn",
            "id": "class-ISignIn-7c009a71408a0d28d7481ce0094aab637a35a9cc1f86dacdfb4d58d12bd83c57760d78e46b16914c39f19d2ce62cee2cd69b9187a1c7d19a7563b247fb0c1bac",
            "file": "src/app/shared/model/sign-in/sign-in.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Resource } from './../serializer/resource.model';\nexport class ISignIn extends Resource {\n  email: string;\n  password: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2,
                    "inheritance": {
                        "file": "Resource"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Resource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ISignInGoogle",
            "id": "class-ISignInGoogle-9db672422a5cba4e7a437894daaa2acb47556f60f242d8c30115f609f88be2821af2b9d15f67253d91acca035718c2e30713f2bb852c2a40a52f42babbfe6344",
            "file": "src/app/shared/model/others-sign-in/sign-in.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ISignInGoogle  {\n  email: string;\n  type: string;\n  token: string;\n  constructor(\n    email: string,\n    type: string,\n    token: string,\n  ) {\n    this.email = email;\n    this.type = type;\n    this.token = token;\n\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "email",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "token",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "email",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "token",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ITargetUser",
            "id": "class-ITargetUser-dfe9de5cc7821bcdbc3ec38de007bb779650e7e20c61180081472081693c212bf5c1cb6afa803bf6ebf3a0fd20da936bb7096fbf0f1492f34d9e7e83461fcce0",
            "file": "src/app/shared/model/response/get-matches/get-matches.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IUserData } from \"src/app/state-management/user-data/user-data.state\";\n\nexport declare module ModelGetMatchesResponse {\n  export class RootObject {\n    status: boolean;\n    data: IData[];\n  }\n  export class IData {\n    match_id: number;\n    target_user: ITargetUser;\n    latest_message: any;\n  }\n  export class ITargetUser extends IUserData.IData {\n\n  }\n  export class ILastedMessage {\n    id: number;\n    match_id: number;\n    user_id: number;\n    recipient_id: number;\n    content: string;\n    type: string;\n    path: any;\n    read: boolean;\n    created_at: string;\n    updated_at: string;\n    user: IUserDataMatches;\n  }\n  export class IUserDataMatches extends IUserData.IData {\n\n  }\n}\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IUserDataMatches",
            "id": "class-IUserDataMatches-dfe9de5cc7821bcdbc3ec38de007bb779650e7e20c61180081472081693c212bf5c1cb6afa803bf6ebf3a0fd20da936bb7096fbf0f1492f34d9e7e83461fcce0",
            "file": "src/app/shared/model/response/get-matches/get-matches.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IUserData } from \"src/app/state-management/user-data/user-data.state\";\n\nexport declare module ModelGetMatchesResponse {\n  export class RootObject {\n    status: boolean;\n    data: IData[];\n  }\n  export class IData {\n    match_id: number;\n    target_user: ITargetUser;\n    latest_message: any;\n  }\n  export class ITargetUser extends IUserData.IData {\n\n  }\n  export class ILastedMessage {\n    id: number;\n    match_id: number;\n    user_id: number;\n    recipient_id: number;\n    content: string;\n    type: string;\n    path: any;\n    read: boolean;\n    created_at: string;\n    updated_at: string;\n    user: IUserDataMatches;\n  }\n  export class IUserDataMatches extends IUserData.IData {\n\n  }\n}\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LikeDislikeSerializer",
            "id": "class-LikeDislikeSerializer-8a23143dbae16099a4410e6fcbb8718a72b845c3683400a24b052d3f9e6f9b111f1a0054e68ed7148de2d905b430a750582c8ed5ba4adc2964d4241c345e4e78",
            "file": "src/app/core/services/like-dislike/like-dislike.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { ModelLikeDislikeReponse } from 'src/app/shared/model/response/like-dislike-response/like-dislike.model';\nimport { ModelLikeDislikeRequest } from 'src/app/shared/model/request/like-dislike-request/like-dislike.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LikeDislikeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.likes,\n      new LikeDislikeSerializer());\n  }\n}\nclass LikeDislikeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelLikeDislikeRequest): ModelLikeDislikeRequest {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelLikeDislikeReponse.IRootObject): ModelLikeDislikeReponse.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelLikeDislikeRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelLikeDislikeRequest",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelLikeDislikeRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelLikeDislikeReponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelLikeDislikeReponse.IRootObject",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelLikeDislikeReponse.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LikedMeSerializer",
            "id": "class-LikedMeSerializer-e46363dc1128e5ccad8f7340edfc9c973154927593a3e4496368bc780848ee06ee27a317aafcce1abaeba7d7015c1124336e2b1211b0040c70d7d746af56f636",
            "file": "src/app/core/services/liked-me/liked-me.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { ModelLikeDislikeReponse } from 'src/app/shared/model/response/like-dislike-response/like-dislike.model';\nimport { ModelLikeDislikeRequest } from 'src/app/shared/model/request/like-dislike-request/like-dislike.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LikedMeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.likedMe,\n      new LikedMeSerializer());\n  }\n}\nclass LikedMeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: IUserData.RootObject): IUserData.RootObject{\n    if(signInData != undefined ) {\n      return signInData;\n    }\n  }\n\n  toJson(signInData:IUserData.RootObject): IUserData.RootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IUserData.RootObject",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IUserData.RootObject",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ListCardsAddData",
            "id": "class-ListCardsAddData-b11a5a461606865606209d92de9a26ac3e8592329e45036bdefedf306a4ee4d0b61a941d7d27d4b46f6a5b8907029796ff8d9ccdd681b5cabb0842bf8ffafac4",
            "file": "src/app/state-management/list-cards/list-cards.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActionCreator, createAction } from '@ngrx/store';\nimport { CustomAction } from '../custom.action';\nimport { ListCardsEnum } from './list-cards.enum';\n\nexport class ListCardsAddData implements CustomAction {\n  type = ListCardsEnum.addData;\n  constructor(public payload?: any){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "ListCardsEnum.addData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "ActionCreator",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "CustomAction"
            ]
        },
        {
            "name": "ListCardsSerializer",
            "id": "class-ListCardsSerializer-62aa6e5639f560ea615f3f6207ed0c067c0de73d92a52a1f0cf3b13871901fadd367b5916957a3a870dcae322d9a14ec0fc2b335c8257b636a847082e869b94f",
            "file": "src/app/core/services/list-cards/list-cards.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\nimport { IListCards } from 'src/app/state-management/list-cards/list-cards.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListCardsService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.listCards,\n      new ListCardsSerializer());\n  }\n}\nclass ListCardsSerializer {\n  constructor () {}\n  fromJson(registerRequest: IListCards.RootObject): IListCards.RootObject {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: IListCards.RootObject): IListCards.RootObject {\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "registerRequest",
                            "type": "IListCards.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IListCards.RootObject",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerRequest",
                            "type": "IListCards.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "registerResponse",
                            "type": "IListCards.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IListCards.RootObject",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerResponse",
                            "type": "IListCards.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LoginGoogleSerializer",
            "id": "class-LoginGoogleSerializer-c7d8988e4b7466bb5ca6a08047732b67180134fbd91ade5d35fd8fca1843bcfe0dfc008e4f22e04bfaf12bcad40f8c2154df5acb497e4e05b79ea0485328405d",
            "file": "src/app/core/services/others-sign-in/login-google/login-google.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { ISignInGoogle } from 'src/app/shared/model/others-sign-in/sign-in.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGoogleService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.login,\n      new LoginGoogleSerializer());\n  }\n}\nclass LoginGoogleSerializer {\n  constructor (\n    private store?: Store<IAppState>,\n    private state?: State<IAppState>\n    ) {}\n  fromJson(signInData: ISignInGoogle): ISignInGoogle {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: IUserData.RootObject): any {\n    if (signInData.status) {\n      localStorage.setItem('access_token', `${signInData?.access_token}`);\n      localStorage.setItem('userId', `${signInData?.data.id}`);\n    }\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ISignInGoogle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ISignInGoogle",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ISignInGoogle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MHeaderCardsInitialPage",
            "id": "class-MHeaderCardsInitialPage-943f045496a7e1fd6ea05c99f3f5764453524e5277efdb87f6d53682e7fe49fc8fe44895a1fdfdff91e4b81bd7d0e164dcef89776208f9ac298f134bfb8f6191",
            "file": "src/app/shared/model/header-cards-initial-page/header-cards-initial-page.enum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IHeaderCardsInitialPage, textHeader, titleHeader } from 'src/app/shared/components/header-cards-initial-page/model/header-cards.data';\n\nexport class MHeaderCardsInitialPage implements IHeaderCardsInitialPage{\n  title: titleHeader;\n  text?: textHeader;\n  constructor(title: titleHeader, text?: textHeader) {\n    this.title = title;\n    this.text = text;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "titleHeader",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "text",
                        "type": "textHeader",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "titleHeader",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "text",
                        "type": "textHeader",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "textHeader",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "titleHeader",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IHeaderCardsInitialPage"
            ]
        },
        {
            "name": "MLocation",
            "id": "class-MLocation-f73bd3df0352c8fd057a93f71bc5c369a63b4a031d6f6119b16b2b186fc115c3e7d5cdaa0a4dad8085f0c3063825f0003b96fbb2796f60d02450e6f560942364",
            "file": "src/app/shared/model/location/location.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class MLocation {\n  lat: number;\n  lng: number;\n  automatic_location: boolean;\n\n  constructor(\n    lat: number,\n    lng: number,\n    automatic_location: boolean,\n  ) {\n    this.lat = lat;\n    this.lng = lng;\n    this.automatic_location = automatic_location;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "lat",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lng",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "automatic_location",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "lat",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lng",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "automatic_location",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "automatic_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ModelCardImgTitleText",
            "id": "class-ModelCardImgTitleText-5f56c11e09131bd8b3432e70d98315e6a3b646ca36648581351a6f50760fa68b169ba3ac5ab9c72ee1887becc529e58771c880cd38ec4bf11d295c39399de896",
            "file": "src/app/shared/model/card-img-title-text/card-img-title-text.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ModelCardImgTitleText implements IModelCardImgTitleText {\n  id: string;\n  icon?: string;\n  title?: string;\n  text?: string;\n  constructor(\n    id: string,\n    icon?: string,\n    title?: string,\n    text?: string,\n    ){\n      this.id = id;\n      this.icon = icon;\n      this.text = text;\n      this.title = title;\n    }\n}\nexport interface IModelCardImgTitleText {\n  id: string;\n  icon?: string;\n  title?: string;\n  text?: string;\n}\ninterface defaultDataAnyway {\n  id: string;\n  label: string;\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "icon",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "icon",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IModelCardImgTitleText"
            ]
        },
        {
            "name": "ModelChangePassword",
            "id": "class-ModelChangePassword-b73298b270a564b5f11ee4a5eec8cd8d8ed7102af3012645e7740cd847a2ec3e9032a64d4386ab45b52a929867a3251c26a9e87a8a479bc015bba61fdc5ca168",
            "file": "src/app/shared/model/change-password/change-password.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ModelChangePassword {\n  old_password: string;\n  password: string;\n  constructor(\n    old_password: string,\n    password: string,\n  ){\n    this.old_password = old_password;\n    this.password = password;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "old_password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "old_password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "old_password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ModelErrors",
            "id": "class-ModelErrors-2402ed97b6505b1ac7e77ffec621689fa76e6d0d595139fdbdfa08dc80b2f4e03d409741e4690d0868509420a0287d560e53165e1004784ebe9cf4b1e01bb994",
            "file": "src/app/shared/model/errors/errors.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ModelErrors {\n  showError: boolean;\n  menssage: string;\n  constructor(\n    showError: boolean,\n    menssage: string,\n  ){\n    this.showError = showError;\n    this.menssage = menssage;\n  }\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "showError",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menssage",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "showError",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menssage",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "menssage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "showError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ModelLikeDislikeRequest",
            "id": "class-ModelLikeDislikeRequest-75e34a4daa1b1a99c5a62ae31e195283ad9f95e53500938808cf794763ddea24bb91731c44efd87dbdbd982f022ef6cd4dbc68c3a7da6cb994df2413c7e5b0b9",
            "file": "src/app/shared/model/request/like-dislike-request/like-dislike.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ModelLikeDislikeRequest {\n  user_id: number;\n  type: string;\n  constructor(\n    user_id: number,\n    type: string,\n  ){\n    this.user_id = user_id;\n    this.type = type;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "user_id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "user_id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PlacesAutoCompleteSerializer",
            "id": "class-PlacesAutoCompleteSerializer-b129a58f15906fd0e24b34ce3f79f0d2316d03048574b69d96f4fb0b4315fb1611c63deab81c52b697196f2af122d65ddf033f055f3b0787328594a81c35c5b5",
            "file": "src/app/core/services/places-auto-complete/places-auto-complete.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelPlacesAutocomplete } from 'src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesAutoCompleteService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.googleApis.api,\n      environment.googleApis.getPlacesAutocomplete,\n      new PlacesAutoCompleteSerializer());\n  }\n}\nclass PlacesAutoCompleteSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: ModelPlacesAutocomplete.IRootObject): ModelPlacesAutocomplete.IRootObject {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ModelPlacesAutocomplete.IRootObject): ModelPlacesAutocomplete.IRootObject {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelPlacesAutocomplete.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelPlacesAutocomplete.IRootObject",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelPlacesAutocomplete.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ModelPlacesAutocomplete.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModelPlacesAutocomplete.IRootObject",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ModelPlacesAutocomplete.IRootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProfilePicture",
            "id": "class-ProfilePicture-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "order",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProfilePicturesSerializer",
            "id": "class-ProfilePicturesSerializer-5c9280d9f162c755fc7b5f144ce89bb3ce718426b3cf53bae72651776f0e0b0b677a1e36f06761733b7311db11dc0a142d8d411e61b79bb088861bb6bf4f50c9",
            "file": "src/app/core/services/profile-pictures/profile-pictures.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilePicturesService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.profilePictures,\n      new ProfilePicturesSerializer());\n    this.options = {\n      headers: new HttpHeaders({\n          'Authorization': `Bearer ${localStorage?.getItem('access_token') || ''}`,\n      })\n    }\n  }\n}\nclass ProfilePicturesSerializer {\n  constructor (\n    ) {}\n  fromJson(profileData: any): any {\n    if(profileData != undefined ) {\n      return profileData;\n    }\n\n  }\n\n  toJson(profileData: any): any {\n    return profileData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ReadHashQrcodeSerializer",
            "id": "class-ReadHashQrcodeSerializer-f86e7a85ada4b15a302c786be2456b69d0d972fc7e48a619d2a7db7fe567499e2f4f1ef75c9a399fac2ffeee17df92152838e19bf106947cd03114a64386372f",
            "file": "src/app/core/services/read-hash-qrcode/read-hash-qrcode.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { ModelGenerateHashQrcodeResponse } from 'src/app/shared/model/qrcode/qrcode.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReadHashQrcodeService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.readHash,\n      new ReadHashQrcodeSerializer());\n  }\n}\nclass ReadHashQrcodeSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RegisterUserSerializer",
            "id": "class-RegisterUserSerializer-7a322d88c680a23ed8c7bac42d92b1069ae582eba69ed7d05809ea0d012830f1b8a00fdea68327dc0849daca3223eafb084e72eeeb5b376e895f1c02d8845285",
            "file": "src/app/core/services/register/register.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.registerUser,\n      new RegisterUserSerializer());\n  }\n}\nclass RegisterUserSerializer {\n  constructor () {}\n  fromJson(registerRequest: IRegisterUser): IRegisterUser {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: IUserData.RootObject): IUserData.RootObject {\n    localStorage.setItem('access_token', `${registerResponse.access_token}`);\n    localStorage.setItem('userId', `${registerResponse.data.id}`);\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "registerRequest",
                            "type": "IRegisterUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IRegisterUser",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerRequest",
                            "type": "IRegisterUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "registerResponse",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IUserData.RootObject",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerResponse",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RegisterUserSerializer",
            "id": "class-RegisterUserSerializer-02a08a5ed52ddf520d210dbddb11a4f0b12e8b05e13527432739f600444ced54e1e6f7731047a502fcbb6b28a9213d9aa0ed403d90a870102a2bbadfb6c407c1-1",
            "file": "src/app/core/services/verify-email/verify-email.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { IRegisterUser } from 'src/app/state-management/register/register.state';\nimport { VerifyEmail } from 'src/app/shared/model/verify-email/verify-email.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerifyEmailService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.registerUser,\n      new RegisterUserSerializer());\n  }\n}\nclass RegisterUserSerializer {\n  constructor () {}\n  fromJson(registerRequest: string): string {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: VerifyEmail.Response): VerifyEmail.Response {\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "registerRequest",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerRequest",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "registerResponse",
                            "type": "VerifyEmail.Response",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "VerifyEmail.Response",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerResponse",
                            "type": "VerifyEmail.Response",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RegisterUserSerializer-1"
        },
        {
            "name": "ResetCountShowAds",
            "id": "class-ResetCountShowAds-d05d0c7db8d1bc6deffe9b95eef8c568eac9c3237300021ac023c0e3128c4be82322641daf115be71b8410cc37c36a69d60e4995e702503fad8b07808d5cfd8f",
            "file": "src/app/state-management/controls/copntrols-app.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActionCreator, createAction, props } from '@ngrx/store';\nimport { CustomAction } from '../custom.action';\nimport { IControlsApp } from './controls-app.state';\nimport { ControlsEnum } from './register.enum';\n\n\nexport class AddControlApp implements CustomAction {\n  type = ControlsEnum.addControlsApp;\n  constructor(public payload?: any){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\nexport class IncrementCountShowAds implements CustomAction {\n  type = ControlsEnum.countShowAds;\n  constructor(public payload?: IControlsApp){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\nexport class ResetCountShowAds implements CustomAction {\n  type = ControlsEnum.addControlsApp;\n  constructor(public payload?: IControlsApp){}\n  creatAction(): ActionCreator {\n    return createAction(this.type);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "IControlsApp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "IControlsApp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IControlsApp",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "ControlsEnum.addControlsApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "creatAction",
                    "args": [],
                    "optional": false,
                    "returnType": "ActionCreator",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "CustomAction"
            ]
        },
        {
            "name": "Resource",
            "id": "class-Resource-3afaca7f0e20910188362e7c9805e533420034ddf606ef035aebe7997ac38b265caced9dffa061cb018a83a4f8207525b2c9a2c7a25c064861626357492acf86",
            "file": "src/app/shared/model/serializer/resource.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Resource {\n  id?: number\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RootObject",
            "id": "class-RootObject-05bb75eb2f8cc66c8890f0c94db163cd3ba3b1416267c3e91c3a87bd8992e591d0eecf59ebe03dc8d38df65b0818674790819f01b93edb26b67da85f53f1532f",
            "file": "src/app/state-management/list-cards/list-cards.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IUserData } from \"../user-data/user-data.state\";\n\nexport declare module IListCards {\n\n  class RootObject {\n    status: boolean;\n    data: Array<IUserData.IData>;\n  }\n}\n\nexport const INITIAL_STATE_LIST_CARDS: IListCards.RootObject = {\n  status: null,\n  data: null,\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IUserData.IData>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RootObject",
            "id": "class-RootObject-e928e3770f63fe34aa72d178caefa8b32ec2e8c857a35525325bd2356d9dd21b167e14655b8f231bb0488fb6fab4abbc3b29b3d0848991bc9e3e42491fe2f640-1",
            "file": "src/app/state-management/user-data/user-data.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare module IUserData {\n\n  export class ProfilePicture {\n      id: number;\n      user_id: number;\n      path: string;\n      main: number;\n      created_at: Date;\n      updated_at: Date;\n      order: number;\n  }\n  export class ICid {\n    id: number;\n    code: string;\n    description: string;\n    description_en: string;\n  }\n\n  export class IMyICDs {\n    id: number;\n    user_id: number;\n    cid_id: number;\n    created_at: string;\n    updated_at: string;\n    cid: ICid;\n  }\n  export class IHosptal {\n    id: number;\n    name: string;\n    lat: number;\n    lng: number;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyHosptals {\n    id: number;\n    user_id: number;\n    hospital_id: number;\n    created_at: string;\n    updated_at: string;\n    hospital: IHosptal;\n  }\n  export class IDrug {\n    id: number;\n    name: string;\n    name_en: string;\n    country: string;\n    codeiso2: string;\n    codeiso3: string;\n  }\n  export class IMyDrugs {\n    id: number;\n    user_id: number;\n    drug_id: number;\n    created_at: string;\n    updated_at: string;\n    drug: IDrug;\n  }\n  export class IMedicaPocedureData {\n    id: number;\n    name: string;\n    name_en: string;\n  }\n  export class IMedicalProcedures {\n    id: number;\n    user_id: number;\n    medical_procedures_id: number;\n    created_at: string;\n    updated_at: string;\n    medical_procedures: IMedicaPocedureData;\n  }\n  export class IData {\n      id: number;\n      stripe_id: string;\n      subscriptions_id: string;\n      plan_type: string;\n      name: string;\n      active: number;\n      email: string;\n      birthdate?: any;\n      account_type: string;\n      gender: string;\n      show_as_gender?: any;\n      sexual_orientation?: any;\n      target_gender: string;\n      type: string;\n      email_verified_at?: any;\n      old_id: number;\n      notification_token: string;\n      lat: number;\n      lng: number;\n      age_min: number;\n      age_max: number;\n      max_distance: number;\n      created_at: string;\n      updated_at: string;\n      automatic_location: boolean;\n      disability_description?: any;\n      occupation: string;\n      about: string;\n      address_description: string;\n      tiic: boolean;\n      show_me: boolean;\n      prejudice: boolean;\n      show_age: boolean;\n      show_distance: boolean;\n      things_i_use?: any;\n      illicit_drugs?: any;\n      relationship_type: string;\n      target_account_type: string;\n      notification_message: boolean;\n      notification_match: boolean;\n      notification_like: boolean;\n      os: string;\n      model: string;\n      osVersion: string;\n      reason_cancel_plan?: any;\n      reason_cancel_account?: any;\n      legacy_user: number;\n      profile_picture: ProfilePicture[];\n      my_cids: IMyICDs[];\n      my_hospitals: IMyHosptals[];\n      my_drugs: IMyDrugs[]\n      medical_procedures: IMedicalProcedures[]\n  }\n\n  export class RootObject {\n      status: boolean;\n      data: IData;\n      access_token?: string;\n  }\n\n\n}\nexport const INITIAL_STATE_USER_DATA: IUserData.RootObject = {\n  status: null,\n  data: null,\n  access_token: null,\n}\n",
            "properties": [
                {
                    "name": "access_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 131
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IData",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 129
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RootObject-1"
        },
        {
            "name": "RootObject",
            "id": "class-RootObject-dfe9de5cc7821bcdbc3ec38de007bb779650e7e20c61180081472081693c212bf5c1cb6afa803bf6ebf3a0fd20da936bb7096fbf0f1492f34d9e7e83461fcce0-2",
            "file": "src/app/shared/model/response/get-matches/get-matches.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IUserData } from \"src/app/state-management/user-data/user-data.state\";\n\nexport declare module ModelGetMatchesResponse {\n  export class RootObject {\n    status: boolean;\n    data: IData[];\n  }\n  export class IData {\n    match_id: number;\n    target_user: ITargetUser;\n    latest_message: any;\n  }\n  export class ITargetUser extends IUserData.IData {\n\n  }\n  export class ILastedMessage {\n    id: number;\n    match_id: number;\n    user_id: number;\n    recipient_id: number;\n    content: string;\n    type: string;\n    path: any;\n    read: boolean;\n    created_at: string;\n    updated_at: string;\n    user: IUserDataMatches;\n  }\n  export class IUserDataMatches extends IUserData.IData {\n\n  }\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IData[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "RootObject-2"
        },
        {
            "name": "SendMessageSerializer",
            "id": "class-SendMessageSerializer-b88937abb092d9ccc1b58cd567da22fb8f333643ac9f7e0f0c5e60e6b83f202b138824c87d195b39e7fc5b6b33c12fd18f6216251063c77b03f147c0877f0e2a",
            "file": "src/app/core/services/send-message/send-message.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from '../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendMessageService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.getChat,\n      new SendMessageSerializer());\n  }\n}\nclass SendMessageSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SignInSerializer",
            "id": "class-SignInSerializer-86825290f6b09fabce859f3c9321b031a07f8a0230174f2c9e4315d8d2eacdf0f404bc685c6ec99754b9fc3ed70e9c300f8981e238c5839f5745dc244e0eebac",
            "file": "src/app/core/services/sign-in/sign-in.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.login,\n      new SignInSerializer());\n  }\n}\nclass SignInSerializer {\n  constructor (\n    private store?: Store<IAppState>,\n    private state?: State<IAppState>\n    ) {}\n  fromJson(signInData: ISignIn): ISignIn {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: IUserData.RootObject): any {\n    if (signInData.status) {\n      localStorage.setItem('access_token', `${signInData?.access_token}`);\n      localStorage.setItem('userId', `${signInData?.data.id}`);\n    }\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ISignIn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ISignIn",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ISignIn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TermsOfUseSerializer",
            "id": "class-TermsOfUseSerializer-f87f1e28a9afbadf5e07352376595cf9047419abd368596024ec9cf43e4089e8c3ed335b9c4059a9de432179407859a66d2bdb8cc8c6e79f3c295ba6cf9617a8",
            "file": "src/app/core/services/legal-policy/privacy-policy/privacy-policy.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from '../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { TranslateService } from '../../translate/translate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivacyPolicyServicePt extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.privacyPolicyPt,\n      new TermsOfUseSerializer());\n  }\n}\n\nclass TermsOfUseSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivacyPolicyServiceEn extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.privacyPolicyEn,\n      new TermsOfUseSerializer());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TermsOfUseSerializer",
            "id": "class-TermsOfUseSerializer-400ee1b899a5f1aa7788493bc4958db552820d5c8cbd6910d4045208350de1d8d4e6597b3f76ef5276114941238f2c9ee78e56f798ac51f3a22ae363b7327bdb-1",
            "file": "src/app/core/services/legal-policy/terms-of-user/terms-of-use.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from '../../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ModelGetMedicines } from 'src/app/shared/model/response/get-medicines/get-medicines.model';\nimport { TranslateService } from '../../translate/translate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsOfUseServicePt extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.termsOfUsePt,\n      new TermsOfUseSerializer());\n  }\n}\n\nclass TermsOfUseSerializer {\n  constructor (\n    ) {}\n  fromJson(signInData: any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: any): any {\n    return signInData;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsOfUseServiceEn extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.termsOfUseEn,\n      new TermsOfUseSerializer());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TermsOfUseSerializer-1"
        },
        {
            "name": "UpdateDataSerializer",
            "id": "class-UpdateDataSerializer-6c1708b586aed947b8f3dfb9be4863461357fb52e30910901e4edaffa9a7b813eb712b10d8cddddc2c9967ddd5f84441525e9e95dae94533007e31e687737434",
            "file": "src/app/core/services/update-data/update-data.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { ISignIn } from 'src/app/shared/model/sign-in/sign-in.state';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { State, Store } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateDataService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.updateUser,\n      new UpdateDataSerializer());\n  }\n}\nclass UpdateDataSerializer {\n  constructor (\n    private store?: Store<IAppState>,\n    private state?: State<IAppState>\n    ) {}\n  fromJson(signInData: IUserData.RootObject | any): any {\n    if(signInData != undefined ) {\n      return signInData;\n    }\n\n  }\n\n  toJson(signInData: ISignIn): any {\n    return signInData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject | any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "IUserData.RootObject | any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "ISignIn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "ISignIn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdatePictureByOrderSerializer",
            "id": "class-UpdatePictureByOrderSerializer-7ab136462f77967f19a0c5d47cab1d6b31f23b7505fa252eaa1fb9e8716275a8e48d189bae2f9e62057a25601b3610d5a45b7e1dfae4eb372db40c831f539278",
            "file": "src/app/core/services/update-picture-by-order/update-picture-by-order.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdatePictureByOrderService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.updateProfilePictureByOrder,\n      new UpdatePictureByOrderSerializer());\n      this.options = {\n        headers: new HttpHeaders({\n            'Authorization': `Bearer ${localStorage?.getItem('access_token') || ''}`,\n        })\n      }\n  }\n}\nclass UpdatePictureByOrderSerializer {\n  constructor (\n    ) {}\n  fromJson(profileData: any): any {\n    if(profileData != undefined ) {\n      return profileData;\n    }\n\n  }\n\n  toJson(profileData: any): any {\n    return profileData;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "profileData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserProfileSerializer",
            "id": "class-UserProfileSerializer-d0dca22e3ebd8db2b9c223346323ef98ef0c0e4e36c2e73ea8b22bbfd7d6bec447372c54b9bd3e081a87da4720555fb75fb748a37d1447d1d2154795aece1f07",
            "file": "src/app/core/services/user-profile/user-profile.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpService } from './../generics-http/httpService.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService extends HttpService<any>{\n  constructor(\n    httpClient: HttpClient,\n    ) {\n    super(\n      httpClient,\n      environment.api,\n      environment.urls.userProfile,\n      new UserProfileSerializer());\n  }\n}\nclass UserProfileSerializer {\n  constructor () {}\n  fromJson(registerRequest: IUserData.RootObject): IUserData.RootObject {\n    if(registerRequest != undefined ) {\n      return registerRequest;\n    }\n\n  }\n\n  toJson(registerResponse: IUserData.RootObject): IUserData.RootObject {\n    return registerResponse;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "properties": [],
            "methods": [
                {
                    "name": "fromJson",
                    "args": [
                        {
                            "name": "registerRequest",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IUserData.RootObject",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerRequest",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toJson",
                    "args": [
                        {
                            "name": "registerResponse",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IUserData.RootObject",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerResponse",
                            "type": "IUserData.RootObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "ActivateLocationComponent",
            "id": "component-ActivateLocationComponent-af19c63d2311bb66e1203f67bd06cd6cbe5868124496ff2ebf21a5b07682f897d9f4fb4925dd1758603b580dd389fd358a476aa64e54a973d0b912eb330ecb76",
            "file": "src/app/shared/components/dialogs/activate-location/activate-location.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-activate-location",
            "styleUrls": [
                "./activate-location.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./activate-location.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "enableButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "errorsEnum",
                    "defaultValue": "ErrorsEnum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "loadingGetLocation",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "options",
                    "defaultValue": "[null]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelPlacesAutocomplete.Prediction[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "optionsa",
                    "defaultValue": "{\n    componentRestrictions: {\n      country: []\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "showAddManually",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "activateLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addManually",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "continueRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "locationSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "returnModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchPlace",
                    "args": [
                        {
                            "name": "address",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "address",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Params } from '@angular/router';\nimport { State, Store } from '@ngrx/store';\nimport { GetAddressLatLongService } from 'src/app/core/services/get-address-lat-long/get-address-lat-long.service';\nimport { LocationService } from 'src/app/core/services/location.service';\nimport { PlacesAutoCompleteService } from 'src/app/core/services/places-auto-complete/places-auto-complete.service';\nimport { SnackBarService } from 'src/app/core/services/snack-bar/snack-bar.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ErrorsEnum } from 'src/app/shared/enum/errors/errors.enum';\nimport { MLocation } from 'src/app/shared/model/location/location.model';\nimport { ModelGetAddressLatLong } from 'src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model';\nimport { ModelPlacesAutocomplete } from 'src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { AddDataRegister } from 'src/app/state-management/register/register.action';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-activate-location',\n  templateUrl: './activate-location.component.html',\n  styleUrls: ['./activate-location.component.scss']\n})\nexport class ActivateLocationComponent implements OnInit {\n  dataTexts\n\n  showAddManually = false;\n  loadingGetLocation = false;\n  enableButton = false;\n  errorsEnum = ErrorsEnum;\n  formGroup: FormGroup;\n  options: ModelPlacesAutocomplete.Prediction[] = [null];\n  optionsa = {\n    componentRestrictions: {\n      country: []\n    }\n  }\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    protected store: Store<IAppState>,\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private matDialogRef: MatDialogRef<ActivateLocationComponent>,\n    private locationService: LocationService,\n    private formBuilder: FormBuilder,\n    private snackBarService: SnackBarService,\n    private getAddressLatLongService: GetAddressLatLongService,\n    private placesAutoCompleteService: PlacesAutoCompleteService,\n  ) {\n    matDialogRef.disableClose = true;\n   }\n\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.initForm();\n  }\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      address_description: [\n        '',\n        [\n          Validators.required,\n        ]\n      ]\n    })\n\n  }\n  closeModal() {\n    this.matDialogRef.close(c => {\n\n    });\n  }\n  activateLocation() {\n    this.loadingGetLocation = true;\n    this.locationService\n      .getCurrentLocation()\n      .then(async (response: MLocation) => {\n        const params: Params = {\n          latlng: `${response.lat}, ${response.lng}`,\n          key: environment.googleApis.key\n        }\n        const address: ModelGetAddressLatLong.IRootObjetct = await this.getAddressLatLongService.getWithOutOptions(false, params).toPromise();\n        const dataLocation = {\n          ...response,\n          address_description: address.results[0].formatted_address\n        }\n        this.store.dispatch(new AddDataRegister(dataLocation));\n        this.loadingGetLocation = false;\n        this.closeModal();\n      })\n      .catch(reject => {\n        this.loadingGetLocation = false;\n        const snackBarLocationBlocked = this.dataTexts.snacksBars.locationBlocked\n        this.snackBarService\n          .openSnackbarLocationBlocked(\n            snackBarLocationBlocked.mensage,\n            snackBarLocationBlocked.button);\n        this.addManually();\n      });\n  }\n  addManually() {\n    this.showAddManually = true;\n  }\n  returnModal() {\n    this.showAddManually = false;\n  }\n  async searchPlace(address: any) {\n    this.store.dispatch(new AddDataRegister({\n      lat: address.geometry.location.lat(),\n      lng: address.geometry.location.lng(),\n      address_description: address.formatted_address,\n    }));\n  }\n  continueRegister() {\n    this.matDialogRef.close();\n  }\n  locationSelected() {\n    this.enableButton = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n#container-dialog-activate-location {\n  @include dp-flex-alignment(column, center, space-between);\n  gap: 30px;\n  height: 100%;\n  .container-icon {\n    background-color: $gray-medium-soft;\n    border-radius: 100%;\n    padding: 10px;\n    width: 60px;\n    height: 60px;\n    mat-icon {\n      font-size: 60px;\n      width: 100%;\n      height: 100%;\n      color: $blue-dark;\n    }\n  }\n  .container-icon-infos {\n    @include dp-flex-alignment(column);\n    gap: 20px;\n    height: 100%;\n  }\n  .contianer-search-street {\n    width: 100%\n  }\n  .container-text-activate-location {\n    @include dp-flex-alignment(column);\n    color: $blue-dark;\n    p {\n      text-align: center\n    }\n  }\n  .container-footer-activate-location {\n    @include dp-flex-alignment(column);\n    gap: 10px;\n    width: 100%;\n    button {\n      max-width: 280px;\n    }\n    .button-stroke-primary {\n      border-radius: 20px;\n    }\n  }\n}\n",
                    "styleUrl": "./activate-location.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<ActivateLocationComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "locationService",
                        "type": "LocationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getAddressLatLongService",
                        "type": "GetAddressLatLongService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "placesAutoCompleteService",
                        "type": "PlacesAutoCompleteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<ActivateLocationComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locationService",
                        "type": "LocationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getAddressLatLongService",
                        "type": "GetAddressLatLongService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placesAutoCompleteService",
                        "type": "PlacesAutoCompleteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-dialog-activate-location\">\n  <!-- <div class=\"container-close\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeModal()\">\n      close\n    </mat-icon>\n  </div> -->\n\n  <div class=\"container-icon-infos width-100-per\">\n    <section class=\"container-icon\">\n      <mat-icon class=\"mat-18\">\n        location_on\n      </mat-icon>\n    </section>\n    <section \t *ngIf=\"!showAddManually\" class=\"container-text-activate-location\">\n      <h2 class=\"font-booster-next-bold\">{{ dataTexts.activateLocation.title }}</h2>\n      <p>{{ dataTexts.activateLocation.textInfo }}</p>\n    </section>\n    <section *ngIf=\"showAddManually\" class=\"container-text-activate-location\">\n      <h2 class=\"font-booster-next-bold\">{{ dataTexts.manuallyLocation.title }}</h2>\n      <p>{{ dataTexts.manuallyLocation.textInfo }}</p>\n    </section>\n    <form *ngIf=\"showAddManually\" [formGroup]=\"formGroup\" class=\"contianer-search-street width-100-per\">\n      <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n        <mat-label>{{dataTexts.inputs.address.label}}</mat-label>\n        <input type=\"text\"\n               [placeholder]=\"dataTexts.inputs.address.placeHolder\"\n               aria-label=\"Number\"\n               matInput\n               formControlName=\"address_description\"\n               ngx-google-places-autocomplete\n               [options]='optionsa'\n               #placesRef=\"ngx-places\"\n               (onAddressChange)=\"searchPlace($event)\">\n        <!--[matAutocomplete]=\"auto\" <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"locationSelected($event)\">\n          <mat-option *ngFor=\"let option of optionsa\" [value]=\"option?.description\">\n            {{option?.description}}\n          </mat-option>\n        </mat-autocomplete> -->\n        <mat-error *ngIf=\"formGroup.controls.address_description.hasError(errorsEnum.REQUIRED)\">\n          {{ dataTexts.inputs.genericErrors.inputRequired }}\n        </mat-error>\n      </mat-form-field>\n    </form>\n  </div>\n\n  <footer class=\"container-footer-activate-location\" *ngIf=\"showAddManually\">\n    <button\n    class=\"button stroke-primary\"\n    mat-stroked-button\n    color=\"primary\"\n    (click)=\"returnModal()\">\n      {{dataTexts.buttons.btnBack}}\n    </button>\n    <button\n    mat-button\n    cdkFocusInitial\n    class=\"button primary\"\n    [disabled]=\"formGroup.invalid\"\n    (click)=\"continueRegister()\"\n    >\n      <div class=\"container-spinner-btn\" *ngIf=\"loadingGetLocation\">\n        <mat-spinner class=\"color white\" [diameter]=\"20\"></mat-spinner>\n      </div>\n      <span *ngIf=\"!loadingGetLocation\">\n        {{dataTexts.buttons.btnContinue}}\n\n      </span>\n    </button>\n</footer>\n  <footer class=\"container-footer-activate-location\" *ngIf=\"!showAddManually\">\n      <button\n      class=\"button stroke-primary\"\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"addManually()\">\n        {{dataTexts.activateLocation.buttons.addManually}}\n      </button>\n      <button\n      mat-button\n      cdkFocusInitial\n      class=\"button primary\"\n      (click)=\"activateLocation()\">\n      <div class=\"container-spinner-btn\" *ngIf=\"loadingGetLocation\">\n        <mat-spinner class=\"color white\" [diameter]=\"20\"></mat-spinner>\n      </div>\n        <span *ngIf=\"!loadingGetLocation\">\n          {{dataTexts.activateLocation.buttons.activateLocation}}\n\n        </span>\n      </button>\n  </footer>\n\n</div>\n"
        },
        {
            "name": "AdsCardsComponent",
            "id": "component-AdsCardsComponent-53810cdc9b78b0e18d730dd955b794ab1ae70aa4b5def534dc84aa1c3b252033f75013351265a92681271b44bf357999d467d63136f288f879d52cad988e8b52",
            "file": "src/app/shared/components/google-ads/ads-cards/ads-cards/ads-cards.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ads-cards",
            "styleUrls": [
                "./ads-cards.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ads-cards.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-ads-cards',\n  templateUrl: './ads-cards.component.html',\n  styleUrls: ['./ads-cards.component.scss']\n})\nexport class AdsCardsComponent implements AfterViewInit {\n  constructor() {}\n  ngAfterViewInit() {\n    setTimeout(() => {\n    try {\n        (window[\"adsbygoogle\"] = window[\"adsbygoogle\"] || []).push({});\n      } catch (e) {\n        console.error(e);\n      }\n    }, 2000);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ads-cards.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div>\n  <ins\n    class=\"adsbygoogle\"\n    style=\"display:block\"\n    data-ad-client=\"ca-pub-4813221246235159\"\n    data-ad-slot=\"3610382183\"\n    data-ad-format=\"auto\"\n    data-full-width-responsive=\"true\"\n    >\n  </ins>\n</div>\n<br>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-16ded8da83292bfcdbc7897577605841f8d3e918551926f360caa438fa4bb8e6e5fe50e7133e173ba4ea023047a61b1470325849040ec4b332ef0bcc22e69a65",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "defaultValue": "'web-devotee'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getUserWithoutData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { TranslateService } from './core/services/translate/translate.service';\nimport { UserProfileService } from './core/services/user-profile/user-profile.service';\nimport { IAppState } from './state-management/app.model';\nimport { AddAllDataUser } from './state-management/user-data/user-data.action';\nimport { IUserData } from './state-management/user-data/user-data.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'web-devotee';\n\n  loading = false;\n  constructor(\n    protected state: State<IAppState>,\n    protected store: Store<IAppState>,\n    private translateService: TranslateService,\n    private userProfileService: UserProfileService,\n    ) {}\n  ngOnInit(): void {\n    this.translateService.veriyLanguage();\n    this.getUserWithoutData();\n  }\n  async getUserWithoutData() {\n    if (localStorage.getItem('userId') ) {\n      this.loading = true;\n      const userId = parseInt(localStorage.getItem('userId'));\n      const dataUser: IUserData.RootObject = await this.userProfileService.get(userId).toPromise();\n      this.store.dispatch(new AddAllDataUser(dataUser));\n      this.loading = false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CardImgTitleTextComponent",
            "id": "component-CardImgTitleTextComponent-e58b46d0650782319ce05e281c16f893eb204380794f05e06f5ea2c4e84c9028b10839525fc2e8d499bc70b4362c8c3fca7fd9953f1ef495e53fbcfd871a4983",
            "file": "src/app/shared/components/card-img-title-text/card-img-title-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-img-title-text",
            "styleUrls": [
                "./card-img-title-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-img-title-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ModelCardImgTitleText",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ModelCardImgTitleText } from '../../model/card-img-title-text/card-img-title-text.model';\n\n@Component({\n  selector: 'app-card-img-title-text',\n  templateUrl: './card-img-title-text.component.html',\n  styleUrls: ['./card-img-title-text.component.scss']\n})\nexport class CardImgTitleTextComponent implements OnInit {\n  @Input() data: ModelCardImgTitleText;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_colors';\n@import '_fonts';\n@import '_sizes';\n\n.container-card {\n  border-radius: 20px;\n  display: flex;\n  min-width: 260px;\n  max-width: 500px;\n  width: 100%;\n  gap: $s-10px;\n  padding: 20px 30px;\n  box-sizing: border-box;\n  background-color: $white;\n  mat-icon {\n    width: $s-20px;\n  }\n}\n",
                    "styleUrl": "./card-img-title-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-card\" [id]=\"data?.id\">\n  <mat-icon  *ngIf=\"data?.icon\" [svgIcon]=\"data.icon\"></mat-icon>\n  <div class=\"content-text-title\">\n    <p *ngIf=\"data?.title\" class=\"color-blue-dark font-booster-next-bold\" [id]=\"data?.title\">{{ data?.title || 'title' }}</p>\n    <p *ngIf=\"data?.text\" class=\"color-blue-dark\">{{ data?.text || 'text' }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "ChangePasswordComponent",
            "id": "component-ChangePasswordComponent-aab4ffdb7bbc924a07be30f75dd271eb82936d5752f823fb3a4ea35d956084a7fddbe65178834d95379e7d30f3b80d2c71400309d5190cc690cae260ec22a589",
            "file": "src/app/shared/components/dialogs/change-password/change-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-change-password",
            "styleUrls": [
                "./change-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./change-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "hide",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hideNew",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "savePassword",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { takeUntil } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ChangePasswordService } from 'src/app/core/services/change-password/change-password.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ReplaySubject } from 'rxjs';\nimport { ModelChangePassword } from 'src/app/shared/model/change-password/change-password.model';\nimport { State } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { SnackBarService } from 'src/app/core/services/snack-bar/snack-bar.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  dataTexts;\n\n  hide = true;\n  hideNew = true;\n\n  formGroup: FormGroup;\n\n  destroy$ = new ReplaySubject();\n  constructor(\n    protected state: State<IAppState>,\n    private matDialogRef: MatDialogRef<ChangePasswordComponent>,\n    private translateService: TranslateService,\n    private formBuilder: FormBuilder,\n    private changePasswordService: ChangePasswordService,\n    private snackBarService: SnackBarService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.initForm();\n  }\n  closeModal() {\n    this.matDialogRef.close();\n  }\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      old_password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n        ]\n      ],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n        ]\n      ]\n    })\n  }\n  async savePassword() {\n   const userData = await this.changePasswordService\n      .post(this.formGroup.value, this.state.getValue().userData.data.id)\n      .pipe(takeUntil(this.destroy$))\n      .toPromise();\n    if (userData.status) {\n      this.closeModal();\n      this.snackBarService.openSnackbarSuccess(\n        this.dataTexts.snacksBars.successChangePassword.mensage,\n        this.dataTexts.snacksBars.successChangePassword.button\n      );\n    } else {\n      this.snackBarService.openSnackbarWarning(\n        this.dataTexts.snacksBars.wrongChangePassword.mensage,\n        this.dataTexts.snacksBars.wrongChangePassword.button,\n        3000\n      );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./change-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<ChangePasswordComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "changePasswordService",
                        "type": "ChangePasswordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<ChangePasswordComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changePasswordService",
                        "type": "ChangePasswordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main id=\"container-change-password\">\n  <mat-card-title\n    class=\"color-blue-dark font-booster-next-bold\">\n    {{dataTexts.userConfigurations.features.changePassword}}\n  </mat-card-title>\n  <form\n    class=\"container-form-change-password\"\n    [formGroup]=\"formGroup\">\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>{{dataTexts.inputs.oldPassword.label}}</mat-label>\n        <input\n          matInput\n          [placeholder]=\"dataTexts.inputs.oldPassword.placeHolder\"\n          type=\"password\"\n          autocomplete=\"none\"\n          formControlName=\"old_password\"\n          [type]=\"hide ? 'password' : 'text'\"\n          >\n        <div\n          mat-icon-button\n          matSuffix\n          (click)=\"hide = !hide\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\"\n          class=\"cursor-pointer\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </div>\n      </mat-form-field>\n    </div>\n    <div class=\"container-default-inputs-orientation\">\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>{{dataTexts.inputs.newPassword.label}}</mat-label>\n        <input\n          matInput\n          [placeholder]=\"dataTexts.inputs.newPassword.placeHolder\"\n          type=\"password\"\n          autocomplete=\"none\"\n          formControlName=\"password\"\n          [type]=\"hideNew ? 'password' : 'text'\"\n\n          >\n          <div\n          mat-icon-button\n          matSuffix\n          (click)=\"hideNew = !hideNew\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hideNew\"\n          class=\"cursor-pointer\">\n          <mat-icon>{{hideNew ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </div>\n      </mat-form-field>\n    </div>\n  </form>\n  <section class=\"contianer-btns\">\n    <button\n      class=\"button-stroke-primary\"\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"closeModal()\"\n      >\n      {{ dataTexts.buttons.btnCancel }}\n    </button>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"savePassword()\"\n      >\n      {{ dataTexts.buttons.btnSave }}\n    </button>\n  </section>\n</main>\n"
        },
        {
            "name": "ChangeUserTypeComponent",
            "id": "component-ChangeUserTypeComponent-612d0920c994703bbb311104772b87d81855745b1c060e143587e8e5a7f9bdb5a2eb2458a6e28b2939f5e5a076956977ab3e9cde4fa81caf87e7dac0ff97cd11",
            "file": "src/app/pages/continue-register/components/change-user-type/change-user-type.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-change-user-type",
            "styleUrls": [
                "./change-user-type.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./change-user-type.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "enumRouteApp",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "enumUserType",
                    "defaultValue": "EnumUserType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "userTypeChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EnumUserType",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "changeUserType",
                    "args": [
                        {
                            "name": "userType",
                            "type": "EnumUserType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userType",
                            "type": "EnumUserType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { State, Store } from '@ngrx/store';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { UpdateDataService } from 'src/app/core/services/update-data/update-data.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { EnumUserType } from 'src/app/shared/enum/user-types/user-type.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { AddDataRegister } from 'src/app/state-management/register/register.action';\n\n@Component({\n  selector: 'app-change-user-type',\n  templateUrl: './change-user-type.component.html',\n  styleUrls: ['./change-user-type.component.scss']\n})\nexport class ChangeUserTypeComponent implements OnInit {\n  dataTexts;\n\n  enumUserType = EnumUserType;\n  enumRouteApp = EnumRoutesApplication;\n  userTypeChanged: EnumUserType;\n\n  formGroup: FormGroup;\n  constructor(\n    protected store: Store<IAppState>,\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private formBuilder: FormBuilder,\n    private routeService: RouteService,\n    private router: Router,\n    private updateDataService: UpdateDataService,\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n   }\n\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      account_type: [\n        '',\n        [\n          Validators.required,\n        ]\n      ]\n    })\n  }\n  changeUserType(userType: EnumUserType) {\n    this.userTypeChanged = userType;\n    this.store.dispatch(new AddDataRegister(this.formGroup.value));\n  }\n  async navigateTo(route: EnumRoutesApplication) {\n    await this.updateDataService.post(this.formGroup.value, this.state.getValue().userData.data.id).toPromise();\n    this.routeService.navigateToURL(route);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n@import '_custom';\n:host {\n  width: 100vw;\n}\n.container-checks {\n  display: none;\n}\n#container-change-user-type {\n  max-width: 500px;\n\n  .content-change-user-type {\n    margin: auto;\n    @include dp-flex-alignment(column, stretch, center);\n    gap: 20px;\n    mat-card {\n      border-radius: 10px;\n      width: 100%;\n      box-shadow: none;\n    }\n    label {\n      &.container-type-data-default {\n        min-height: 170px;\n\n      }\n    }\n    .container-type-data-default {\n\n      @include dp-flex-alignment(row, initial, flex-start);\n      gap: 20px;\n      cursor: pointer;\n      .card-type-data-default {\n        @include dp-flex-alignment(row, flex-start, flex-start);\n        gap: 20px;\n        cursor: pointer;\n        border: 1px solid transparent;\n        &.border-checked {\n          border: 1px solid $magenta-soft;\n          border-radius: 10px;\n          background: $blue-soft 0% 0% no-repeat padding-box;;\n        }\n      }\n      mat-icon {\n        font-size: 30px;\n      }\n      .container-title-text {\n        width: 100%;\n        .container-title-check {\n          @include dp-flex-alignment(row, center, space-between);\n          gap: 10px;\n        }\n      }\n    }\n  }\n}\n\n",
                    "styleUrl": "./change-user-type.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-change-user-type\" class=\"container-default-cards-register\">\n  <mat-card class=\"container-title-register\">\n    <div class=\"container-title-register cursor-pointer\" (click)=\"navigateTo(enumRouteApp.PRE_REGISTER)\">\n      <mat-icon class=\"mat-18 color-magenta-soft\">arrow_back_ios</mat-icon>\n      <mat-card-title>{{dataTexts.changeUserType.headerYourProfile}}</mat-card-title>\n    </div>\n  </mat-card>\n  <form [formGroup]=\"formGroup\" class=\"content-change-user-type\">\n    <label\n      class=\"container-type-data-default flex-1\"\n      for=\"devotee\"\n      >\n      <mat-card\n        class=\"card-type-data-default\"\n        [class.border-checked]=\"userTypeChanged === enumUserType.DEVOTEE\">\n        <section class=\"container-icon-type\">\n          <mat-icon class=\"color-magenta-soft\">favorite</mat-icon>\n        </section>\n        <section class=\"container-title-text\">\n          <div class=\"container-title-check\">\n            <h2 class=\"font-booster-next-bold color-blue-dark\">{{dataTexts.changeUserType.iam.devotee.title}}</h2>\n            <label >\n              <input\n                type=\"radio\"\n                id=\"devotee\"\n                name=\"account_type\"\n                [value]=\"enumUserType.DEVOTEE\"\n                class=\"option-input radio\"\n                formControlName=\"account_type\"\n                (change)=\"changeUserType(enumUserType.DEVOTEE)\">\n            </label>\n          </div>\n          <p class=\"color-blue-dark\">{{dataTexts.changeUserType.iam.devotee.text}}</p>\n        </section>\n      </mat-card>\n    </label>\n    <label\n      class=\"container-type-data-default flex-1\"\n      for=\"especial\"\n      >\n      <mat-card\n        class=\"card-type-data-default\"\n        [class.border-checked]=\"userTypeChanged === enumUserType.SPECIAL\">\n        <section class=\"container-icon-type\">\n          <mat-icon class=\"color-magenta-soft\">accessible</mat-icon>\n        </section>\n        <section class=\"container-title-text\">\n          <div class=\"container-title-check\">\n            <h2 class=\"font-booster-next-bold color-blue-dark\">{{dataTexts.changeUserType.iam.special.title}}</h2>\n            <label >\n              <input\n                #radioDevotee\n                type=\"radio\"\n                id=\"especial\"\n                name=\"account_type\"\n                [value]=\"enumUserType.SPECIAL\"\n                class=\"option-input radio\"\n                formControlName=\"account_type\"\n                (change)=\"changeUserType(enumUserType.SPECIAL)\">\n            </label>\n          </div>\n          <p class=\"color-blue-dark\">{{dataTexts.changeUserType.iam.special.text}}</p>\n        </section>\n      </mat-card>\n    </label>\n    <label\n      class=\"container-type-data-default flex-1\"\n      for=\"curious\"\n      >\n      <mat-card class=\"card-type-data-default\" [class.border-checked]=\"userTypeChanged === enumUserType.CURIOUS\">\n        <section class=\"container-icon-type\">\n          <mat-icon class=\"color-magenta-soft\">visibility</mat-icon>\n        </section>\n        <section class=\"container-title-text\">\n          <div class=\"container-title-check\">\n            <h2 class=\"font-booster-next-bold color-blue-dark\">{{dataTexts.changeUserType.iam.curious.title}}</h2>\n            <label >\n              <input\n                type=\"radio\"\n                id=\"curious\"\n                name=\"account_type\"\n                [value]=\"enumUserType.CURIOUS\"\n                class=\"option-input radio\"\n                formControlName=\"account_type\"\n                (change)=\"changeUserType(enumUserType.CURIOUS)\">\n            </label>\n          </div>\n          <p class=\"color-blue-dark\">{{dataTexts.changeUserType.iam.curious.text}}</p>\n        </section>\n      </mat-card>\n    </label>\n  </form>\n\n</div>\n<section class=\"contianer-btns out-container\">\n  <button\n    class=\"button stroke-primary\"\n    (click)=\"navigateTo(enumRouteApp.PRE_REGISTER)\">\n    {{ dataTexts.buttons.btnBack }}\n  </button>\n  <button\n    class=\"button primary\"\n    [disabled]=\"formGroup.invalid\"\n    (click)=\"navigateTo(enumRouteApp.RULES)\">\n\n    {{ dataTexts.buttons.btnContinue }}\n  </button>\n\n</section>\n"
        },
        {
            "name": "ChatComponent",
            "id": "component-ChatComponent-22005a93f51adb28fe1fa16dc2fdb4c2d00c7aca5a10cda015f630f2b3fce26b3b93c8dcb21a8a85b43806f04d39197b476a8de956ec6d5c10801701c76374f3",
            "file": "src/app/pages/chat/chat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chat",
            "styleUrls": [
                "./chat.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chat.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataChat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dataMatches",
                    "defaultValue": "{\n    data: [\n      {loading: true},\n      {loading: true},\n      {loading: true},\n      {loading: true}\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelGetMatchesResponse.RootObject | any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "matchId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "oldMatchId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "showChatLoadingAll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "showChatMobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "urlImages",
                    "defaultValue": "environment.urlImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "userMatchData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelGetMatchesResponse.ITargetUser",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "closeChatMobile",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "connectChat",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "connectMatches",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getChat",
                    "args": [
                        {
                            "name": "matchId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "matchId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMacthes",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showChat",
                    "args": [
                        {
                            "name": "match",
                            "type": "ModelGetMatchesResponse.IData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "match",
                            "type": "ModelGetMatchesResponse.IData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { State } from '@ngrx/store';\nimport { GetChatService } from 'src/app/core/services/get-chat/get-chat.service';\nimport { GetMatchesService } from 'src/app/core/services/get-matches/get-matches.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ChatConnectorService } from 'src/app/core/services/websockets/chat-connector/chat-connector.service';\nimport { LoginQrcodeConnectorService } from 'src/app/core/services/websockets/login-qrcode-connector/login-qrcode-connector.service';\nimport { MatchesConnectorService } from 'src/app/core/services/websockets/matches-connector/matches-connector.service';\nimport { TransformAgeService } from 'src/app/shared/functions/transform-age/transform-age.service';\nimport { ModelGetMatchesResponse } from 'src/app/shared/model/response/get-matches/get-matches.response';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { environment } from 'src/environments/environment';\nimport { EnumParamsChat } from './enum/params-chat.enum';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  dataTexts;\n  dataMatches: ModelGetMatchesResponse.RootObject | any = {\n    data: [\n      {loading: true},\n      {loading: true},\n      {loading: true},\n      {loading: true}\n    ]\n  };\n  dataChat: any;\n\n  urlImages = environment.urlImages;\n\n  showChatMobile = false;\n  showChatLoadingAll = false;\n\n  matchId: number;\n  oldMatchId: number;\n\n  userId: number;\n\n  userMatchData: ModelGetMatchesResponse.ITargetUser;\n  constructor(\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private getMatchesService: GetMatchesService,\n    private getChatService: GetChatService,\n    private transformAgeService: TransformAgeService,\n    private chatConnectorService: ChatConnectorService,\n    private matchesConnectorService: MatchesConnectorService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.getMacthes();\n  }\n  private async getMacthes() {\n    const dataMatches = await this.getMatchesService.get().toPromise();\n    this.dataMatches = dataMatches;\n    this.userId = this.state.getValue().userData.data?.id;\n    this.connectMatches();\n\n  }\n  private async getChat(matchId: number, pageNumber?: number) {\n    let params;\n    if (matchId && pageNumber) {\n      params = {\n        [EnumParamsChat.MATCH_ID]: matchId,\n        [EnumParamsChat.PAGE_NUMBER]: pageNumber\n      };\n    }\n    params = {\n      [EnumParamsChat.MATCH_ID]: matchId,\n    };\n\n    const dataChatOpened = await this.getChatService.get(false, params).toPromise();\n    if (!this.dataChat || (this.dataChat?.data[0]?.id !== dataChatOpened?.data[0]?.id)) {\n      this.dataChat = dataChatOpened;\n      this.showChatLoadingAll = false;\n    }\n\n  }\n  showChat(match: ModelGetMatchesResponse.IData) {\n    this.showChatLoadingAll = true;\n    this.showChatMobile = true;\n    this.dataChat = false;\n    this.matchId = match.match_id;\n    this.userMatchData = match.target_user;\n    this.getChat(this.matchId);\n    this.connectChat();\n    this.oldMatchId = match.match_id;\n  }\n  private connectChat() {\n    //use in connction this.userMatchData.id\n    if (this.oldMatchId && (this.oldMatchId === this.matchId)) {\n      this.chatConnectorService.connectWebSocketChatMessages(this.matchId).unsubscribe();\n\n    } else {\n      this.chatConnectorService\n      .connectWebSocketChatMessages(this.matchId)\n      .bind(environment.webSocket.events.chat, (res) => {\n        this.dataChat = {\n          data: [\n            {\n              ...res.payload\n            },\n            ...this.dataChat.data\n          ]\n        }\n      });\n    }\n  }\n  private connectMatches() {\n    this.matchesConnectorService\n      .connectWebSocketChatMessages(this.userId)\n      .bind(environment.webSocket.events.matches, (res) => {\n        console.log(res);\n      });\n  }\n  closeChatMobile(event) {\n    if (event) {\n      this.showChatMobile = !event;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n:host {\n  height: 100%;\n  background-color: $princiapl-background-gradient;\n\n}\nbody{\n  max-width: 100vw;\n}\n#container-chat {\n  @include dp-flex-alignment(column, flex-start);\n  gap: 20px;\n  max-width: 1200px;\n  padding: 20px;\n  box-sizing: border-box;\n  height: 100%;\n\n  margin: auto;\n  @include min-tablet {\n    @include dp-flex-alignment(row, flex-start);\n\n  }\n  &.chat-mobile {\n\n    @media screen and (max-width: $min-tablet) {\n      position: absolute;\n      top: 0;\n      padding: 0;\n      width: 100%;\n    }\n  }\n  .container-default-itens-chat {\n    @include dp-flex-alignment(column, initial, initial);\n    height: 100%;\n    gap: 10px;\n    .container-matches-chat {\n      @include dp-flex-alignment(row, initial, initial);\n      gap: 20px;\n\n    }\n    .container-matches {\n      height: 100%;\n      max-height: 600px;\n      min-height: 400px;\n      overflow: auto;\n      @include dp-flex-alignment(column, initial, initial);\n       gap: 10px;\n    }\n  }\n  .container-title-register {\n    box-sizing: border-box;\n    padding: 0;\n    @include dp-flex-alignment(row, center, flex-start);\n  }\n  .container-person-message {\n    box-shadow: none;\n    border-radius: 20px;\n    &:not(:last-child) {\n      padding-bottom: 10px;\n    }\n    &:not(:first-child) {\n      padding-top: 10px;\n    }\n    .notification-chat {\n      &::after, &::before{\n        display: block;\n        position: absolute;\n      }\n      &::after{\n      content:\"\";\n      font-size: 20px;\n      bottom: -10px;\n      right: -10px;\n      width: 20px;\n      height: 20px;\n      border-radius: 100%;\n      z-index: 3;\n      }\n      &::before{\n        content:\"\";\n        top: -5px;\n        right: -5px;\n        width: 15px;\n        height: 15px;\n        border-radius: 100%;\n        background: $magenta-soft;\n        z-index: 1;\n        border: 1px solid $blue-dark;\n      }\n    }\n    .container-person-image{\n      border-radius: 100%;\n      background-color: $gray-medium-soft;\n      border: 1px solid $gray-soft;\n      width: 100%;\n      height: 80px;\n      box-sizing: border-box;\n      max-width: 80px;\n      max-height: 80px;\n      @include dp-flex-alignment();\n      @include min-tablet {\n        width: 100%;\n      }\n      img{\n        width: 100%;\n        max-width: 80px;\n        max-height: 80px;\n        border-radius: 100%;\n        min-width: 80px;\n        min-height: 80px;\n        border: 1.5px solid $magenta-soft;\n      }\n      mat-icon {\n        font-size: 15px;\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .content-person-message {\n      @include dp-flex-alignment(row, center, flex-start);\n      gap: 10px;\n      width: 100%;\n    }\n  }\n  .chat-section-desktop {\n    display: none;\n    @include min-tablet {\n      z-index: 2;\n      @include dp-flex-alignment(column, initial, initial);\n    }\n  }\n  .chat-section-mobile {\n    display: none;\n  }\n  .show-chat-mobile {\n    @include dp-flex-alignment(column, initial, initial);\n    position: fixed;\n    z-index: 100;\n    background-color: $gray-ultra-light-soft;\n    @include min-tablet {\n      display: none;\n    }\n  }\n  .container-type-data-default {\n    padding: 0;\n    border-radius: 0\n  }\n}\n.last-message {\n  @include dp-flex-alignment(row, initial, initial);\n  gap: 5px;\n\n}\n.last-msg-txt {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 180px;\n  white-space: nowrap;\n}\n// .last-msg-txt:before {\n//   content: '...';\n//   position: absolute;\n//   right: 0px;\n//   bottom: 0;\n//   background-color: #ffffff;\n//   padding: 0 0px 0 0.25em;\n// }\n",
                    "styleUrl": "./chat.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getMatchesService",
                        "type": "GetMatchesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getChatService",
                        "type": "GetChatService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "chatConnectorService",
                        "type": "ChatConnectorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matchesConnectorService",
                        "type": "MatchesConnectorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getMatchesService",
                        "type": "GetMatchesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getChatService",
                        "type": "GetChatService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "chatConnectorService",
                        "type": "ChatConnectorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matchesConnectorService",
                        "type": "MatchesConnectorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main id=\"container-chat\"\nclass=\"container-default-cards-register\"\n[ngClass]=\"{'chat-mobile': showChatMobile }\">\n  <section class=\"container-default-itens-chat flex-1 width-100-per\">\n    <mat-card class=\"container-title-register\">\n      <div class=\"container-title-register cursor-pointer\">\n        <mat-icon class=\"mat-18 color-magenta-soft\">chat_bubble</mat-icon>\n        <mat-card-title>{{dataTexts.chat.matches.title}}</mat-card-title>\n      </div>\n    </mat-card>\n    <div class=\"container-matches-chat\">\n      <div class=\"container-type-data-default container-matches flex-1\">\n        <mat-card\n          class=\"container-person-message\"\n          *ngFor=\"let match of dataMatches.data\"\n          (click)=\"showChat(match)\"\n          >\n          <div class=\"content-person-message cursor-pointer\" >\n            <section\n              matBadge=\"0\"\n              [matBadgeHidden]=\"true\"\n              matBadgeSize=\"small\"\n              class=\"container-person-image hide-text \"\n              [ngClass]=\"{\n                'skeleton': match.loading,\n                'notification-chat': (!match?.latest_message?.read && !(match?.latest_message?.user_id === userId))\n              }\">\n              <img #profileImg [src]=\"urlImages + match?.target_user?.profile_picture[0]?.path\" onerror=\"this.onerror = null; this.style.display = 'none'\" alt=\"Foto de perfil\">\n              <div class=\"mat-icon-size border-radius-100\" *ngIf=\"profileImg.onerror === null\">\n                <mat-icon>\n                  no_photography\n                </mat-icon>\n              </div>\n            </section>\n            <section class=\"container-info color-blue-dark\">\n              <p\n                class=\"person-name font-booster-next-bold\"\n                [ngClass]=\"{'skeleton skeleton-text': match.loading}\">{{ match?.target_user?.name }}</p>\n              <p\n                *ngIf=\"match?.latest_message?.content\"\n                class=\"last-message \"\n                [ngClass]=\"{'skeleton skeleton-text': match.loading}\">\n                <span *ngIf=\"match.latest_message.user_id === userId\">\n                  {{dataTexts.chat.matches.sentByYou}}\n                </span>\n                <span class=\"last-msg-txt\">\n                  {{ match?.latest_message?.content }}\n\n                </span>\n              </p>\n              <p\n                *ngIf=\"match?.latest_message?.path\"\n                class=\"last-message \"\n                [ngClass]=\"{'skeleton skeleton-text': match.loading}\">\n                {{ dataTexts.chat.matches.lastMessageImg }}\n              </p>\n            </section>\n          </div>\n        </mat-card>\n      </div>\n      <section class=\"container-default-itens-chat flex-2 width-100-per chat-section-desktop\" >\n        <app-chat-messages\n          [dataChat]=\"dataChat\"\n          [userData]=\"userMatchData\"\n          [matchId]=\"matchId\"\n          [showChatSkeleton]=\"showChatMobile\"\n          [showChatLoadingAll]=\"showChatLoadingAll\"\n          ></app-chat-messages>\n      </section>\n    </div>\n\n  </section>\n  <section\n    class=\"container-default-itens-chat flex-2 width-100-per chat-section-mobile\"\n    [ngClass]=\"{'show-chat-mobile': showChatMobile }\">\n    <app-chat-messages\n      [dataChat]=\"dataChat\"\n      [userData]=\"userMatchData\"\n      [matchId]=\"matchId\"\n      [showChatSkeleton]=\"showChatMobile\"\n      [showChatLoadingAll]=\"\"\n      (closeChatMobile)=\"closeChatMobile($event)\"></app-chat-messages>\n  </section>\n\n</main>\n"
        },
        {
            "name": "ChatMessagesComponent",
            "id": "component-ChatMessagesComponent-371b41394caff25178d059cda88bce398203b47dc84b4ceee464b32e13c6d8347063b044016398ae2f2c9c31271f9f3f08446a452d83fbd03c3c9623d27ff701",
            "file": "src/app/shared/components/chat-messages/chat-messages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chat-messages",
            "styleUrls": [
                "./chat-messages.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chat-messages.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataChat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "matchId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "showChatLoadingAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "showChatSkeleton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "userData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "IUserData.IData",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeChatMobile",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "openingProfile",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "myScrollContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chat'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "urlImages",
                    "defaultValue": "environment.urlImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "closeProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "sendMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "transformAge",
                    "args": [
                        {
                            "name": "birthdate",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "birthdate",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { takeUntil } from 'rxjs/operators';\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport { SendMessageService } from 'src/app/core/services/send-message/send-message.service';\nimport { EnumParamsChat } from 'src/app/pages/chat/enum/params-chat.enum';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { TransformAgeService } from '../../functions/transform-age/transform-age.service';\nimport { environment } from 'src/environments/environment';\nimport { DialogsService } from '../../functions/dialogs/dialogs.service';\nimport { UserProfileService } from 'src/app/core/services/user-profile/user-profile.service';\n\n@Component({\n  selector: 'app-chat-messages',\n  templateUrl: './chat-messages.component.html',\n  styleUrls: ['./chat-messages.component.scss']\n})\nexport class ChatMessagesComponent implements OnInit {\n  @ViewChild('chat') private myScrollContainer: ElementRef;\n\n  @Output() closeChatMobile = new EventEmitter();\n  @Output() openingProfile = new EventEmitter();\n\n  @Input() dataChat;\n  @Input() userData: IUserData.IData;\n  @Input() matchId;\n  @Input() showChatSkeleton;\n  @Input() showChatLoadingAll;\n\n  loading = false;\n  userId: number;\n\n  urlImages = environment.urlImages;\n\n  formGroup: FormGroup;\n\n  destroy$ = new ReplaySubject();\n  constructor(\n    private transformAgeService: TransformAgeService,\n    private sendMessagesService: SendMessageService,\n    private formBuilder: FormBuilder,\n    private dialogsService: DialogsService,\n    private userProfileService: UserProfileService,\n  ) { }\n\n  ngOnInit(): void {\n    this.userId = parseInt(localStorage.getItem('userId'));\n    this.initForm();\n\n  }\n  initForm () {\n    this.formGroup = this.formBuilder.group({\n      match_id: [\n        '',\n        [\n\n        ]\n      ],\n      content: [\n        '',\n        [\n\n        ]\n      ],\n      type: [\n        'text',\n        [\n\n        ]\n      ]\n    })\n  }\n  transformAge(birthdate) {\n    return this.transformAgeService.transformAge(birthdate);\n  }\n  async sendMessage() {\n    const params = {\n      [EnumParamsChat.MATCH_ID]: this.matchId\n    }\n    this.formGroup.get('match_id').setValue(this.matchId);\n    this.sendMessagesService\n      .post(this.formGroup.value, false, params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        responseSendMessage => {\n          this.formGroup.get('content').setValue('');\n\n        },\n        erroSendMessage => {\n        }\n      );\n\n  }\n  closeProfile() {\n    this.closeChatMobile.emit(true);\n  }\n  async openProfile() {\n    this.openingProfile.emit(true);\n    this.loading = true;\n    const userData = await this.userProfileService.get(this.userData.id).toPromise();\n    this.loading = false;\n    this.dialogsService.openProfile(userData.data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n:host {\n  @include dp-flex-alignment(column, initial, initial);\n  height: 100%;\n}\n// .container-chat-card {\n//   box-sizing: border-box;\n//   border-radius: 10px;\n//   min-height: 82px;\n//   @include dp-flex-alignment(row, center, flex-start);\n  .container-person-message {\n    gap: 20px;\n    max-height: 82px;\n    @include dp-flex-alignment(row, center, flex-start);\n\n  }\n\n// }\n.container-person-image{\n  border-radius: 100%;\n  background-color: $gray-medium-soft;\n  border: 1px solid $gray-soft;\n  width: 100%;\n  box-sizing: border-box;\n  height: 50px;\n  max-width: 50px;\n  max-height: 50px;\n  @include dp-flex-alignment();\n  img{\n    width: 100%;\n    max-width: 50px;\n    max-height: 50px;\n    min-width: 50px;\n    min-height: 50px;\n    border-radius: 100%;\n    object-fit: cover;\n    border: 1px solid $magenta-soft;\n\n  }\n  mat-icon {\n    font-size: 15px;\n    width: 100%;\n    height: 100%;\n  }\n\n}\n.chat {\n  height: 100%;\n  border-radius: 20px;\n  overflow: auto;\n  min-height: 300px;\n  @include dp-flex-alignment(column, initial, space-between);\n  @include min-tablet {\n    max-height: 600px;\n    min-height: 600px\n\n\n  }\n  .container-close {\n    &.chat-mobile {\n      @include min-tablet {\n        display: none;\n      }\n    }\n  }\n  .container-spinner-chat {\n    @include dp-flex-alignment();\n    height: 100%;\n    max-height: 478px\n  }\n  &.dont-have {\n    @include dp-flex-alignment(column);\n    .dont-message-icon {\n      font-size: 40px;\n      width: 40px;\n      height: 40px;\n    }\n\n  }\n  .container-messages-sent {\n    display: contents;\n    @include min-tablet {\n      display: initial;\n    }\n  }\n  .menssages {\n    height: 100%;\n    padding-right: 15px;\n    overflow: auto;\n    @include dp-flex-alignment(column-reverse, initial, initial);\n\n    @include min-tablet {\n      max-height: 478px;\n\n    }\n  }\n  .box-msgs{\n    border-radius: 10px;\n    font-size: 16px;\n    padding: 5px 10px;\n    box-shadow: 0px 3px 6px #00000029;\n    max-width: 70%;\n    line-height: auto;\n    word-wrap: break-word;\n    @include min-tablet() {\n      max-width: 345px;\n\n    }\n    .container-img-message {\n      max-width: 200px;\n      height: auto;\n      img {\n        width: 100%;\n        height: auto;\n        border-radius: 10px;\n      }\n    }\n    .container-image-sent-message {\n      img {\n        border-radius: 10px 10px 0 10px;\n      }\n    }\n    .container-image-recived-message {\n      img {\n        border-radius: 10px 10px 10px 0;\n      }\n    }\n  }\n\n  .box {\n    display: flex;\n    margin-top: 10px;\n    &.recived {\n      justify-content: flex-start;\n    }\n    &.sent {\n      justify-content: flex-end;\n    }\n  }\n  .msg-recived {\n    color: $black;\n    background-color: $magenta-soft;\n    border-radius: 10px 10px 10px 0;\n  }\n  .msg-sent {\n    color: $white;\n    background-color: $blue-dark;\n    border-radius: 10px 10px 0 10px;\n  }\n  .box-msg-image {\n    padding: 5px;\n    box-shadow: none;\n    background-color: transparent;\n\n  }\n  .input-sent-msg{\n    @include dp-flex-alignment(row, center, space-between);\n\n    margin-top: 20px;\n    gap: 10px;\n    textarea:focus, input:focus{\n      outline: none;\n    }\n    input{\n      width: 100%;\n      padding: 0 5px;\n      border: 1px solid $gray-soft;\n      box-shadow: none;\n      background-image:none;\n      -moz-box-shadow: none;\n      -webkit-box-shadow: none;\n      background-color:transparent;\n      border-radius: 10px;\n      padding: 15px 10px;\n      padding-right: 10px;\n      box-sizing: border-box;\n    }\n  }\n  .btn-sent {\n    display: flex;\n    background-color: $sand-soft;\n    border-radius: 10px;\n    padding: 15px;\n    box-sizing: border-box;\n\n  }\n}\n",
                    "styleUrl": "./chat-messages.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sendMessagesService",
                        "type": "SendMessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sendMessagesService",
                        "type": "SendMessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<!-- <mat-card class=\"container-chat-card\">\n  <mat-card-title *ngIf=\"!userData\">Chat</mat-card-title>\n\n  <div class=\"container-person-message flex-2\" *ngIf=\"userData\">\n    <section class=\"container-person-image cursor-pointer\" (click)=\"openProfile()\">\n      <img #profileImg [src]=\"urlImages + userData?.profile_picture[0]?.path\" onerror=\"this.onerror = null; this.style.display = 'none'\" alt=\"Foto de perfil\">\n      <div class=\"mat-icon-size border-radius-100\" *ngIf=\"profileImg.onerror === null\">\n        <mat-icon>\n          no_photography\n        </mat-icon>\n      </div>\n    </section>\n    <section class=\"container-info color-blue-dark cursor-pointer\" (click)=\"openProfile()\">\n      <p class=\"person-name font-booster-next-bold\">\n        {{userData.name}}\n        <span\n          *ngIf=\"userData.birthdate\">,\n          {{transformAge(userData.birthdate)}}\n        </span>\n      </p>\n      <p class=\"last-message\">{{userData?.account_type}}</p>\n    </section>\n  </div>\n  <div class=\"container-close chat-mobile flex-1\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeProfile()\">\n      close\n    </mat-icon>\n  </div>\n</mat-card> -->\n<mat-card class=\"chat dont-have\"  *ngIf=\"!dataChat && !showChatSkeleton\">\n  <mat-icon class=\"dont-message-icon\">message</mat-icon>\n  <p>Selecione uma pessoa para ver as mensagens </p>\n</mat-card>\n\n<mat-card class=\"chat\" *ngIf=\"showChatSkeleton\">\n  <div class=\"container-spinner-chat\" *ngIf=\"!dataChat && showChatLoadingAll\">\n    <mat-spinner ></mat-spinner>\n\n  </div>\n<div>\n  <div class=\"container-close chat-mobile flex-1\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeProfile()\">\n      close\n    </mat-icon>\n  </div>\n  <div class=\"container-person-message flex-2\" *ngIf=\"userData\">\n    <section class=\"container-person-image cursor-pointer\" (click)=\"openProfile()\">\n      <img #profileImg [src]=\"urlImages + userData?.profile_picture[0]?.path\" onerror=\"this.onerror = null; this.style.display = 'none'\" alt=\"Foto de perfil\">\n      <div class=\"mat-icon-size border-radius-100\" *ngIf=\"profileImg.onerror === null\">\n        <mat-icon>\n          no_photography\n        </mat-icon>\n      </div>\n    </section>\n\n    <section class=\"container-info color-blue-dark cursor-pointer\" (click)=\"openProfile()\">\n      <p class=\"person-name font-booster-next-bold\">\n        {{userData.name}}\n        <span\n          *ngIf=\"userData.birthdate\">,\n          {{transformAge(userData.birthdate)}}\n        </span>\n      </p>\n      <p class=\"last-message\">{{userData?.account_type}}</p>\n    </section>\n\n  </div>\n</div>\n\n\n  <div class=\"container-messages-sent\">\n    <div class=\"menssages\"*ngIf=\"dataChat && !showChatLoadingAll\" #chat>\n\n      <section *ngFor=\"let message of dataChat?.data\">\n        <div\n          class=\"box\"\n          [ngClass]=\"{\n            'sent': message.user_id === userId,\n            'recived': message.user_id !== userId\n\n          }\">\n          <div\n            class=\" box-msgs\"\n            [ngClass]=\"{\n              'msg-sent': message.user_id === userId,\n              'msg-recived': message.user_id !== userId,\n              'box-msg-image':  message.path\n\n            }\">\n            {{message?.content}}\n            <div class=\"container-img-message\"\n            [ngClass]=\"{\n              'container-image-sent-messaget': message.user_id === userId,\n              'container-image-recived-message': message.user_id !== userId\n            }\"\n            >\n              <img [src]=\"urlImages + message.path\" *ngIf=\"message.path\" alt=\"\">\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n    <form [formGroup]=\"formGroup\" class=\"input-sent-msg\" *ngIf=\"dataChat\">\n      <input formControlName=\"content\" type=\"text\" (keyup.enter)=\"sendMessage()\">\n      <div class=\"btn-sent cursor-pointer\" (click)=\"sendMessage()\">\n        <mat-icon class=\"color-magenta-soft\">send</mat-icon>\n      </div>\n    </form>\n  </div>\n\n\n</mat-card>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n"
        },
        {
            "name": "ContinueRegisterComponent",
            "id": "component-ContinueRegisterComponent-2e1145a7279a9923b5504d87515ae5a2aef35576951c930a46ad678091c1662f007626bde28058407ac7fbb5536ef3b139c7d696067676e1d6dc0d3f0345b704",
            "file": "src/app/pages/continue-register/continue-register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-continue-register",
            "styleUrls": [
                "./continue-register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./continue-register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getUserDataVerify",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { UserProfileService } from 'src/app/core/services/user-profile/user-profile.service';\nimport { VerifyStageRegisterDataService } from 'src/app/shared/functions/verify-stage-register-data/verify-stage-register-data.service';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\n\n@Component({\n  selector: 'app-continue-register',\n  templateUrl: './continue-register.component.html',\n  styleUrls: ['./continue-register.component.scss']\n})\nexport class ContinueRegisterComponent implements OnInit {\n\n  constructor(\n    private verifyStageRegisterDataService: VerifyStageRegisterDataService,\n    private userProfileService: UserProfileService,\n  ) { }\n\n  ngOnInit() {\n\n    this.getUserDataVerify();\n  }\n   getUserDataVerify() {\n    this.verifyStageRegisterDataService.redirectRouteWithDataRegistered();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n.container-page-register {\n  @include dp-flex-alignment(column, center, space-between);\n  width: 100vw;\n  height: 100%;\n  background: $princiapl-background-gradient;\n}\nrouter-outlet {\n  display: none;\n}\n#container-continue-register {\n  background-color: transparent;\n  padding: 20px;\n  box-sizing: border-box;\n  header {\n    @include dp-flex-alignment(column,initial, initial);\n    gap: 15px;\n    .logo {\n      width: 30px;\n      height: auto;\n    }\n    p {\n      color: $white;\n      font-size: 25px;\n    }\n  }\n\n}\n",
                    "styleUrl": "./continue-register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-page-register\">\n  <div id=\"container-continue-register\" class=\"width-100-per\">\n    <header class=\"container-default\">\n      <img class=\"logo\" src=\"/assets/images/logo-blue.png\" alt=\"Logo Devotee\" data-alt=\"altlogo\" id=\"altfootlogo\">\n    </header>\n  </div>\n  <router-outlet ></router-outlet>\n  <app-footer [backgroudColor]=\"'bg-gradient-magenta-blue'\" [logo]=\"'/assets/images/logo-blue.png'\" class=\"width-100-per\"></app-footer>\n</div>\n\n\n"
        },
        {
            "name": "DevoteePlusComponent",
            "id": "component-DevoteePlusComponent-76d154fd2bd30b63d64ac72b2ddd136745d68897a4c608c7f8c3a3175549eb7b7db0aaa6f6116d011fd2f0fb5003284f1b1e909e3a8ccb1f7dc3456d90c74e33",
            "file": "src/app/shared/components/dialogs/devotee-plus/devotee-plus.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-devotee-plus",
            "styleUrls": [
                "./devotee-plus.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./devotee-plus.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-devotee-plus',\n  templateUrl: './devotee-plus.component.html',\n  styleUrls: ['./devotee-plus.component.scss']\n})\nexport class DevoteePlusComponent implements OnInit {\n  dataTexts;\n  constructor(\n    private matDialogRef: MatDialogRef<DevoteePlusComponent>,\n    private translateService: TranslateService,\n\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n\n   }\n\n  ngOnInit(): void {\n  }\n  closeModal() {\n    this.matDialogRef.close();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\n#container-dialog-activate-location {\n  .container-main {\n    @include dp-flex-alignment(column);\n\n    max-width: 900px;\n    box-sizing: border-box;\n    margin: auto;\n  }\n  .container-close {\n    margin-bottom: 30px;\n    mat-icon {\n      color: $gray-dark;\n    }\n  }\n  .container-title-dialog-devotee-plus {\n    @include dp-flex-alignment(column, flex-end, flex-end);\n    text-align: end;\n    width: 100%;\n  }\n  .container-new-features {\n    @include dp-flex-alignment();\n    position: relative;\n    left: -20%;\n    margin: 40px 0;\n    @include min-tablet {\n      left: 0;\n      gap: 40px;\n\n    }\n    .container-phone-feature {\n      @include min-tablet {\n        flex: 1;\n      }\n\n      img {\n        max-width: 170px;\n        @include min-tablet {\n          max-width: 220px;\n        }\n      }\n    }\n    .container-features {\n      @include dp-flex-alignment(column, initial, initial);\n      gap: 20px;\n      .feature {\n        color: $blue-dark;\n        @include dp-flex-alignment(row, center, initial);\n        gap: 10px;\n\n      }\n    }\n\n  }\n  .container-btn-conclusion {\n    @include dp-flex-alignment(column);\n    gap: 30px;\n    .buttons-download {\n      @include dp-flex-alignment();\n      gap: 10px;\n\n    }\n\n  }\n  .mobile {\n    @include min-tablet {\n      display: none;\n    }\n  }\n  .desk {\n    display: none;\n    @include min-tablet {\n      @include dp-flex-alignment(column);\n    }\n  }\n}\n",
                    "styleUrl": "./devotee-plus.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<DevoteePlusComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<DevoteePlusComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-dialog-activate-location\">\n  <div class=\"container-close\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeModal()\">\n      close\n    </mat-icon>\n  </div>\n  <div class=\"container-main\">\n    <header class=\"container-title-dialog-devotee-plus\" [innerHtml]=\"dataTexts.devotePlus.title\">\n    </header>\n    <div class=\"container-new-features\">\n      <section class=\"container-phone-feature \">\n        <img src=\"/assets/images/cellphone-feature-plus.png\" alt=\"\">\n      </section>\n      <section class=\"container-features\">\n        <section class=\"feature\">\n          <mat-icon class=\"color-magenta-soft\">check</mat-icon>\n          <p>{{dataTexts.devotePlus.features.noAds}}</p>\n        </section>\n        <section class=\"feature\">\n          <mat-icon class=\"color-magenta-soft\">check</mat-icon>\n          <p>{{dataTexts.devotePlus.features.matchAllUsers}}</p>\n        </section>\n        <section class=\"feature\">\n          <mat-icon class=\"color-magenta-soft\">check</mat-icon>\n          <p>{{dataTexts.devotePlus.features.seeAllLikes}}</p>\n        </section>\n        <section class=\"feature\">\n          <mat-icon class=\"color-magenta-soft\">check</mat-icon>\n          <p>{{dataTexts.devotePlus.features.moreEditData}}</p>\n        </section>\n        <div class=\"container-btn-conclusion desk\">\n          <div class=\"container-conclusion-dialog-devotee-plus\" [innerHtml]=\"dataTexts.devotePlus.conclusion\">\n          </div>\n          <div class=\"buttons-download\">\n            <a href=\"https://play.google.com/store/apps/details?id=com.phurshell.devotee&hl=pt_BR\" target=\"_blank\"\n              >\n              <img src={{dataTexts.buttonsDownload.btnPlayStore}} alt={{dataTexts.buttonsDownload.altPlaySotre}}></a>\n            <a href=\"https://apps.apple.com/br/app/devotee/id1331331692\" target=\"_blank\" >\n              <img src={{dataTexts.buttonsDownload.btnAppStore}} alt={{dataTexts.buttonsDownload.altAppStore}}></a>\n          </div>\n        </div>\n      </section>\n\n    </div>\n    <div class=\"container-btn-conclusion mobile\">\n      <div class=\"container-conclusion-dialog-devotee-plus\" [innerHtml]=\"dataTexts.devotePlus.conclusion\">\n      </div>\n      <div class=\"buttons-download\">\n        <a href=\"https://play.google.com/store/apps/details?id=com.phurshell.devotee&hl=pt_BR\" target=\"_blank\"\n          >\n          <img src={{dataTexts.buttonsDownload.btnPlayStore}} alt={{dataTexts.buttonsDownload.altPlaySotre}}></a>\n        <a href=\"https://apps.apple.com/br/app/devotee/id1331331692\" target=\"_blank\" >\n          <img src={{dataTexts.buttonsDownload.btnAppStore}} alt={{dataTexts.buttonsDownload.altAppStore}}></a>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n"
        },
        {
            "name": "EditAboutMeComponent",
            "id": "component-EditAboutMeComponent-aab57e26f28cebe0a0a74ece47cfdeed3aa9c7bcc1a5484524b67e5cd815b2bd826b56f254509215d6e99519da3963bc429a32d79fe638627563d874734749b5",
            "file": "src/app/shared/components/dialogs/edit-about-me/edit-about-me.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-about-me",
            "styleUrls": [
                "./edit-about-me.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-about-me.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "filteredCids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "filteredDrugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "filteredHosptals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "filteredMedicalProcedures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "laguagesApplication",
                    "defaultValue": "EnumLanguages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "showWasBorn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "specialAccount",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "usageLaguage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "addControlsTypeSpecial",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addKeyInDisabilitys",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 281,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeViewValueGender",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeViewValueSexualOrientation",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 244,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'close'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'close'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "compareFunction",
                    "args": [
                        {
                            "name": "o1",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "o2",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 250,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "o1",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "o2",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genderChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDatasSelectTypeSpecial",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeControlsIputSearchSpecialThings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveDataEdited",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "setInitialValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSpecialInitialValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "valueChangesInputsSearchSelects",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { takeUntil } from 'rxjs/operators';\nimport { nameValidatorSpecialCharacteres } from 'src/app/shared/validators/name/name-special-characteres.validator';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { State } from '@ngrx/store';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { EnumLanguages } from 'src/app/shared/enum/languages/languages.enum';\nimport { EnumUserType } from 'src/app/shared/enum/user-types/user-type.enum';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { nameValidatorFormatInvalid } from 'src/app/shared/validators/name/name-format-invalid.validator';\nimport { inputsSpecialPerson, searchSpecialPerson } from 'src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const';\nimport { GetSelectsSpecialPersonService } from 'src/app/shared/functions/get-selects-special-person/get-selects-special-person.service';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { EnumControlsSpecialPerson } from 'src/app/pages/continue-register/components/register-data/enum/constrols-inputs-special-person.enum';\nimport { UpdateDataService } from 'src/app/core/services/update-data/update-data.service';\n\n@Component({\n  selector: 'app-edit-about-me',\n  templateUrl: './edit-about-me.component.html',\n  styleUrls: ['./edit-about-me.component.scss']\n})\nexport class EditAboutMeComponent implements OnInit {\n  dataTexts;\n\n  specialAccount = false;\n  usageLaguage;\n\n  laguagesApplication = EnumLanguages;\n  formGroup: FormGroup;\n\n\n  filteredCids: Observable<any[]>;\n  filteredMedicalProcedures: Observable<any[]>;\n  filteredDrugs: Observable<any[]>;\n  filteredHosptals: Observable<any[]>;\n\n  showWasBorn = false;\n\n  destroy$ = new ReplaySubject(1);\n  constructor(\n    protected state: State<IAppState>,\n    private matDialogRef: MatDialogRef<EditAboutMeComponent>,\n    private translateService: TranslateService,\n    private formBuilder: FormBuilder,\n    private getSelectsSpecialPersonService: GetSelectsSpecialPersonService,\n    private updateDataService: UpdateDataService,\n\n\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.usageLaguage = this.translateService?.dataFormatation;\n\n  }\n\n  ngOnInit() {\n    this.initForm();\n    if (this.state.getValue()?.userData?.data?.account_type == EnumUserType.SPECIAL) {\n      this.specialAccount = true;\n      this.addControlsTypeSpecial();\n      this.getDatasSelectTypeSpecial();\n      this.valueChangesInputsSearchSelects();\n    };\n    this.setInitialValues()\n  }\n  private initForm() {\n    this.formGroup = this.formBuilder.group({\n      profile_picture: this.formBuilder.array([]),\n      name: [\n        '',\n        [\n          nameValidatorSpecialCharacteres,\n          nameValidatorFormatInvalid,\n        ]\n      ],\n      email: [\n        '',\n        [\n          Validators.email\n        ]\n      ],\n      occupation: [\n        ''\n      ],\n      gender: [\n        '',\n        [\n        ]\n      ],\n      show_as_gender: [\n        '',\n        [\n        ]\n      ],\n      sexual_orientation: [\n        '',\n        [\n        ]\n      ],\n      about: [\n        '',\n        [\n        ]\n      ]\n\n    })\n  }\n  addControlsTypeSpecial(): void {\n    const controlsSpecial = [\n      ...searchSpecialPerson,\n      ...inputsSpecialPerson,\n    ]\n    controlsSpecial.forEach((value: string) => {\n      this.formGroup\n        .addControl(\n          value,\n          this.formBuilder.control('',));\n    });\n  }\n  removeControlsIputSearchSpecialThings() {\n    const controlsSpecial = [\n      ...searchSpecialPerson,\n      ...inputsSpecialPerson,\n      'profile_picture'\n    ];\n    controlsSpecial.forEach((value: string) => {\n      this.formGroup.removeControl(value);\n    });\n  }\n  getDatasSelectTypeSpecial() {\n    this.getSelectsSpecialPersonService\n      .getCids().then(res => {\n        this.filteredCids = res.data;\n      });\n    this.getSelectsSpecialPersonService\n      .getMedicalProcedures().then(res => {\n        this.filteredMedicalProcedures = res.data;\n        this.setSpecialInitialValues();\n      });\n    this.getSelectsSpecialPersonService\n      .getDrugsMedicines().then(res => {\n        this.filteredDrugs = res.data;\n      });\n    this.getSelectsSpecialPersonService\n      .getHosptalsLogged().then(res => {\n        this.filteredHosptals = res.data;\n      });\n\n  }\n  valueChangesInputsSearchSelects() {\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MY_CID)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getCids(res)\n          .then(selectData => {\n            this.filteredCids = selectData.data;\n        })\n      });\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MY_DRUGS)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getDrugsMedicines(res)\n          .then(selectData => {\n            this.filteredDrugs = selectData.data;\n        })\n      });\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MEDICAL_PROCEDURES)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getMedicalProcedures(res)\n          .then(selectData => {\n            this.filteredMedicalProcedures = selectData.data;\n        })\n      });\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MY_HOSPTALS)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getHosptals(res)\n          .then(selectData => {\n            this.filteredHosptals = selectData.data;\n        })\n      });\n  }\n  genderChanged(value) {\n    if (value === 'trans') {\n      this.showWasBorn = true;\n      return this.showWasBorn;\n    }\n    this.formGroup.get('show_as_gender').setValue(value);\n    this.showWasBorn = false;\n    return this.showWasBorn;\n  }\n  setInitialValues() {\n    const userData = this.state.getValue()?.userData?.data;\n    this.formGroup.patchValue({\n      ...userData,\n    })\n  }\n  setSpecialInitialValues() {\n    const userData = this.state.getValue()?.userData?.data;\n    let medicalProcedure = []\n    let cids = []\n    let drugs = []\n    let hospital = []\n\n    userData?.medical_procedures.forEach(element => {\n      medicalProcedure.push(element?.medical_procedures?.id);\n\n    });\n    this.formGroup.get('medical_procedures')\n      .setValue(medicalProcedure);\n\n    //cids\n    userData?.my_cids.forEach(element => {\n      cids.push(element?.cid.id);\n    });\n\n    this.formGroup.get('my_cids')\n      .setValue(cids);\n    //drugs\n    userData?.my_drugs.forEach(element => {\n      drugs.push(element?.drug.id);\n    });\n      this.formGroup.get('my_drugs')\n        .setValue(drugs);\n    userData?.my_hospitals.forEach(element => {\n      hospital.push(element?.hosptal.id);\n    });\n      this.formGroup.get('my_hospitals')\n        .setValue(hospital);\n  }\n  changeViewValueSexualOrientation(value) {\n    return this.formGroup.get('sexual_orientation').value || value;\n  }\n  changeViewValueGender(value) {\n    return this.formGroup.get('gender').value || value;\n  }\n  compareFunction(o1: any, o2: any) {\n    return (o1.name == o2.name && o1.id == o2.id);\n  }\n  async saveDataEdited() {\n    let updateData;\n    let disabilitys;\n    if(this.specialAccount) {\n      disabilitys = {\n        cids: this.addKeyInDisabilitys(this.formGroup.get('my_cids').value),\n        medical_procedures: this.addKeyInDisabilitys(this.formGroup.get('medical_procedures').value),\n        medicament: this.addKeyInDisabilitys(this.formGroup.get('my_drugs').value),\n        hospital: this.addKeyInDisabilitys(this.formGroup.get('my_hospitals').value),\n      }\n    }\n\n    this.removeControlsIputSearchSpecialThings();\n    updateData = {\n      ...this.formGroup.value,\n    }\n    if (this.specialAccount) {\n      updateData = {\n        ...this.formGroup.value,\n        disability: disabilitys\n      }\n    }\n    await this.updateDataService.post(updateData, this.state.getValue()?.userData?.data.id).toPromise();\n    setTimeout(() => {\n      this.closeModal('saved');\n\n    }, 500);\n  }\n  addKeyInDisabilitys(value) {\n    let newArrayValue = [];\n    value.forEach(element => {\n      newArrayValue.push( {id: element})\n    });\n    return newArrayValue;\n  }\n  closeModal(action: string = 'close') {\n    this.matDialogRef.close(action);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-about-me.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<EditAboutMeComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getSelectsSpecialPersonService",
                        "type": "GetSelectsSpecialPersonService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<EditAboutMeComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getSelectsSpecialPersonService",
                        "type": "GetSelectsSpecialPersonService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"formGroup\" id=\"container-edit-about-me\">\n  <section class=\"container-data-person container-register-default\">\n    <mat-card-title>{{dataTexts.iamEspecialAndDevotee.titleAboutYourself}}</mat-card-title>\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>{{dataTexts.inputs.name.label}}</mat-label>\n        <input\n          matInput\n          [placeholder]=\"dataTexts.inputs.name.placeHolder\"\n          type=\"name\"\n          autocomplete=\"name\"\n          formControlName=\"name\"\n          >\n\n      </mat-form-field> -->\n    </div>\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>{{dataTexts.inputs.profession.label}}</mat-label>\n        <input\n          matInput\n          [placeholder]=\"dataTexts.inputs.profession.placeHolder\"\n          type=\"text\"\n          autocomplete=\"work\"\n          formControlName=\"occupation\"\n          >\n      </mat-form-field>\n      <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>{{dataTexts.inputs.birthdate.label}}</mat-label>\n        <input\n          type=\"hidden\"\n          [min]=\"minDate\"\n          [max]=\"maxDate\"\n          [matDatepicker]=\"picker\"\n          maxlength=\"10\"\n          (dateChange)=\"dateSelected($event)\"\n          >\n          <input\n            matInput\n            [mask]=\"\"\n            formControlName=\"birthdate\">\n        <mat-hint>{{dataTexts.inputs.birthdate.placeHolder}}</mat-hint>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field> -->\n    </div>\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.gender.label }}</mat-label>\n        <mat-select formControlName=\"gender\" (valueChange)=\"genderChanged($event)\">\n          <mat-option\n            *ngFor=\"\n              let gender\n              of dataTexts.genders\"\n            [value]=\"changeViewValueGender(gender.value)\">\n            {{gender.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" *ngIf=\"showWasBorn\">\n        <mat-label>{{ dataTexts.inputs.wasBorn.label }}</mat-label>\n        <mat-select formControlName=\"show_as_gender\">\n          <mat-option\n            *ngFor=\"\n              let gender\n              of dataTexts.genders.slice(0, 2)\"\n            [value]=\"gender.value\">\n            {{gender.label}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"controlsForm.show_as_gender.hasError(errorsEnum.REQUIRED)\">\n          {{ dataTexts.inputs.genericErrors.inputRequired }}\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.sexualOrientation.label }}</mat-label>\n        <mat-select formControlName=\"sexual_orientation\">\n          <mat-option\n            *ngFor=\"\n              let sexualOrientation\n              of dataTexts.sexualOrientations\"\n            [value]=\"changeViewValueSexualOrientation(sexualOrientation.value)\">\n            {{sexualOrientation.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.moreAboutYourself.label }}</mat-label>\n        <textarea\n          matInput\n          [placeholder]=\"dataTexts.inputs.moreAboutYourself.placeHolder\"\n          formControlName=\"about\">\n        </textarea>\n      </mat-form-field>\n    </div>\n  </section>\n  <section *ngIf=\"specialAccount\" class=\"container-data-disability container-register-default\">\n    <mat-card-title>{{dataTexts.iamEspecialAndDevotee.titleAboutYourDisability}}</mat-card-title>\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.selectICD.label }}</mat-label>\n        <mat-select\n        formControlName=\"my_cids\"\n        multiple>\n          <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.searchs.iIcd.label }}</mat-label>\n            <input\n              matInput\n              [placeholder]=\"dataTexts.inputs.searchs.iIcd.placeholder\"\n              formControlName=\"input_my_cids\"\n              type=\"search\"\n              (keydown)=\"$event.stopPropagation()\"\n              >\n          </mat-form-field>\n          <div *ngIf=\"usageLaguage === laguagesApplication.PT\">\n            <mat-option [value]=\"icd.id\" *ngFor=\"let icd of filteredCids\">\n              {{icd.description}}\n            </mat-option>\n          </div>\n          <div *ngIf=\"usageLaguage === laguagesApplication.US \">\n            <mat-option [value]=\"icd.id\" *ngFor=\"let icd of filteredCids\">\n              {{icd.description_en}}\n            </mat-option>\n          </div>\n\n\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.selectMedicalProcedures.label }}</mat-label>\n        <mat-select\n          multiple\n          formControlName=\"medical_procedures\"\n\n          >\n          <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.searchs.medicalProcedures.label }}</mat-label>\n            <input\n              matInput\n              [placeholder]=\"dataTexts.inputs.searchs.medicalProcedures.placeholder\"\n              type=\"name\"\n              autocomplete=\"name\"\n\n              formControlName=\"input_medical_procedures\"\n              (keydown)=\"$event.stopPropagation()\"\n\n              >\n          </mat-form-field>\n          <div *ngIf=\"usageLaguage === laguagesApplication.PT\">\n            <mat-option [value]=\"medicalProcedure.id\" *ngFor=\"let medicalProcedure of filteredMedicalProcedures\">\n              {{medicalProcedure.name}}\n            </mat-option>\n          </div>\n          <div *ngIf=\"usageLaguage === laguagesApplication.US \">\n            <mat-option [value]=\"medicalProcedure.id\" *ngFor=\"let medicalProcedure of filteredMedicalProcedures\">\n              {{medicalProcedure.name_en}}\n            </mat-option>\n          </div>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"container-default-inputs-orientation content-data-person\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.selectMedications.label }}</mat-label>\n        <mat-select\n        formControlName=\"my_drugs\"\n        multiple\n        >\n          <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.searchs.medicines.label }}</mat-label>\n            <input\n              matInput\n              [placeholder]=\"dataTexts.inputs.searchs.medicines.placeholder\"\n              type=\"name\"\n              autocomplete=\"name\"\n              formControlName=\"input_my_drugs\"\n              (keydown)=\"$event.stopPropagation()\"\n              >\n          </mat-form-field>\n          <div *ngIf=\"usageLaguage === laguagesApplication.PT\">\n            <mat-option [value]=\"drug.id\" *ngFor=\"let drug of filteredDrugs\">\n              {{drug.name}}\n            </mat-option>\n          </div>\n          <div *ngIf=\"usageLaguage === laguagesApplication.US \">\n            <mat-option [value]=\"drug.id\" *ngFor=\"let drug of filteredDrugs\">\n              {{drug.name_en}}\n            </mat-option>\n          </div>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ dataTexts.inputs.selectHospitals.label }}</mat-label>\n        <mat-select\n        formControlName=\"my_hospitals\"\n        multiple>\n          <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.searchs.hospitals.label }}</mat-label>\n            <input\n              matInput\n              [placeholder]=\"dataTexts.inputs.searchs.hospitals.placeholder\"\n              type=\"name\"\n              autocomplete=\"name\"\n              formControlName=\"input_my_hospitals\"\n              (keydown)=\"$event.stopPropagation()\"\n              >\n          </mat-form-field>\n          <div>\n            <mat-option [value]=\"hosptal\" *ngFor=\"let hosptal of filteredHosptals\">\n              {{hosptal.name}}\n            </mat-option>\n          </div>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </section>\n  <section class=\"contianer-btns\">\n    <button\n      class=\"button-stroke-primary\"\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"closeModal()\"\n      >\n      {{ dataTexts.buttons.btnCancel }}\n    </button>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"saveDataEdited()\"\n      >\n      {{ dataTexts.buttons.btnSave }}\n    </button>\n  </section>\n</form>\n"
        },
        {
            "name": "EditProfilePicturesComponent",
            "id": "component-EditProfilePicturesComponent-f7d5968022b7f716f4fc3ef84c355d3eae08d5d335f1d11f876fe0d3977f4c60b8190b5af166e6562e11c36df37627b76d4adad6af19ab72dff329d5588068c2",
            "file": "src/app/shared/components/dialogs/edit-profile-pictures/edit-profile-pictures.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-profile-pictures",
            "styleUrls": [
                "./edit-profile-pictures.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-profile-pictures.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "imagesTypes",
                    "defaultValue": "ImagesTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "imagesURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "initialImagesGet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "urlImagesS3",
                    "defaultValue": "environment.urlImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "addImages",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [
                        {
                            "name": "msgSend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "msgSend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedImage",
                    "args": [
                        {
                            "name": "files",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "imageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "order",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "imageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "order",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setArrayOfImages",
                    "args": [],
                    "optional": false,
                    "returnType": "Array<any>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { State } from '@ngrx/store';\nimport { ProfilePicturesService } from 'src/app/core/services/profile-pictures/profile-pictures.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { UpdatePictureByOrderService } from 'src/app/core/services/update-picture-by-order/update-picture-by-order.service';\nimport { UserProfileService } from 'src/app/core/services/user-profile/user-profile.service';\nimport { ImagesTypes } from 'src/app/pages/continue-register/components/register-data/enum/images-type.enum';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-edit-profile-pictures',\n  templateUrl: './edit-profile-pictures.component.html',\n  styleUrls: ['./edit-profile-pictures.component.scss']\n})\nexport class EditProfilePicturesComponent implements OnInit {\n  imagesTypes = ImagesTypes;\n  urlImagesS3 = environment.urlImages;\n  imagesURL;\n  images: Array<any>;\n  initialImagesGet: Array<any>;\n\n  loading = false;\n\n  dataTexts;\n  constructor(\n    protected state: State<IAppState>,\n    private matDialogRef: MatDialogRef<EditProfilePicturesComponent>,\n    private translateService: TranslateService,\n    private profilePicturesService: ProfilePicturesService,\n    private updatePictureByOrderService: UpdatePictureByOrderService,\n    private userProfileService: UserProfileService,\n  ) { }\n\n  ngOnInit() {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.setArrayOfImages();\n  }\n  setArrayOfImages() {\n    const userProfilePictures = this.state.getValue().userData.data.profile_picture;\n    this.initialImagesGet = userProfilePictures;\n    if (userProfilePictures.length < 6) {\n      let array = Object.assign([], userProfilePictures);\n      let index = userProfilePictures.length;\n      for (index;  index < 6; index++) {\n        array.push({});\n      }\n      this.images = array;\n      return this.images;\n    }\n    this.images = userProfilePictures;\n\n  }\n  selectedImage(files: File, imageIndex: number, order: number) {\n    if (files && files[0]) {\n      const reader = new FileReader();\n      reader.readAsDataURL(files[0]);\n      reader.onload = (evt) => {\n        this.images[imageIndex] = {\n          path: evt.target.result,\n          localPath: true,\n          order,\n          file: files[0],\n          imageIndex\n        }\n      };\n    }\n  }\n  async addImages() {\n    const formData = new FormData();\n    let lastOrder;\n    if(this.initialImagesGet.length > 0) {\n      lastOrder = this.initialImagesGet[this.initialImagesGet?.length - 1].order;\n    } else {\n      lastOrder = 0;\n    }\n    for (let i = 0; i < this.images.length; i++) {\n      if (this.images[i].localPath && this.images[i].order !== undefined) {\n        formData.append('image[]', this.images[i].file);\n        formData.append('order[]', this.images[i].order);\n      } else if(this.images[i].order === undefined) {\n        lastOrder++;\n        formData.append('image[]', this.images[i].file);\n        formData.append('order[]', lastOrder);\n      }\n    }\n    this.loading = true;\n    await this.updatePictureByOrderService.post(formData).toPromise();\n    this.userProfileService.get(this.state.getValue().userData.data?.id);\n    this.loading = false;\n    this.closeModal('saved')\n  }\n\n  closeModal(msgSend?: string) {\n    this.matDialogRef.close(msgSend);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n.container-others-pictures {\n  @include dp-flex-alignment(column, center, space-between);\n  height: 100%;\n}\n.more-pictures {\n  @include dp-flex-alignment(row, center, space-between);\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 30px 0;\n  .more-photos {\n    @include dp-flex-alignment();\n    background-color: $gray-medium-soft;\n    border: 1px solid $gray-soft;\n    border-radius: 8px;\n    height: 100px;\n    min-width: 100px;\n    max-width: 180px;\n    &:hover {\n      border: 1px solid $blue-dark;\n    }\n    img{\n      max-width: 100%;\n      max-height: 100%;\n      border-radius: 8px;\n      display: block;\n      max-height: 100px;\n    }\n    mat-icon {\n      width: 100%;\n      max-width: 30px;\n      height: auto;\n      padding: 20px;\n      @include min-tablet {\n        max-width: 55px;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./edit-profile-pictures.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<EditProfilePicturesComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "profilePicturesService",
                        "type": "ProfilePicturesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "updatePictureByOrderService",
                        "type": "UpdatePictureByOrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<EditProfilePicturesComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "profilePicturesService",
                        "type": "ProfilePicturesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updatePictureByOrderService",
                        "type": "UpdatePictureByOrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"container-others-pictures container-register-default\">\n  <mat-card-title class=\"color-blue-dark font-booster-next-bold\">Edit profile pictures</mat-card-title>\n  <div class=\"more-pictures\">\n    <div\n      class=\"more-photos flex-1 cursor-pointer\"\n      *ngFor=\"let image of images;let indexOfelement = index;\">\n      <label [for]=\"'more-photos-' + indexOfelement\" class=\"cursor-pointer\">\n        <mat-icon svgIcon=\"camera_add_picture\" *ngIf=\"!image?.path\"></mat-icon>\n        <div *ngIf=\"image?.path  && !image?.localPath\">\n          <img class=\"\" [src]=\"urlImagesS3 + image?.path\" alt=\"\">\n        </div>\n        <div *ngIf=\"image?.path  && image?.localPath\">\n          <img class=\"\" [src]=\"image?.path\" alt=\"\">\n        </div>\n      </label>\n\n      <input\n        type=\"file\"\n        [id]=\"'more-photos-' + indexOfelement\"\n        [name]=\"'more-photos-' + indexOfelement\"\n        accept=\"image/png, image/jpeg\"\n        class=\"input-file input-photo-principal\"\n        (change)=\"selectedImage($event.target.files, indexOfelement, image.order)\">\n    </div>\n  </div>\n  <section class=\"contianer-btns\">\n    <button\n      class=\"button-stroke-primary\"\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"closeModal()\"\n      >\n      {{ dataTexts.buttons.btnCancel }}\n    </button>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"addImages()\"\n      >\n      {{ dataTexts.buttons.btnSave }}\n    </button>\n  </section>\n</section>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n"
        },
        {
            "name": "EticalRulesComponent",
            "id": "component-EticalRulesComponent-ea46400f6598b3a5ba192b7763c2296d10b8b0f97262648932b857f3bf28c7a7be0d84f528094dab2753c644b6e7a8c7ea1c57ed417746ff4590d186b4b1fd61",
            "file": "src/app/pages/etical-rules/etical-rules.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-etical-rules",
            "styleUrls": [
                "./etical-rules.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./etical-rules.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "enumRoutes",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "firstRule",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelCardImgTitleText",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "secondRule",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelCardImgTitleText",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "thirdRule",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelCardImgTitleText",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "generateDataForCardRules",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { ModelCardImgTitleText } from './../../shared/model/card-img-title-text/card-img-title-text.model';\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { icon, idsRules } from './enum/card-img-title-text.enum';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\n\n@Component({\n  selector: 'app-etical-rules',\n  templateUrl: './etical-rules.component.html',\n  styleUrls: ['./etical-rules.component.scss']\n})\nexport class EticalRulesComponent implements OnInit {\n  dataTexts;\n\n  firstRule: ModelCardImgTitleText;\n  secondRule: ModelCardImgTitleText;\n  thirdRule: ModelCardImgTitleText;\n\n  enumRoutes = EnumRoutesApplication\n  constructor(\n    private translateService: TranslateService,\n    private routeService: RouteService\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.generateDataForCardRules();\n   }\n\n  ngOnInit() {\n\n  }\n  generateDataForCardRules() {\n    const rulesTranslated = this.dataTexts.eticalRules.rules;\n    this.firstRule = new ModelCardImgTitleText(\n      idsRules.FIRST_RULE,\n      icon.CHECK_MAGENTA,\n      rulesTranslated.firstRule.title,\n      rulesTranslated.firstRule.text\n    );\n    this.secondRule = new ModelCardImgTitleText(\n      idsRules.SECOND_RULE,\n      icon.CHECK_MAGENTA,\n      rulesTranslated.secondRule.title,\n      rulesTranslated.secondRule.text\n    );\n    this.thirdRule = new ModelCardImgTitleText(\n      idsRules.THIRD_RULE,\n      icon.CHECK_MAGENTA,\n      rulesTranslated.thirdRule.title,\n      rulesTranslated.thirdRule.text\n    );\n  }\n  navigateTo(route: string): void {\n    this.routeService.navigateToURL(route);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\n#container-etical-rules {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  .content-etical-rules {\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    width: $s-100vw;\n    background: $princiapl-background-gradient;\n\n    .logo-devote {\n      gap: $s-20px;\n      padding: $s-15px;\n      box-sizing: border-box;\n      @media screen and(max-width: $epecific-mobile) {\n       flex-direction: column;\n      }\n      img {\n        max-width: 115px;\n        @media screen and(max-width: $epecific-mobile) {\n          max-width: 5rem;\n        }\n      }\n      .container-text-logo {\n        h1 {\n          font-size: 2.6rem;\n        }\n      }\n    }\n    #etical-rules {\n      margin-top: $s-15px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: center;\n      gap: $s-20px;\n      padding: $s-20px $s-15px;\n      width: $s-100per;\n      box-sizing: border-box;\n      .content-rules {\n        gap: $s-20px;\n        margin: $s-40px 0;\n      }\n      app-card-img-title-text {\n        width: 100%;\n      }\n      .container-buttons {\n        flex-direction: column;\n        align-items: center;\n        max-width: 840px;\n        gap: $s-20px;\n        width: $s-100per;\n\n        @include min-tablet {\n          flex-direction: row;\n        }\n      }\n    }\n  }\n  app-footer {\n    width: $s-100vw;\n  }\n}\n",
                    "styleUrl": "./etical-rules.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-etical-rules\" class=\"height-100vh\">\n<div class=\"content-etical-rules dp-flex\">\n  <header class=\"logo-devote dp-flex-all-center\">\n    <img src=\"/assets/images/logo-blue.png\" alt=\"Logo Devotee\" data-alt=\"altlogo\" id=\"altfootlogo\">\n    <div class=\"container-text-logo dp-flex-column-all-center\">\n      <h2 class=\"color-blue-dark\">{{dataTexts.eticalRules.welcome}}</h2>\n      <h1 class=\"color-blue-dark font-booster-next-bold\">Devotee</h1>\n    </div>\n  </header>\n  <main id=\"etical-rules\">\n    <div class=\"content-rules dp-flex-column-all-center\">\n      <h3 class=\"color-blue-dark\">{{dataTexts.eticalRules.followRules}}</h3>\n\n      <app-card-img-title-text [data]=\"firstRule\"></app-card-img-title-text>\n      <app-card-img-title-text [data]=\"secondRule\"></app-card-img-title-text>\n      <app-card-img-title-text [data]=\"thirdRule\"></app-card-img-title-text>\n    </div>\n\n    <div class=\"container-buttons dp-flex\">\n      <button class=\"button stroke-primary flex-1\" (click)=\"navigateTo(enumRoutes.PRE_REGISTER)\">\n        {{dataTexts.buttons.btnBack}}\n      </button>\n      <button class=\"button primary flex-1\" (click)=\"navigateTo(enumRoutes.REGISTER_USER_DATA)\">\n        {{dataTexts.buttons.btnContinue}}\n      </button>\n\n    </div>\n  </main>\n</div>\n<app-footer [backgroudColor]=\"'bg-gradient-magenta-blue'\" [logo]=\"'/assets/images/logo-blue.png'\"></app-footer>\n</div>\n"
        },
        {
            "name": "FilterPreferencesComponent",
            "id": "component-FilterPreferencesComponent-2581b1c136d772a0d258a6bddb66fac89cd0fc1adf8adf57a433283eb9968a90ed3e366d3e65a512acd48bc55205f465b70c6b68b4e4cfecd6650991745581af",
            "file": "src/app/pages/filter-preferences/filter-preferences.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-preferences",
            "styleUrls": [
                "./filter-preferences.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter-preferences.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "returnBackRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "setValuesRegitered",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { State } from '@ngrx/store';\nimport { SnackBarService } from 'src/app/core/services/snack-bar/snack-bar.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { UpdateDataService } from 'src/app/core/services/update-data/update-data.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { IAppState } from 'src/app/state-management/app.model';\n\n@Component({\n  selector: 'app-filter-preferences',\n  templateUrl: './filter-preferences.component.html',\n  styleUrls: ['./filter-preferences.component.scss']\n})\nexport class FilterPreferencesComponent implements OnInit {\n  dataTexts;\n\n  formGroup: FormGroup;\n  constructor(\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private updateDataService: UpdateDataService,\n    private routerService: RouteService,\n    private snackBarService: SnackBarService,\n  ) { }\n\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.initForm();\n    this.setValuesRegitered();\n  }\n  private initForm() {\n    this.formGroup = this.formBuilder.group({\n      max_distance: [\n        '',\n      ],\n      target_gender: [\n        ''\n      ],\n      target_account_type: [\n        ''\n      ],\n      age_min: [\n        ''\n      ],\n      age_max: [\n        ''\n      ]\n    })\n  }\n  returnBackRoute() {\n    this.location.back();\n  }\n  setValuesRegitered() {\n    // const\n    this.formGroup.patchValue(\n      {\n        ...this.state.getValue()?.userData?.data\n      }\n    )\n  }\n  async setFilters() {\n    const stateUser = this.state.getValue()?.userData?.data;\n    const dataUpdate = {\n      ...stateUser,\n      ...this.formGroup.value\n    }\n    const data = await this.updateDataService.post(dataUpdate, stateUser.id).toPromise();\n    this.snackBarService.openSnackbarSuccess(\n      this.dataTexts.snacksBars.successSaveFilters.mensage,\n      this.dataTexts.snacksBars.successSaveFilters.button);\n    this.navigateTo(EnumRoutesApplication.MATCHS);\n  }\n  navigateTo(route: string) {\n    this.routerService.navigateToURL(route);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\n#container-filters-preferences {\n  .container-type-data-default {\n    padding: 20px 0;\n\n  }\n  .content-preferences {\n    @include dp-flex-alignment(column);\n    gap: 20px;\n    mat-card {\n      width: 100%;\n      border-radius: 20px;\n      box-shadow: none!important;\n      padding: 30px 20px;\n      box-sizing: border-box;\n    }\n    .first-title {\n      margin-top: 0;\n    }\n    .content-deafult-preference-sections {\n      .slider {\n        width: 100%;\n      }\n    }\n    .text-age {\n      margin-left: 20px;\n    }\n  }\n}\n",
                    "styleUrl": "./filter-preferences.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routerService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routerService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-filters-preferences\" class=\"container-default-cards-register\">\n  <mat-card class=\"container-title-register\">\n    <div class=\"container-title-register cursor-pointer\" (click)=\"returnBackRoute()\">\n      <mat-icon class=\"mat-18 color-magenta-soft\">arrow_back_ios</mat-icon>\n      <mat-card-title>{{dataTexts.preferences.title}}</mat-card-title>\n    </div>\n  </mat-card>\n  <div class=\"container-type-data-default\">\n    <form [formGroup]=\"formGroup\" class=\"content-preferences\">\n      <mat-card class=\"content-deafult-preference-sections\">\n        <mat-card-title class=\"first-title\">{{dataTexts.preferences.locale.title}}</mat-card-title>\n        <mat-slider\n        class=\"slider\"\n        tickInterval=\"0\"\n        min=\"1\"\n        max=\"5000\"\n        formControlName=\"max_distance\"\n        #searchRadius>  </mat-slider>\n        <p class=\"color-blue-dark text-center\">{{dataTexts.preferences.locale.distance}} <span class=\"font-booster-next-bold\">{{searchRadius.value}} {{dataTexts.preferences.locale.sufixDistance}}</span> </p>\n      </mat-card>\n      <mat-card class=\"content-deafult-preference-sections\">\n        <mat-card-title>{{dataTexts.preferences.userPreference.title}}</mat-card-title>\n        <div class=\"container-default-inputs-orientation\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.filterUserType.label }}</mat-label>\n            <mat-select\n            formControlName=\"target_account_type\">\n              <mat-option\n                *ngFor=\"\n                  let gender\n                  of dataTexts.userTypeValues\"\n                [value]=\"gender.value\">\n                {{gender.label}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.filterToGender.label }}</mat-label>\n            <mat-select\n            formControlName=\"target_gender\">\n              <mat-option\n                *ngFor=\"\n                  let gender\n                  of dataTexts.targetGenders\"\n                [value]=\"gender.value\">\n                {{gender.label}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div class=\"container-default-inputs-orientation\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>{{ dataTexts.inputs.filterToInterestType.label }}</mat-label>\n            <mat-select\n            formControlName=\"target_account_type\">\n              <mat-option\n                *ngFor=\"\n                  let gender\n                  of dataTexts.relationshipValues\"\n                [value]=\"gender.value\">\n                {{gender.label}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </mat-card>\n      <mat-card  class=\"content-deafult-preference-sections\">\n        <mat-card-title>{{dataTexts.preferences.age.title}}</mat-card-title>\n        <div class=\"container-default-inputs-orientation\">\n          <section class=\"content-age width-100-per\">\n            <mat-slider\n              class=\"width-100-per\"\n              min=\"18\"\n              max=\"100\"\n              formControlName=\"age_min\"\n              #minAge>\n            </mat-slider>\n            <p class=\"color-blue-dark text-age text-center\">\n              {{dataTexts.preferences.age.minAge}}\n              {{minAge.value}}\n              {{dataTexts.preferences.age.years}}\n            </p>\n          </section>\n\n          <section class=\"content-age width-100-per\">\n            <mat-slider\n              class=\"width-100-per\"\n              min=\"18\"\n              max=\"100\"\n              formControlName=\"age_max\"\n              #maxAge>\n            </mat-slider>\n            <p class=\"color-blue-dark text-age text-center\">\n              {{dataTexts.preferences.age.maxAge}}\n              {{maxAge.value}}\n              {{dataTexts.preferences.age.years}}\n            </p>\n\n          </section>\n\n        </div>\n      </mat-card>\n    </form>\n  </div>\n\n</div>\n<section class=\"contianer-btns out-container\">\n  <button\n    (click)=\"returnBackRoute()\"\n    class=\"button stroke-primary\"\n    >\n    {{ dataTexts.buttons.btnBack }}\n  </button>\n  <button\n  (click)=\"setFilters()\"\n    mat-flat-button\n    class=\"button primary\"\n      >\n\n    {{ dataTexts.buttons.btnSave }}\n  </button>\n\n</section>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-3862ae80844c45e88916f4a47766c4106ff8715e9859966c31f10fc9c9030dd567949495e0132f86c24d5f6f8cc2d70ca2d0a2d6f3319dc20a839cfb5bb6e897",
            "file": "src/app/shared/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroudColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logo",
                    "defaultValue": "'/assets/images/logo.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonsDownload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "copyright",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { TranslateService } from './../../../core/services/translate/translate.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DialogsService } from '../../functions/dialogs/dialogs.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  @Input() backgroudColor: string;\n  @Input() logo = '/assets/images/logo.png';\n\n\n  dataTexts;\n  buttonsDownload;\n  copyright: string;\n  constructor(\n    private translateService: TranslateService,\n    private dialogsService: DialogsService,\n    ) {\n      this.dataTexts = this.translateService.textTranslate;\n      this.buttonsDownload = this.dataTexts.buttonsDownload;\n      this.copyright = ` Copyright © ${new Date().getFullYear()} ${this.dataTexts.copyright}`;\n    }\n  ngOnInit(): void {\n  }\n  openTerms() {\n    this.dialogsService.openTerms();\n  }\n  openPrivacy() {\n    this.dialogsService.openPrivacy();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_colors';\n@import '_sizes';\n@import '_mixins';\n@import '_breakpoints';\n@import '_fonts';\n\n$opacity-70: 70%;\nfooter{\n  p{\n    margin: 0;\n    color: $white;\n  }\n  background-color: $magenta-soft-20;\n  flex-direction: column;\n  padding-bottom: 1.5rem;\n  .logo{\n    a{\n        text-decoration: none;\n    }\n    img {\n      width: 30px;\n      height: 30px;\n    }\n    .logo-text{\n      color: $white;\n      font-size:2rem;\n      font-weight: normal;\n      margin-left: 8px;\n  }\n  }\n  .terms-policy{\n      display: flex;\n      justify-content: center;\n      gap: 15px;\n      .policy, .terms{\n        opacity: $opacity-70;\n        font-size: 1rem;\n        &:hover{\n          opacity: 100%;\n          cursor: pointer;\n        }\n      }\n  }\n  .download-app{\n      flex-direction: column;\n      margin-top: 15px;\n      p{\n          color: $white;\n          font-size:600;\n      }\n      :first-child{\n          margin-right: 10px;\n      }\n  }\n  .logo{\n      padding: 2rem 0 1rem;\n  }\n  .buttons-download{\n      margin-top: 5px;\n      img{\n          width: auto;\n          height: 30px;\n      }\n  }\n  #copyright{\n      opacity: $opacity-70;\n      margin-top: 1rem;\n      font-size: 1rem;\n      color: $white;\n  }\n}\n@media only screen and (min-width: $epecific-mobile) {\n  footer{\n    .logo-terms{\n      grid-area: logo-terms;\n    }\n\n  }\n}\n@include min-tablet {\n  .logo{\n    padding-bottom: 0;\n  }\n  .download-copyright{\n    grid-area: download-copyright;\n    display: flex;\n    grid-area: download-copyright;\n    justify-content: center;\n  }\n  .copyright{\n    text-align: center;\n    grid-area: copyright;\n  }\n  .container-footer{\n    max-width: 800px;\n    width: 700px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n    \"logo-terms download-copyright\"\n    \"copyright copyright\"\n    ;\n  }\n}\n@include max-mobile {\n  header{\n    padding-right: 4rem;\n  }\n  .container-text {\n      margin-right: 4rem;\n  }\n  .container-video  {\n      iframe{\n          height: 441px;\n      }\n  }\n  article{\n      margin-bottom: 0;\n  }\n  footer{\n      flex-direction: row;\n      .logo-terms{\n          display: flex;\n          flex-direction: column;\n          align-items: baseline;\n          padding-left: 20px;\n      }\n      .logo {\n        padding: 2rem 0 0.3rem 0rem;\n    }\n\n  }\n}\n@include min-desk {\n  footer{\n    .copyright {\n      display: flex;\n      justify-content: center;\n      align-items: flex-end;\n    }\n    .container-footer {\n      max-width: 100vw;\n      width: $max-width-contents;\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n      grid-template-areas:\n          \"logo-terms copyright download-copyright\";\n    }\n    #copyright{\n      margin-top: 1rem;\n      padding-bottom: 10px;\n    }\n  }\n\n}\n.bg-gradient-magenta-blue {\n  .container-footer {\n    p, h2 {\n      color: $blue-dark;\n    }\n    #copyright {\n      color: $blue-dark;\n\n    }\n  }\n\n}\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer [class]=\"backgroudColor\" class=\"dp-flex-all-center\">\n  <div class=\"container-footer\">\n    <section class=\"logo-terms\">\n      <div class=\"logo dp-flex-all-center\">\n        <a href=\"#\" rel=\"noopener noreferrer\" class=\"dp-flex-all-center\">\n          <img [src]=\"logo\" alt=\"Logo Devotee\" data-alt=\"altlogo\" id=\"altfootlogo\">\n          <span>\n            <h2 class=\"logo-text font-booster-next-bold\">Devotee</h2>\n          </span>\n        </a>\n      </div>\n      <div class=\"terms-policy\">\n        <div class=\"content-terms policy-privacy\">\n          <p\n            class=\"tablinks policy my-btn-terms\"\n            (click)=\"openPrivacy()\">\n            {{dataTexts.policyPrivacy}}\n          </p>\n        </div>\n        <div class=\"content-terms\">\n          <p\n            class=\"tablinks terms my-btn-terms\"\n            (click)=\"openTerms()\">\n            {{dataTexts.termsOfUse}}\n          </p>\n        </div>\n      </div>\n    </section>\n    <section class=\"download-copyright\">\n      <div class=\"download-app dp-flex-all-center\">\n        <p>{{dataTexts.getApp}}</p>\n        <div class=\"buttons-download\">\n          <a href=\"https://play.google.com/store/apps/details?id=com.phurshell.devotee&hl=pt_BR\" target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            <img src={{buttonsDownload.btnPlayStore}} alt={{buttonsDownload.altPlaySotre}}></a>\n          <a href=\"https://apps.apple.com/br/app/devotee/id1331331692\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={{buttonsDownload.btnAppStore}} alt={{buttonsDownload.altAppStore}}></a>\n        </div>\n      </div>\n\n    </section>\n    <p id=\"copyright\" class=\"copyright\">{{copyright}}</p>\n  </div>\n\n</footer>\n"
        },
        {
            "name": "HeaderCardsInitialPageComponent",
            "id": "component-HeaderCardsInitialPageComponent-53459ff73d5bd4d03c6f622e626c132930086cfe106122c8a20559577ebe412904e4b181d5820cd3343f78c2645a2be3195f4f933f0e6dfc47854f4b12b53b39",
            "file": "src/app/shared/components/header-cards-initial-page/header-cards-initial-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header-cards-initial-page",
            "styleUrls": [
                "./header-cards-initial-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-cards-initial-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "IHeaderCardsInitialPage",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "headerBtnClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IHeaderCardsInitialPage } from './model/header-cards.data';\n\n@Component({\n  selector: 'app-header-cards-initial-page',\n  templateUrl: './header-cards-initial-page.component.html',\n  styleUrls: ['./header-cards-initial-page.component.scss']\n})\nexport class HeaderCardsInitialPageComponent implements OnInit {\n  @Input() data: IHeaderCardsInitialPage;\n  @Output() headerBtnClick = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  emitClick(): void {\n    this.headerBtnClick.emit(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_mixins';\n@import '_sizes';\n@import '_colors';\n\n\n.content-header-cards-initial-page {\n  display: flex;\n  flex-direction: column;\n  gap: $s-35px;\n  .title-sign-return {\n    @include dp-flex-alignment(row, center, initial);\n    gap: 10px;\n\n  }\n\n  mat-icon {\n    background-color: $gray-soft;\n    width: $s-35px;\n    height: $s-35px;\n    border-radius: $s-100per;\n    @include min-tablet {\n      display: none;\n    }\n  }\n  .return-first-pg-mobile {\n    @include min-tablet {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./header-cards-initial-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"content-header-cards-initial-page\">\n  <div class=\"title-sign-return\">\n    <mat-icon class=\"cursor-pointer\" svgIcon=\"navigate_before\" (click)=\"emitClick()\"></mat-icon>\n    <a class=\"color-blue-dark font-booster-next-bold f-size-24\" >{{data.title.label || 'Titulo'}}</a>\n  </div>\n  <p *ngIf=\"data.text\" class=\"color-blue-dark\">{{data.text.label}}</p>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderLoggedComponent",
            "id": "component-HeaderLoggedComponent-5e31054f5246eea05562d659f2b838515071e6f0647b91d61d6c0af6021954ce0dc2f1fec4be7bd556af19c181d07ca94f8b4b09d9852d36a6c08fd1f38353da",
            "file": "src/app/shared/components/header-logged/header-logged.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header-logged",
            "styleUrls": [
                "./header-logged.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-logged.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-header-logged',\n  templateUrl: './header-logged.component.html',\n  styleUrls: ['./header-logged.component.scss']\n})\nexport class HeaderLoggedComponent implements OnInit {\n  dataTexts;\n  constructor(\n    private translateService: TranslateService,\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n#container-header-logged {\n  background: $sand-soft 0% 0% no-repeat padding-box;\n\n  .content-header-logged {\n    @include dp-flex-alignment(row, center, space-between);\n    padding: 15px;\n    gap: 15px;\n  }\n  .container-logo {\n    @include dp-flex-alignment();\n    .logo {\n      width: 30px;\n      height: auto;\n    }\n    p {\n      color: $white;\n      font-size: 25px;\n    }\n  }\n  .container-menu-logged{\n    @include dp-flex-alignment(row, center, flex-end);\n    gap: 30px;\n    @include min-tablet {\n      gap: 40px;\n    }\n    .container-item-menu {\n      @include dp-flex-alignment(column, center, center);\n      p {\n        font-size: 15px;\n        color: $gray-dark;\n      }\n    }\n    mat-icon{\n      width: 35px;\n      height: 35px;\n      cursor: pointer;\n    }\n    .icon-menu-logged{\n      color: $gray-dark;\n      @include min-tablet {\n        font-size: 35px;\n      }\n      &:hover{\n        cursor: pointer;\n      }\n      &:active{\n        outline: 0;\n      }\n    }\n    .icon-route-is-active{\n      .icon-menu-logged{\n        color: $magenta-soft;\n      }\n      p {\n        color: $blue-dark;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./header-logged.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<header id=\"container-header-logged\">\n  <div class=\"content-header-logged container-default\">\n    <section class=\"container-logo\">\n      <img class=\"logo\" src=\"/assets/images/logo-blue.png\" alt=\"Logo Devotee\" data-alt=\"altlogo\" id=\"altfootlogo\">\n    </section>\n    <section class=\"container-menu-logged\">\n      <div\n        [routerLink]=\"['/matchs']\"\n        [routerLinkActive]=\"['icon-route-is-active']\"\n        class=\"matches container-item-menu cursor-pointer\">\n        <mat-icon\n        class=\"icon-menu-logged\" >contact_page\n      </mat-icon>\n      <p>{{dataTexts.header.menu.home}}</p>\n\n      </div>\n      <div\n        [routerLink]=\"['/likes']\"\n        [routerLinkActive]=\"['icon-route-is-active']\"\n        class=\"likes-config container-item-menu cursor-pointer\">\n        <mat-icon\n          class=\"icon-menu-logged\"\n          >favorite</mat-icon>\n          <p>{{dataTexts.header.menu.likes}}</p>\n\n      </div>\n      <div\n        [routerLink]=\"['/chat']\"\n        [routerLinkActive]=\"['icon-route-is-active']\"\n        class=\"chat container-item-menu cursor-pointer\">\n        <mat-icon\n        class=\"icon-menu-logged\"\n        >forum</mat-icon>\n        <p>{{dataTexts.header.menu.message}}</p>\n\n      </div>\n      <div\n        [routerLink]=\"['/settings']\"\n        [routerLinkActive]=\"['icon-route-is-active']\"\n        class=\"perfil-config container-item-menu cursor-pointer\">\n        <mat-icon\n          class=\"icon-menu-logged\"\n          >settings</mat-icon>\n          <p>{{dataTexts.header.menu.config}}</p>\n\n      </div>\n\n    </section>\n  </div>\n\n\n</header>\n"
        },
        {
            "name": "InitialPageComponent",
            "id": "component-InitialPageComponent-af3690164efd3a96db382339b70717a43d36d42c5231435948876e11aa6e26c9d5ad48bc45f4c642a3829409660dd44bdd28836efadcce83d344b0126f76eeb9",
            "file": "src/app/pages/initial-page/initial-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-initial-page",
            "styleUrls": [
                "./initial-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./initial-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "routeApp",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "clickopenMobileSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { State, Store } from '@ngrx/store';\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { AddControlApp } from 'src/app/state-management/controls/copntrols-app.action';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\n\n@Component({\n  selector: 'app-initial-page',\n  templateUrl: './initial-page.component.html',\n  styleUrls: ['./initial-page.component.scss']\n})\nexport class InitialPageComponent implements OnInit {\n  dataTexts;\n  routeApp = EnumRoutesApplication;\n  constructor(\n    protected state: State<IAppState>,\n    protected store: Store<IAppState>,\n    private translateService: TranslateService,\n    private routeService: RouteService,\n    ) {}\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n  }\n  clickopenMobileSignIn(): void {\n    this.store.dispatch(new AddControlApp({ openSingIn: true }));\n  }\n  navigateTo(route: EnumRoutesApplication) {\n    this.routeService.navigateToURL(route);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_mixins';\n@import '_sizes';\n#container-initial-page {\n  @media screen and(min-width: $min-tablet) and (min-height: 800px){\n    height: 100vh;\n  }\n  .container-photos-cards {\n    width: 100%;\n    height: 100%;\n    background-image: url('/assets/images/photos-cards.png');\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n\n    background-position: 76% 50%;\n    background-size: 80rem auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    @include min-desk {\n      background-position: 75% -93%;\n      background-size: 116rem auto;\n    }\n    @include max-desk {\n      background-position: calc(100%) calc(100% - -20em);\n      background-size: 150rem auto;\n    }\n  }\n  .content-initial-page {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    .initial-page-define-size {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      height: 100%;\n      @include min-tablet {\n        flex-direction: row;\n        justify-content: space-between;\n        height: 60vh;\n        max-width: $max-width-contents;\n        width: 100%;\n        margin: auto;\n      }\n    }\n\n  }\n  .container-logo-text {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    position: sticky;\n    top: 0;\n    @include min-tablet {\n      flex: 1;\n    }\n    .content-logo-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      @include min-tablet {\n        justify-content: initial;\n      }\n    }\n    img {\n      display: none;\n      @include min-tablet {\n        display: initial;\n        max-width: 100px;\n        width: 100%;\n        height: auto;\n      }\n      @include min-tablet {\n        display: initial;\n        max-width: 115px;\n        width: 100%;\n        height: auto;\n      }\n    }\n    .title-logo {\n      font-size: 2rem;\n      @include min-tablet {\n        font-size: 4rem;\n      }\n      @media screen and(min-width: $min-desk) {\n        font-size: 5rem;\n      }\n    }\n    p {\n      font-size: 1.3rem;\n    }\n    .sign-in-mobile {\n      margin-top: 10px;\n      @include min-tablet {\n        display: none;\n      }\n    }\n  }\n\n .container-actions {\n  @include min-tablet {\n    flex: 1;\n    max-width: 500px;\n  }\n\n }\n}\n",
                    "styleUrl": "./initial-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-initial-page\" class=\"bg-color-blue-dark\">\n  <div class=\"container-photos-cards\">\n    <section class=\"content-initial-page\">\n      <div class=\"initial-page-define-size\">\n        <div class=\"container-logo-text padding-default-mobile\">\n          <section class=\"content-logo-header\">\n            <img class=\"cursor-pointer\" src=\"/assets/images/logo.png\" alt=\"Logo Devotee\" srcset=\"\" (click)=\"navigateTo(routeApp.LANDING_PAGE)\">\n            <span class=\"font-booster-next-bold color-white title-logo cursor-pointer\" (click)=\"navigateTo(routeApp.LANDING_PAGE)\">Devotee</span>\n            <span class=\"sign-in-mobile color-magenta-soft font-booster-next-bold cursor-pointer\" (click)=\"clickopenMobileSignIn()\">{{ dataTexts?.login }}</span>\n          </section>\n          <p  class=\"font-booster-next-regular color-white\">{{ dataTexts?.firstPage?.title }}</p>\n\n        </div>\n        <div class=\"container-actions padding-default-mobile\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n\n    </section>\n      <app-footer></app-footer>\n  </div>\n\n</div>\n"
        },
        {
            "name": "LandingPageComponent",
            "id": "component-LandingPageComponent-dbc5ef6a3a17904e75e7850994451b248f0d495a8b51f01688578fd735c95fb8e0fb95a0b243366aacbc45c5181b44f80036ba7424e083a3c084bd4d83493f9d",
            "file": "src/app/pages/landing-page/landing-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-landing-page",
            "styleUrls": [
                "./landing-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "routesApp",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "goToLoginOrRegister",
                    "args": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { AddControlApp } from 'src/app/state-management/controls/copntrols-app.action';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n  @Input() dataTexts;\n  routesApp = EnumRoutesApplication;\n  constructor(\n    protected store: Store<IAppState>,\n    private translateService: TranslateService,\n    private routeService: RouteService,\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n  }\n\n  ngOnInit(): void {\n  }\n  navigateTo(route: EnumRoutesApplication) {\n    this.routeService.navigateToURL(route);\n    // this.store.dispatch(new AddControlApp({ openSingIn: true }));\n\n  }\n  goToLoginOrRegister(route: EnumRoutesApplication) {\n    this.navigateTo(route);\n    this.store.dispatch(new AddControlApp({ openSingIn: true }));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n#landing-page {\n  .only-mobile {\n    @include min-tablet {\n      display: none;\n    }\n  }\n  .container-logo-login {\n    @include dp-flex-alignment(row, center, space-between);\n    background: transparent linear-gradient(180deg, $sand-medium 0%, $sand-soft 100%) 0% 0% no-repeat padding-box;;\n    .logo {\n      @include dp-flex-alignment(row, center, initial);\n      gap: 5px;\n      img {\n        width: 25px;\n        max-width: 45px;\n        height: auto;\n        @include min-tablet {\n          width: 100%;\n        }\n      }\n      .title-logo {\n        font-size: 1.2rem;\n        @include min-tablet {\n          font-size: 2.5rem;\n        }\n      }\n    }\n    .container-button-header {\n      gap: 50px;\n      .container-buttons-desk {\n        display: none;\n        @include min-tablet {\n          gap: 50px;\n        }\n      }\n      .btn-login {\n        padding: 8px 34px;\n      }\n    }\n  }\n  .container-welcome-app {\n    background: transparent linear-gradient(180deg, $sand-soft 0%, $sand-medium 100%) 0% 0% no-repeat padding-box;\n    @include min-tablet {\n      @include dp-flex-alignment(row, center, space-between);\n\n    }\n    .container-title-text {\n      gap: 40px;\n    }\n    .container-desk-register {\n      gap: 10px;\n      @media screen and (max-width: $min-tablet){\n        display: none;\n      }\n      .desk-register-title {\n        font-size: 28px\n      }\n      .btn-register-desk {\n        @include dp-flex-alignment();\n        max-width: 200px;\n      }\n    }\n\n    .container-cellphone-button {\n      .content-cellphone {\n        img {\n          width: 100%;\n          @include min-tablet {\n            max-width: 400px;\n          }\n          @include medium-tablet {\n            max-width: 600px;\n          }\n        }\n      }\n      .container-buttons-text {\n        .content-buttons {\n          padding: 0;\n          @include dp-flex-alignment(row, center, space-between);\n          @include min-tablet {\n            justify-content: flex-end;\n          }\n          .button {\n            padding: 8px 18px;\n          }\n          .buttons-download {\n            gap: 10px;\n            img {\n              height: 25px;\n              @include min-tablet {\n                height: 35px;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  h2 {\n    @include min-tablet {\n      font-size: 50px;\n    }\n  }\n  p {\n    @include min-tablet {\n      font-size: 30px;\n    }\n  }\n  .max-size {\n    max-width: 1150px;\n    margin: auto;\n  }\n  .container-devotee-shop {\n    @include dp-flex-alignment(column, flex-end, flex-end);\n    background:  transparent linear-gradient(180deg, $sand-medium 0%, $sand-soft 100%) 0% 0% no-repeat padding-box;\n\n    .container-cellphone-button {\n      @include dp-flex-alignment(row, center, space-between);\n      gap: 10px;\n      width: 100%;\n      .button {\n        @include min-tablet {\n          width: 200px;\n        }\n      }\n      img {\n        max-width: 150px;\n        @include min-tablet {\n          max-width: 400px\n        }\n        @include medium-tablet {\n          max-width: 600px;\n        }\n      }\n      .container-text-button {\n        @include dp-flex-alignment(column, flex-end, flex-end);\n        gap: 10px;\n        text-align: right;\n        .button {\n          padding: 8px 18px;\n        }\n      }\n    }\n\n  }\n  .container-devotee-video {\n    background: transparent linear-gradient(180deg, $sand-soft 0%, $sand-medium 100%) 0% 0% no-repeat padding-box;\n    .content-devotee-video {\n      gap: 30px;\n      iframe {\n        width: 100%;\n        height: auto;\n        min-height: 300px;\n        @include min-tablet {\n          min-height: 500px;\n        }\n      }\n      .social-media {\n        @include dp-flex-alignment(column, center, initial);\n        .social-icons {\n          @include dp-flex-alignment();\n          gap: 10px;\n        }\n      }\n    }\n    .content-devotee-midia {\n      gap: 30px;\n      margin-top: 30px;\n      p {\n        text-align: center\n      }\n      .container-imgs {\n        @include dp-flex-alignment(row, center, center);\n        flex-wrap: wrap;\n        gap: 10px;\n        img {\n          max-width: 165px;\n          width: 100%;\n        }\n      }\n    }\n  }\n}\n.container-default-lp {\n  padding: 20px 30px;\n}\n",
                    "styleUrl": "./landing-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"landing-page\">\n  <header class=\"container-logo-login\">\n    <div class=\"container-logo-login width-100-per container-default-lp container-default\">\n      <section class=\"logo\">\n        <img src=\"/assets/images/logo-blue.png\" alt=\"Logo Devotee\" srcset=\"\">\n        <span class=\"font-booster-next-bold color-blue-dark title-logo\">Devotee</span>\n      </section>\n      <section class=\"container-button-header dp-flex-row-initial\">\n        <div class=\"container-buttons-desk dp-flex-row-initial\">\n          <div class=\"button link-icon-text font-booster-next-bold\">\n              <mat-icon svgIcon=\"local_mall\"></mat-icon>\n            <a class=\"font-booster-next-bold color-blue-dark\" href=\"https://www.loja.devotee.com.br/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              {{dataTexts.buttons.btnShop}}\n            </a>\n          </div>\n          <button class=\"button link font-booster-next-bold\" (click)=\"goToLoginOrRegister(routesApp.PRE_REGISTER)\">\n            {{dataTexts.buttonsSignin.btnRegister}}\n          </button>\n        </div>\n        <button class=\"button primary font-booster-next-bold btn-login\" (click)=\"goToLoginOrRegister(routesApp.LOGIN)\">\n          {{dataTexts.buttons.btnEntry}}\n        </button>\n      </section>\n    </div>\n\n  </header>\n\n  <article class=\"container-welcome-app container-default-lp\">\n    <div class=\"container-welcome-app container-default width-100-per\">\n      <section class=\"container-title-text dp-flex-column-initial\">\n        <div class=\"content-title-text dp-flex-column-initial\">\n          <h2 class=\"font-booster-next-bold color-magenta-soft\">\n            {{dataTexts.lading.welcome.title}}\n          </h2>\n          <p class=\"color-blue-dark f-size-18\">\n            {{dataTexts.lading.welcome.text}}\n          </p>\n        </div>\n\n        <div class=\"container-desk-register only-desk dp-flex-column-initial\">\n          <p class=\"font-booster-next-bold color-blue-dark desk-register-title\"> {{dataTexts.lading.simpleMatch}}</p>\n          <section class=\"btn-register-desk\">\n            <button class=\"button third font-booster-next-bold \" (click)=\"goToLoginOrRegister(routesApp.PRE_REGISTER)\">\n              {{dataTexts.buttons.btnRegisterSe}}\n            </button>\n          </section>\n        </div>\n      </section>\n      <section class=\"container-cellphone-button\">\n        <div class=\"content-cellphone\">\n          <img src=\"/assets/images/cellphone-lp.png\" alt=\"\">\n        </div>\n        <div class=\"container-buttons-text\">\n          <p class=\"only-mobile font-booster-next-bold color-blue-dark\"> {{dataTexts.lading.simpleMatch}}</p>\n          <div class=\"content-buttons\">\n            <section class=\"only-mobile\">\n              <button class=\"button third font-booster-next-bold\" (click)=\"goToLoginOrRegister(routesApp.PRE_REGISTER)\">\n                {{dataTexts.buttons.btnRegisterSe}}\n              </button>\n            </section>\n            <section class=\"buttons-download dp-flex-row-initial\">\n              <a href=\"https://play.google.com/store/apps/details?id=com.phurshell.devotee&hl=pt_BR\" target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <img src={{dataTexts.buttonsDownload.btnPlayStore}} alt={{dataTexts.buttonsDownload.altPlaySotre}}></a>\n              <a href=\"https://apps.apple.com/br/app/devotee/id1331331692\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={{dataTexts.buttonsDownload.btnAppStore}} alt={{dataTexts.buttonsDownload.altAppStore}}></a>\n            </section>\n          </div>\n        </div>\n      </section>\n    </div>\n\n  </article>\n\n  <article class=\"container-devotee-shop  container-default-lp\">\n    <div class=\"container-devotee-shop max-size container-default width-100-per\">\n      <h2 class=\"font-booster-next-bold color-magenta-soft\">\n        {{dataTexts.lading.devoteeShop.title}}\n      </h2>\n      <div class=\"container-cellphone-button\">\n        <div class=\"content-cellphone\">\n          <img src=\"/assets/images/cellphone-lp-shop.png\" alt=\"\">\n        </div>\n        <section class=\"container-text-button\">\n          <p class=\"color-blue-dark f-size-18\">\n            {{dataTexts.lading.devoteeShop.text}}\n          </p>\n          <section>\n            <button class=\"button third font-booster-next-bold\" (click)=\"navigateTo(routesApp.LOGIN)\">\n              {{dataTexts.buttons.btnAccess}}\n            </button>\n          </section>\n        </section>\n      </div>\n    </div>\n\n  </article>\n  <section class=\"container-devotee-video container-default-lp\">\n    <div class=\"content-devotee-video max-size dp-flex-column-initial\" >\n      <h2 class=\"font-booster-next-bold color-magenta-soft\">\n        {{dataTexts.lading.devoteeVideo.title}}\n      </h2>\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/OH4eJYvaLlc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n      <section class=\"social-media\">\n        <p class=\"f-size-18 color-gray-dark\">{{dataTexts.lading.followUs.title}}</p>\n        <div class=\"social-icons\">\n          <a href=\"https://www.youtube.com/channel/UCP_fhk3MM9ULx_5qkqgX27Q\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <mat-icon svgIcon=\"logo_youtube\"></mat-icon>\n          </a>\n          <a href=\"https://pt-br.facebook.com/devotee.network\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <mat-icon svgIcon=\"logo_facebook\"></mat-icon>\n          </a>\n          <a href=\"https://www.instagram.com/devotee.deficiente\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <mat-icon svgIcon=\"logo_instagram\"></mat-icon>\n          </a>\n        </div>\n      </section>\n    </div>\n\n    <div class=\"content-devotee-midia dp-flex-column-initial\" >\n      <p class=\"color-blue-dark\">{{dataTexts.lading.devoteeMidia.title}}</p>\n      <div class=\"container-imgs\">\n        <a href=\"https://epocanegocios.globo.com/Tecnologia/noticia/2019/06/app-brasileiro-promove-paquera-entre-pessoas-com-deficiencia.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/assets/images/logo-epoca.png\" alt=\"\">\n        </a>\n        <a href=\"https://emais.estadao.com.br/noticias/comportamento,brasileiro-cria-aplicativo-de-relacionamento-para-pessoas-com-deficiencia,70002860948\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/assets/images/logo-estadao.png\" alt=\"\">\n        </a>\n        <a href=\"https://casadaptada.com.br/2018/09/conheca-o-aplicativo-devotee-o-melhor-lugar-para-conectar-voce-com-pessoas-especiais/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/assets/images/logo-ansa.png\" alt=\"\">\n        </a>\n        <a href=\"https://ansabrasil.com.br/brasil/noticias/brasil/tecnologia/2019/06/07/app-brasileiro-promove-paquera-entre-pessoas-com-deficiencia_634943f4-a377-4656-aa52-508083528e55.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/assets/images/logo-casadaptada.png\" alt=\"\">\n        </a>\n        <a href=\"https://somostodosgigantes.com.br/tag/app-devotee/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/assets/images/logo-inn.png\" alt=\"\">\n        </a>\n      </div>\n\n    </div>\n  </section>\n  <app-footer [backgroudColor]=\"'bg-color-blue-dark'\"></app-footer>\n</div>\n"
        },
        {
            "name": "LikedMeComponent",
            "id": "component-LikedMeComponent-48b6966e328661de1e4d189c92f3b8b48b580ab2ea7edbc7f69cd6a81f0820883c274ef79b8eabe7496994e4620580de3bca84442c710f9cd46eeb0a21be32f2",
            "file": "src/app/pages/liked-me/liked-me.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-liked-me",
            "styleUrls": [
                "./liked-me.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./liked-me.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "userLikeds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILikedMe.RootObject",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "userPlanType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateHoursAgo",
                    "args": [
                        {
                            "name": "updateAt",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "updateAt",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeUserImageInBackground",
                    "args": [
                        {
                            "name": "profilePicture",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "profilePicture",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLikedMe",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openProfile",
                    "args": [
                        {
                            "name": "userId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transformAge",
                    "args": [
                        {
                            "name": "birthDate",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "birthDate",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { State } from '@ngrx/store';\nimport { LikedMeService } from 'src/app/core/services/liked-me/liked-me.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { UserProfileService } from 'src/app/core/services/user-profile/user-profile.service';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\nimport { TransformAgeService } from 'src/app/shared/functions/transform-age/transform-age.service';\nimport { ILikedMe } from 'src/app/shared/model/response/get-liked-me/get-liked-me.model';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-liked-me',\n  templateUrl: './liked-me.component.html',\n  styleUrls: ['./liked-me.component.scss']\n})\nexport class LikedMeComponent implements OnInit {\n  dataTexts\n  userLikeds: ILikedMe.RootObject;\n  loading = false;\n\n  userPlanType: string;\n  constructor(\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private likedMeService: LikedMeService,\n    private transformAgeService: TransformAgeService,\n    private userProfileService: UserProfileService,\n    private dialogsService: DialogsService,\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n\n  }\n\n  ngOnInit(): void {\n    this.userPlanType = this.state.getValue().userData.data.plan_type;\n    this.getLikedMe();\n  }\n  private async getLikedMe() {\n    this.loading = true;\n    const likedMeData = await this.likedMeService.get().toPromise();\n    this.userLikeds = likedMeData.data;\n    this.loading = false;\n  }\n  changeUserImageInBackground(profilePicture): string {\n    return `background-image: url(${environment.urlImages}${profilePicture[0]?.path});\n    background-color: #D9D9D9;\n    background-size: cover;`;\n  }\n  transformAge(birthDate) {\n    if(birthDate) {\n      return this.transformAgeService.transformAge(birthDate);\n    }\n  }\n  calculateHoursAgo(updateAt: string) {\n    const dateLiked: any = new Date(updateAt);\n    const nowDate: any = new Date();\n    const diffInMs = dateLiked - nowDate;\n    const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\n    const diffInHours = diffInMs / (1000 * 60 * 60);\n    const diffInMinutes = diffInMs / (1000 * 60);\n\n    if (dateLiked.getDate() === nowDate.getDate()) {\n      if (Math.abs(diffInHours) < 1) {\n        if (Math.abs(diffInMinutes) == 1 ) {\n          return `\n          ${Math.abs(Math.floor(diffInMinutes))}\n          ${this.dataTexts.minute} ${this.dataTexts.ago}`\n\n        }\n        return `\n          ${Math.abs(Math.floor(diffInMinutes))}\n          ${this.dataTexts.minutes} ${this.dataTexts.ago}`\n      }\n      if (Math.abs(diffInHours) == 1) {\n        return `\n          ${Math.abs(Math.floor(diffInHours))}\n          ${this.dataTexts.hour} ${this.dataTexts.ago}`\n      }\n      return `\n        ${Math.abs(Math.floor(diffInHours))}\n        ${this.dataTexts.hours} ${this.dataTexts.ago}`\n    } else {\n      if (Math.abs(diffInDays) == 1) {\n        return `\n        ${Math.abs(Math.floor(diffInDays))}\n        ${this.dataTexts.day} ${this.dataTexts.ago}`\n      }\n      return `\n      ${Math.abs(Math.floor(diffInDays))}\n      ${this.dataTexts.days} ${this.dataTexts.ago}`\n    }\n  }\n  async openProfile(userId) {\n    if (this.userPlanType === 'free') {\n\n    } else {\n      const userData = await this.userProfileService.get(userId).toPromise();\n      this.dialogsService.openProfile(userData.data);\n    }\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\n.container-liked-me {\n  .content-title {\n    @include dp-flex-alignment(row, center, initial);\n    margin-bottom: 20px;\n    gap: 10px;\n    mat-icon {\n      width: initial;\n      height: initial;\n      font-size: 29px;\n    }\n  }\n  .container-liked {\n    @include dp-flex-alignment(row, center, initial);\n    gap: 20px;\n    flex-wrap: wrap;\n  }\n  .container-user-infos {\n    max-width: 300px;\n    max-height: 300px;\n    border-radius: 20px;\n    width: 100%;\n    .container-infos {\n      min-height: 250px;\n      padding: 10px;\n      box-sizing: border-box;\n      border-radius: 20px;\n\n      @include dp-flex-alignment(row, flex-end, initial);\n\n      .tip-user-type {\n\n        @include dp-flex-alignment();\n        max-width: 80px;\n        border-radius: 30px;\n        font-size: 14px;\n        padding: 2px 0;\n      }\n    }\n    .container-hour-ago {\n      @include dp-flex-alignment(row, center, space-between);\n    }\n  }\n\n}\n",
                    "styleUrl": "./liked-me.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "likedMeService",
                        "type": "LikedMeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "likedMeService",
                        "type": "LikedMeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main class=\"container-liked-me container-default-cards-register\">\n  <section class=\"content-title\">\n    <mat-icon class=\"color-magenta-soft\">favorite\n    </mat-icon>\n    <span class=\"color-blue-dark font-booster-next-bold f-size-24\">{{dataTexts.likedMe.title}}</span>\n  </section>\n  <section class=\"container-likeds\">\n    <div class=\"container-liked\">\n      <div class=\"dp-flex-all-center width-100-per\" *ngIf=\"loading\">\n        <mat-spinner></mat-spinner>\n      </div>\n      <div\n        class=\"container-user-infos cursor-pointer\"\n        [style.filter]=\"this.userPlanType === 'free' ? 'blur(3px)': null\"\n        *ngFor=\"let liked of userLikeds\"\n        (click)=\"openProfile(liked.user.id)\">\n        <div class=\"container-infos\" [style]=\"changeUserImageInBackground(liked.user.profile_picture)\">\n          <div>\n\n          </div>\n          <div class=\"width-100-per\">\n            <section class=\"tip-user-type font-booster-next-bold bg-color-blue-dark color-white\">\n              {{liked?.user?.account_type? liked?.user?.account_type: 'sem'}}\n            </section>\n            <section class=\"container-user-name-age font-booster-next-bold color-white\">\n              {{liked?.user?.name}}, {{transformAge(liked?.user?.birthdate)}}\n\n            </section>\n            <section class=\"container-hour-ago color-magenta-soft font-booster-next-bold\">\n              <span> {{calculateHoursAgo(liked?.updated_at)}}</span>\n              <span>\n                <mat-icon class=\"mat-18 color-white\">info</mat-icon>\n              </span>\n            </section>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </section>\n</main>\n"
        },
        {
            "name": "LoggedComponent",
            "id": "component-LoggedComponent-0473bc2403fbb4131d10a3b0cb0a2dc5f6a86fa8068d481da3612799d9b039e83bb8866a46c16d48747aff9940caf2653e7b29579b460470863294fbce36dae3",
            "file": "src/app/pages/logged/logged.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logged",
            "styleUrls": [
                "./logged.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logged.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged',\n  templateUrl: './logged.component.html',\n  styleUrls: ['./logged.component.scss']\n})\nexport class LoggedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n#container-logged {\n  @include dp-flex-alignment(column, initial, space-between);\n  // height: 100%;\n  min-height: 100vh;\n  background: transparent linear-gradient(180deg, $sand-soft 0%, $sand-medium 100%) 0% 0% no-repeat padding-box;\n}\nrouter-outlet {\n  display: none;\n}\n",
                    "styleUrl": "./logged.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-logged\">\n  <app-header-logged></app-header-logged>\n  <router-outlet></router-outlet>\n  <app-footer [backgroudColor]=\"'bg-gradient-magenta-blue'\" [logo]=\"'/assets/images/logo-blue.png'\" class=\"width-100-per\"></app-footer>\n</div>\n"
        },
        {
            "name": "LoginQrCodeComponent",
            "id": "component-LoginQrCodeComponent-14dcbed904939f831ada30674e42766f36461c0c8f625d7bac9ee74d302a78337b3bd0b49836d65aebf7ea49dfe32d3284caa4d2c0e7ebc7903c1edf55d4c0ba",
            "file": "src/app/shared/components/dialogs/login-qr-code/login-qr-code.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-qr-code",
            "styleUrls": [
                "./login-qr-code.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-qr-code.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "intervalValidadeHash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "qrCodeHash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "showLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "generateHashToQrcode",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNoClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "readHashQrcode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { GenerateHashQrcodeService } from 'src/app/core/services/generate-hash-qrcode/generate-hash-qrcode.service';\nimport { ReadHashQrcodeService } from 'src/app/core/services/read-hash-qrcode/read-hash-qrcode.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { LoginQrcodeConnectorService } from 'src/app/core/services/websockets/login-qrcode-connector/login-qrcode-connector.service';\nimport { PusherAuthService } from 'src/app/core/services/websockets/pusher/pusher-auth/pusher-auth.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { StateManagementFuncService } from 'src/app/shared/functions/state-management/state-management-func.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login-qr-code',\n  templateUrl: './login-qr-code.component.html',\n  styleUrls: ['./login-qr-code.component.scss']\n})\nexport class LoginQrCodeComponent implements OnInit {\n  dataTexts;\n  showLoading = false;\n\n  qrCodeHash: string;\n  intervalValidadeHash;\n\n  destroy$ = new ReplaySubject();\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private translateService: TranslateService,\n    private matDialogRef: MatDialogRef<LoginQrCodeComponent>,\n    private generateHashQrcodeService: GenerateHashQrcodeService,\n    private readHashQrcodeService: ReadHashQrcodeService,\n    private loginQrcodeConnectorService: LoginQrcodeConnectorService,\n    private stateManagementFuncService: StateManagementFuncService,\n    private routeService: RouteService,\n    private pusherAuthService: PusherAuthService,\n  ) { }\n\n  ngOnInit() {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.generateHashToQrcode();\n  }\n  onNoClick(){\n    clearInterval(this.intervalValidadeHash);\n    this.matDialogRef.close();\n  }\n  async generateHashToQrcode() {\n    this.showLoading = true;\n    const hashReponse =\n    await this.generateHashQrcodeService\n      .post()\n      .pipe(takeUntil(this.destroy$))\n      .toPromise();\n    this.showLoading = false;\n    this.qrCodeHash = hashReponse.data.hash;\n    this.readHashQrcode();\n  }\n  readHashQrcode() {\n    this.loginQrcodeConnectorService\n      .connectWebSOcket(this.qrCodeHash)\n      .bind(environment.webSocket.events.loginQrCode, (res) => {\n        localStorage.setItem('access_token', `${res?.payload.access_token}`);\n        localStorage.setItem('userId', `${res?.payload.data.id}`);\n        this.stateManagementFuncService.funcAddAllDataUser({access_token: res?.payload.access_token, ...res?.payload.data});\n        this.routeService.navigateToURL(EnumRoutesApplication.MATCHS);\n        this.pusherAuthService\n          .pusherConnect()\n          .unsubscribe(`${environment.webSocket.channels.loginQrCode}${this.qrCodeHash}`);\n      })\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_colors';\n@import '_mixins';\n.close {\n  display: flex;\n  top: 15px;\n  left: 346px;\n  width: 30px;\n  height: 30px;\n  transform: matrix(0, 1, -1, 0, 0, 0);\n  color: $blue-dark;\n  font-size: 28px;\n  font-weight: bold;\n  :hover,\n  :focus {\n      color: #000;\n      text-decoration: none;\n      cursor: pointer;\n  }\n  ::after{\n      content: 'asa';\n      width: 20px;\n      height: 20px;\n      background-color: #000;\n  }\n}\n.container-modal-qr{\n  display: grid;\n  grid-template-rows: 1fr 8fr;\n  height: 100%;\n  color: $blue-dark;\n  .close-terms{\n    cursor: pointer;\n  }\n  .content-close{\n      display: flex;\n      justify-content: flex-end;\n  }\n  .container-itens-qr{\n    display: grid;\n    grid-template-columns: 1fr;\n    .container-img-qr{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 30px 0;\n      img{\n        max-width: 185px;\n      }\n    }\n  }\n}\n.create-account{\n  text-align: center;\n  margin: 1rem 0;\n  font-size: 1.1rem;\n}\n.qr-subtitle{\n  img{\n    width: 15px;\n    margin: 0 5px;\n  }\n}\n.download-app{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 1.1rem;\n  .buttons-download{\n    display: flex;\n    :first-child{\n      margin-right: 10px;\n    }\n    img{\n      height: 30px;\n    }\n  }\n}\n\n@include medium-tablet {\n  .create-account{\n    text-align: center;\n    font-size: 1.1rem;\n    margin: 1rem 0;\n  }\n  .download-app{\n    p{\n      font-size: 1.1rem;\n    }\n  }\n}\n@include min-tablet {\n\n  .container-modal-qr {\n    padding-left: 70px;\n    .container-itens-qr {\n      display: grid;\n      grid-template-columns: 2fr 1fr;\n      grid-template-areas:\n      \"text-qr qr-code-image \"\n      \"create-buttons create-buttons\"\n      ;\n      .container-img-qr {\n        grid-area: qr-code-image;\n        img{\n          max-width: 220px;\n        }\n      }\n      .container-creat-buttons {\n        grid-area: create-buttons;\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n        .download-copyright{\n          display: flex;\n          align-items: flex-start;\n        }\n        .create-account {\n          display: flex;\n          text-align: center;\n          font-size: 1.5rem;\n        }\n      }\n      .text-qr {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        grid-area: text-qr;\n      }\n      .download-app {\n        font-size: 1.5rem;\n      }\n    }\n\n  }\n  .qr-title{\n    font-size: 2rem;\n    margin: 10px 0 ;\n  }\n  .qr-subtitle{\n    margin: 10px 0;\n    font-size: 1.1rem;\n  }\n}\n.qr-subtitle {\n  img {\n    width: 20px;\n    margin: 0 5px;\n  }\n}\n",
                    "styleUrl": "./login-qr-code.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<LoginQrCodeComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "generateHashQrcodeService",
                        "type": "GenerateHashQrcodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "readHashQrcodeService",
                        "type": "ReadHashQrcodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginQrcodeConnectorService",
                        "type": "LoginQrcodeConnectorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<LoginQrCodeComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "generateHashQrcodeService",
                        "type": "GenerateHashQrcodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "readHashQrcodeService",
                        "type": "ReadHashQrcodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginQrcodeConnectorService",
                        "type": "LoginQrcodeConnectorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pusherAuthService",
                        "type": "PusherAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-modal-qr\">\n  <div class=\"content-close\">\n       <div class=\"close close-terms\" (click)=\"onNoClick()\">&times;</div>\n   </div>\n <div class=\"container-itens-qr\">\n   <div class=\"text-qr\">\n     <div class=\"qr-title\">{{ dataTexts.qrSignIn.qrTitle }}</div>\n     <div>\n       <div class=\"qr-subtitle\"><span>1.</span> {{ dataTexts.qrSignIn.qrSubTitleFirst }}</div>\n       <div class=\"qr-subtitle\"><span>2.</span> {{ dataTexts.qrSignIn.qrSubTitleSecond.qrFirstTouch }} <b>{{ dataTexts.qrSignIn.qrSubTitleSecond.qrSecondPerfil }} </b> <span><img src=\"/assets/icon-person@2x.png\" alt=\"\"></span>{{ dataTexts.qrSignIn.qrSubTitleSecond.qrThirdSelect }} <b> {{ dataTexts.qrSignIn.qrSubTitleSecond.qrFourthDevotee }}</b></div>\n       <div class=\"qr-subtitle\"><span>3.</span> {{ dataTexts.qrSignIn.qrSubTitleThird.qrFirstTouch }} <b> {{ dataTexts.qrSignIn.qrSubTitleThird.qrSecondBold }}</b></div>\n       <div class=\"qr-subtitle\"><span>4.</span> {{ dataTexts.qrSignIn.qrSubTitleFouth }}</div>\n     </div>\n   </div>\n   <div class=\"container-img-qr\">\n    <mat-spinner class=\"spinner\" *ngIf=\"showLoading\"></mat-spinner>\n\n     <qrcode\n        *ngIf=\"!showLoading\"\n        [qrdata]=\"qrCodeHash\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\" [elementType]=\"'svg'\"></qrcode>\n   </div>\n   <div class=\"container-creat-buttons\">\n     <div class=\"create-account\">\n       {{ dataTexts.qrSignIn.qrCreateAccount.qrNotAccount }} <a >{{ dataTexts.qrSignIn.qrCreateAccount.qrCreateAccount }}</a>\n     </div>\n     <div class=\"download-copyright\">\n       <div class=\"download-app\">\n           <p>{{dataTexts.getApp}}</p>\n           <div class=\"buttons-download\">\n               <a href=\"https://play.google.com/store/apps/details?id=com.phurshell.devotee&hl=pt_BR\" target=\"_blank\" rel=\"noopener noreferrer\">\n               <img src={{dataTexts.buttonsDownload.btnPlayStore}} alt={{dataTexts.buttonsDownload.altPlayStore}}  ></a>\n               <a href=\"https://apps.apple.com/br/app/devotee/id1331331692\" target=\"_blank\" rel=\"noopener noreferrer\">\n               <img src={{dataTexts.buttonsDownload.btnAppStore}} alt={{dataTexts.buttonsDownload.altAppStore}} ></a>\n           </div>\n       </div>\n     </div>\n   </div>\n </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PrincipalLoadingComponent",
            "id": "component-PrincipalLoadingComponent-54b75189b05f65f40e44ee7906ed604c0fa76a86c0637ad7ae09c3490c321718fa8db48dbf9120a434184946b95282147cccd13f910b02531e16703443731292",
            "file": "src/app/shared/components/principal-loading/principal-loading.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-principal-loading",
            "styleUrls": [
                "./principal-loading.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./principal-loading.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-principal-loading',\n  templateUrl: './principal-loading.component.html',\n  styleUrls: ['./principal-loading.component.scss']\n})\nexport class PrincipalLoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container-principal-loading {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba($color: #000000, $alpha: 0.5);\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n}\n",
                    "styleUrl": "./principal-loading.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-principal-loading\">\n  <mat-spinner></mat-spinner>\n</div>\n"
        },
        {
            "name": "PrivacyPolicyComponent",
            "id": "component-PrivacyPolicyComponent-c9f18144b17a7c3a0c28bccf25547b8b5a483d930cd98bc269c41a129a1a276bfee1cb136387a3a4abb7207de740716dca44d0566e562d95edecedf648604fe9",
            "file": "src/app/shared/components/dialogs/privacy-policy/privacy-policy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-privacy-policy",
            "styleUrls": [
                "./privacy-policy.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./privacy-policy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getTermsOfUsePt",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { EnumLanguages } from 'src/app/shared/enum/languages/languages.enum';\nimport { PrivacyPolicyServiceEn, PrivacyPolicyServicePt } from 'src/app/core/services/legal-policy/privacy-policy/privacy-policy.service';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n  loading = false;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private translateService: TranslateService,\n    private matDialogRef: MatDialogRef<PrivacyPolicyComponent>,\n    private privacyPolicyServicePt: PrivacyPolicyServicePt,\n    private privacyPolicyServiceEn: PrivacyPolicyServiceEn,\n  ) { }\n\n  ngOnInit(): void {\n    this.getTerms();\n  }\n  closeModal() {\n    this.matDialogRef.close();\n  }\n  async getTerms() {\n    this.loading = true;\n\n    let termsResponse;\n    if(this.translateService.dataFormatation === EnumLanguages.US) {\n      termsResponse = await this.privacyPolicyServiceEn.get().toPromise();\n      if(termsResponse?.data?.value !== \"\") {\n        this.data = termsResponse.data.value\n        this.loading = false;\n\n        return termsResponse.data.value;\n      } else {\n        this.getTermsOfUsePt();\n      }\n    }\n    this.getTermsOfUsePt();\n  }\n  async getTermsOfUsePt() {\n    let termsResponse;\n    termsResponse = await this.privacyPolicyServicePt.get().toPromise();\n    this.data = termsResponse.data.value\n    this.loading = false;\n\n    return termsResponse.data.value;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\nmain {\n  @include dp-flex-alignment(column);\n}\n",
                    "styleUrl": "./privacy-policy.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<PrivacyPolicyComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "privacyPolicyServicePt",
                        "type": "PrivacyPolicyServicePt",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "privacyPolicyServiceEn",
                        "type": "PrivacyPolicyServiceEn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<PrivacyPolicyComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "privacyPolicyServicePt",
                        "type": "PrivacyPolicyServicePt",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "privacyPolicyServiceEn",
                        "type": "PrivacyPolicyServiceEn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main >\n  <div class=\"container-close\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeModal()\">\n      close\n    </mat-icon>\n  </div>\n  <div class=\"container-data-legal-policy\" [innerHTML]=\"data\">\n\n  </div>\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\n\n</main>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-b9db9507f9b2b255cffa862bc8ce7527161627f6a6c88e3c94b345a8c8de3c02cedf00d24de12d7909da0236b16d5b4f3161366b0e30bc0a1bea3747eb22ffe7",
            "file": "src/app/shared/components/dialogs/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUserData.IData",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "enumLanguage",
                    "defaultValue": "EnumLanguages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "languageApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "urlImages",
                    "defaultValue": "environment.urlImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "checkWhoCloseModal",
                    "args": [
                        {
                            "name": "who",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "who",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openEditAboutMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openEditProfilePicture",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "transformAge",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ReplaySubject } from 'rxjs';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { EnumLanguages } from 'src/app/shared/enum/languages/languages.enum';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { environment } from 'src/environments/environment';\nimport { TransformAgeService } from 'src/app/shared/functions/transform-age/transform-age.service';\nimport { State } from '@ngrx/store';\nimport { IAppState } from 'src/app/state-management/app.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  userId: number;\n  dataTexts\n  languageApp;\n  enumLanguage = EnumLanguages;\n  age;\n\n  urlImages = environment.urlImages;\n  destroy$ = new ReplaySubject();\n  constructor(\n    protected state: State<IAppState>,\n    private matDialogRef: MatDialogRef<ProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IUserData.IData,\n    private translateService: TranslateService,\n    private dialogsService: DialogsService,\n    private transformAgeService: TransformAgeService\n\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n\n  }\n\n  ngOnInit() {\n    this.userId = this.state.getValue().userData?.data?.id;\n    this.languageApp = this.translateService.dataFormatation;\n    this.transformAge();\n  }\n  closeModal() {\n    this.matDialogRef.close(c => {\n\n    });\n  }\n  transformAge() {\n    if (this.data?.birthdate) {\n      this.age = this.transformAgeService.transformAge(this.data?.birthdate);\n    }\n\n  }\n  openEditProfilePicture() {\n    this.dialogsService\n    .openEditProfilePicture()\n    .afterClosed()\n    .subscribe(res => {\n      this.checkWhoCloseModal(res);\n    });;\n  }\n  openEditAboutMe() {\n    this.dialogsService\n      .openEditAboutMe()\n      .afterClosed()\n      .subscribe(res => {\n        this.checkWhoCloseModal(res);\n      });\n  }\n  checkWhoCloseModal(who) {\n    if (who === 'saved') {\n      this.matDialogRef.close(who);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\n#container-profile {\n\n  .container-header{\n    @include dp-flex-alignment(column);\n    mat-icon {\n      color: $gray-icons;\n    }\n    .container-profile-image{\n      border-radius: 100%;\n      background-color: $gray-medium-soft;\n      border: 1px solid $gray-soft;\n      width: 100px;\n      height: 100px;\n      @include dp-flex-alignment();\n      img{\n        width: 100%;\n        height: 100%;\n        max-width: 100px;\n        max-height: 100px;\n        border-radius: 100%;\n        object-fit: cover;\n\n      }\n      mat-icon {\n        font-size: 40px;\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .container-person-name {\n      margin-top: 10px;\n      @include dp-flex-alignment();\n      gap: 10px;\n    }\n    .user-type {\n      font-size: 14px;\n      line-height: 10px;\n    }\n    .description-about {\n      margin-top: 20px;\n    }\n  }\n  .container-user-data {\n    @include dp-flex-alignment(column-reverse);\n    gap: 10px;\n    @include min-tablet {\n      @include dp-flex-alignment(row, flex-start);\n\n    }\n    .container-title-register {\n      @include dp-flex-alignment(row, flex-start, space-between);\n    }\n    .content-profile-data {\n      @include dp-flex-alignment(column, flex-start, flex-start);\n      gap: 20px;\n\n      .content-personal-information {\n        padding-left: 5px;\n      }\n      h3, h4 {\n        color: $blue-dark;\n        font-family: $font-booster-next-bold;\n      }\n      .container-default-infos-disability {\n        @include dp-flex-alignment(column, flex-start, flex-start);\n        gap: 20px\n      }\n      .container-default-infos {\n        @include dp-flex-alignment(column, flex-start, flex-start);\n        gap: 2px;\n\n        .container-default-personal-info {\n          @include dp-flex-alignment(row, center, flex-start);\n          gap: 5px;\n          color: $blue-dark;\n        }\n      }\n      .disability-list {\n        @include dp-flex-alignment(row, center, flex-start);\n        gap: 3px;\n        margin-left: 20px;\n      }\n      .check-circle{\n        color: $magenta-soft-80;\n      }\n    }\n    .content-data-pictures {\n      @include dp-flex-alignment(row, center, flex-start);\n      flex-wrap: wrap;\n      gap: 15px;\n    }\n    .container-profile-image{\n      border-radius: 10px;\n      background-color: $gray-medium-soft;\n      border: 1px solid $gray-soft;\n      width: 100%;\n      box-sizing: border-box;\n      height: 150px;\n      max-width: 150px;\n      max-height: 150px;\n      @include dp-flex-alignment();\n      @include min-tablet {\n        width: 100%;\n        height: 200px;\n\n        max-width: 200px;\n        max-height: 200px;\n      }\n      img{\n        width: 100%;\n        max-width: 200px;\n        max-height: 200px;\n        border-radius: 10px;\n\n      }\n      mat-icon {\n        font-size: 40px;\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<ProfileComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "IUserData.IData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<ProfileComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "IUserData.IData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transformAgeService",
                        "type": "TransformAgeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-profile\">\n  <div class=\"container-close\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeModal()\">\n      close\n    </mat-icon>\n  </div>\n  <div>\n    <section class=\"container-header\">\n      <div class=\"container-profile-image\">\n        <img #profileImg [src]=\"urlImages + data?.profile_picture[0]?.path\" onerror=\"this.onerror = null; this.style.display = 'none'\" alt=\"Foto de perfil\">\n        <div class=\"mat-icon-size border-radius-100\" *ngIf=\"profileImg.onerror === null\">\n          <mat-icon>\n            no_photography\n          </mat-icon>\n        </div>\n      </div>\n      <div class=\"container-person-name\">\n        <div class=\"name-age color-blue-dark font-booster-next-bold\">\n          <span class=\"first-name\">{{ data.name }},</span>\n          <span>\n            {{ age }}\n          </span>\n        </div>\n        <span>\n          <mat-icon>report</mat-icon>\n        </span>\n      </div>\n      <p class=\"user-type color-blue-dark\">\n        {{ data.account_type }}\n      </p>\n      <p class=\"description-about color-blue-dark\">\n        \"{{ data.about }}\"\n      </p>\n    </section>\n    <div class=\"container-user-data\">\n      <section class=\"container-about-me width-100-per container-default-cards-register flex-1\">\n        <mat-card class=\"container-title-register\">\n          <mat-card-title>{{dataTexts.profileUser.titleAboutMe}}</mat-card-title>\n          <div\n            *ngIf=\"data.id == userId\"\n            class=\"container-edit-infos\"\n            (click)=\"openEditAboutMe()\">\n            <mat-icon class=\"mat-18 color-white cursor-pointer\" >edit</mat-icon>\n          </div>\n        </mat-card>\n        <mat-card class=\"container-type-data-default\">\n          <main class=\"content-profile-data\">\n            <section class=\"container-personal-information\">\n              <h3> {{dataTexts.profileUser.personalInfo}}</h3>\n              <div class=\"content-personal-information\">\n                <div class=\"container-default-infos\">\n                  <!-- <div class=\"container-default-personal-info\">\n                    <mat-icon>call</mat-icon> <span>(11)9 1111-1111</span>\n                  </div> -->\n                  <div\n                    class=\"container-default-personal-info\"\n                    *ngIf=\"data.occupation\">\n                    <mat-icon>work</mat-icon>\n                    <span>{{ data.occupation }}</span>\n                  </div>\n                  <div\n                    class=\"container-default-personal-info\"\n                    *ngIf=\"data.gender\">\n                    <mat-icon>person_pin</mat-icon>\n                    <span>\n                      {{ data.gender }}\n                    </span>\n                  </div>\n                  <div\n                    class=\"container-default-personal-info\"\n                    *ngIf=\"data.sexual_orientation\"\n                    >\n                    <mat-icon>loyalty</mat-icon>\n                    <span>{{ data.sexual_orientation }}</span>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <section class=\"container-personal-information\">\n              <h3 *ngIf=\"data.tiic || data.prejudice\"> {{dataTexts.profileUser.myDisability}}</h3>\n              <div class=\"content-personal-information\">\n                <div class=\"container-default-infos-disability\">\n                  <section class=\"my-disability container-default-infos\">\n                    <div class=\"container-default-personal-info\" *ngIf=\"data.tiic\">\n                      <mat-icon class=\"check-circle\">check_circle</mat-icon>\n                      <span>{{ dataTexts.profileUser.haveBIID }}</span>\n                    </div>\n                    <div class=\"container-default-personal-info\" *ngIf=\"data.prejudice\">\n                      <mat-icon class=\"check-circle\">check_circle</mat-icon>\n                      <span>{{ dataTexts.profileUser.prejudice }}</span>\n                    </div>\n                  </section>\n                  <!-- CIDS -->\n                  <section class=\"container-default-infos\" *ngIf=\"data?.my_cids?.length > 0\">\n                    <div class=\"container-default-personal-info\">\n                      <mat-icon>healing</mat-icon>\n                      <h4> {{dataTexts.profileUser.ICDS}} </h4>\n                    </div>\n                    <div\n                      class=\"color-blue-dark disability-list\"\n                      *ngFor=\"let dataCid of data.my_cids\">\n                      <span class=\"bullet\">•</span>\n                      <span *ngIf=\"languageApp === enumLanguage.PT\">{{dataCid.cid.description}}</span>\n                      <span *ngIf=\"languageApp === enumLanguage.US\">{{dataCid.cid.description_en}}</span>\n                    </div>\n                  </section>\n                  <!-- PROCEDIMENTOS MEDICOS -->\n                  <section class=\"container-default-infos\" *ngIf=\"data?.medical_procedures?.length > 0\">\n                    <div class=\"container-default-personal-info\">\n                      <mat-icon>content_cut</mat-icon>\n                      <h4> {{dataTexts.profileUser.medicalProcedures}} </h4>\n                    </div>\n                    <div\n                      class=\"color-blue-dark disability-list\"\n                      *ngFor=\"let dataMedical of data.medical_procedures\">\n                      <span class=\"bullet\">•</span>\n                      <span *ngIf=\"languageApp === enumLanguage.PT\">{{dataMedical.medical_procedures.name}}</span>\n                      <span *ngIf=\"languageApp === enumLanguage.US\">{{dataMedical.medical_procedures.name_en}}</span>\n                    </div>\n                  </section>\n                  <!-- REMEDIO -->\n                  <section\n                    class=\"container-default-infos\"\n                    *ngIf=\"data?.my_drugs?.length > 0\">\n                    <div class=\"container-default-personal-info\">\n                      <mat-icon>local_pharmacy</mat-icon>\n                      <h4> {{dataTexts.profileUser.medicines}} </h4>\n                    </div>\n                    <div\n                      class=\"color-blue-dark disability-list\"\n                      *ngFor=\"let dataDrug of data.my_drugs\">\n                      <span class=\"bullet\">•</span>\n                      <span *ngIf=\"languageApp === enumLanguage.PT\">{{dataDrug.drug.name}}</span>\n                      <span *ngIf=\"languageApp === enumLanguage.US\">{{dataDrug.drug.name_en}}</span>\n                    </div>\n                  </section>\n                  <!-- Hostpitais -->\n                  <section\n                    class=\"container-default-infos\"\n                    *ngIf=\"data?.my_hospitals?.length > 0\">\n                    <div class=\"container-default-personal-info\">\n                      <mat-icon>medical_services</mat-icon>\n                      <h4> {{dataTexts.profileUser.hospitals}} </h4>\n                    </div>\n                    <div\n                    class=\"color-blue-dark disability-list\"\n                    *ngFor=\"let dataHosptal of data.my_hospitals\">\n                    <span class=\"bullet\">•</span>\n                    <span>\n                      {{dataHosptal.hospital.name}}\n                    </span>\n                  </div>\n                  </section>\n                </div>\n              </div>\n            </section>\n          </main>\n        </mat-card>\n      </section>\n      <section class=\"container-pictures width-100-per container-default-cards-register flex-2\">\n        <mat-card class=\"container-title-register\">\n          <mat-card-title>{{dataTexts.profileUser.titlePictures}}</mat-card-title>\n          <div class=\"container-edit-infos\"\n          *ngIf=\"data.id == userId\">\n            <mat-icon\n\n              class=\"mat-18 color-white cursor-pointer\"\n              (click)=\"openEditProfilePicture()\">\n              edit\n            </mat-icon>\n          </div>\n        </mat-card>\n        <mat-card class=\"container-type-data-default\">\n          <main class=\"content-data-pictures\">\n            <div class=\"container-profile-image\" *ngFor=\"let picture of data.profile_picture.slice(0, 6)\">\n              <img #profileImg [src]=\"urlImages + picture.path\" onerror=\"this.onerror = null; this.style.display = 'none'\" alt=\"Foto de perfil\">\n              <div class=\"mat-icon-size border-radius-100\" *ngIf=\"profileImg.onerror === null\">\n                <mat-icon>\n                  no_photography\n                </mat-icon>\n              </div>\n            </div>\n          </main>\n        </mat-card>\n      </section>\n    </div>\n  </div>\n\n\n</div>\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-98ad6f3c4a8a64eadfbb566b9ecba804ca5d7eb805f378521498628078b42775055d4e6a2652aad62dd1043f1ac1c61fc98dd93fd6fcdbd92507cdd9ca395b7a",
            "file": "src/app/pages/initial-page/components/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataCardInitialPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IHeaderCardsInitialPage",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "enumRoute",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "hide",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "openMobileSignIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "showErrorCredentials",
                    "defaultValue": "INIT_DATA_ERRORS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelErrors",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "changeOpenMenuMobile",
                    "args": [
                        {
                            "name": "actionClicked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionClicked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "continueToRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "generateDataHeaderCard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verifyEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { INIT_DATA_ERRORS } from './../../../../shared/enum/errors/errors.enum';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { State, Store } from '@ngrx/store';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { VerifyEmailService } from 'src/app/core/services/verify-email/verify-email.service';\nimport { IHeaderCardsInitialPage } from 'src/app/shared/components/header-cards-initial-page/model/header-cards.data';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { ModelErrors } from 'src/app/shared/model/errors/errors.model';\nimport { MHeaderCardsInitialPage } from 'src/app/shared/model/header-cards-initial-page/header-cards-initial-page.enum';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { AddControlApp } from 'src/app/state-management/controls/copntrols-app.action';\nimport { AddDataRegister } from 'src/app/state-management/register/register.action';\nimport { RegisterService } from 'src/app/core/services/register/register.service';\nimport { AddAllDataUser } from 'src/app/state-management/user-data/user-data.action';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  openMobileSignIn = false;\n  hide = true;\n  loading = false;\n\n  formGroup: FormGroup;\n\n  dataCardInitialPage: IHeaderCardsInitialPage;\n\n  enumRoute = EnumRoutesApplication;\n  dataTexts\n\n  showErrorCredentials: ModelErrors = INIT_DATA_ERRORS;\n\n  destroy$ = new ReplaySubject();\n  constructor(\n    protected store: Store<IAppState>,\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private routerService: RouteService,\n    private formBuilder: FormBuilder,\n    private verifyEmailService: VerifyEmailService,\n    private registerService: RegisterService,\n    private dialogsService: DialogsService,\n  ) {\n    this.store.select('controlsApp')\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((controlsApp: any) => {\n      this.changeOpenMenuMobile(controlsApp.openSingIn);\n    });\n  }\n\n  ngOnInit() {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.initForm();\n    this.generateDataHeaderCard();\n    if (window.innerWidth < 768)\n      this.store.dispatch(new AddControlApp({ openSingIn: true }));\n\n  }\n  changeOpenMenuMobile(actionClicked: boolean): void {\n    this.openMobileSignIn = actionClicked;\n  }\n  generateDataHeaderCard() {\n    const dataTextHeaderCard = this.dataTexts.registerPg;\n    this.dataCardInitialPage =\n      new MHeaderCardsInitialPage(\n        {\n          id: 'titleHeaderCardRegister',\n          label: dataTextHeaderCard.title\n        },\n      );\n  }\n  navigateTo(route){\n    this.routerService.navigateToURL(route);\n  }\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.email\n        ]\n      ],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n        ]\n      ]\n    });\n  }\n  async verifyEmail() {\n    const email = this.formGroup.get('email');\n    if (email.valid) {\n      this.verifyEmailService\n        .post({email: email.value})\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(\n          responseVerifyEmail => {},\n          responseVerifyEmail => {\n            console.log(responseVerifyEmail);\n            const responseError = responseVerifyEmail?.error?.errors;\n            if (responseError.email\n              && responseError.email[0] === \"Email já está em uso.\") {\n              this.showErrorCredentials\n              = new ModelErrors(\n                true,\n                this.dataTexts.errors.existingEmail\n              )\n            } else {\n              this.showErrorCredentials\n              = new ModelErrors(\n                false,\n               ''\n              )\n            }\n        }\n      );\n    }\n  }\n  async continueToRegister() {\n    if (this.formGroup.valid) {\n      this.loading = true;\n      const registerData = await this.registerService.post(this.formGroup.value).toPromise();\n      this.store.dispatch(new AddAllDataUser(registerData));\n      this.loading = false;\n      this.navigateTo(EnumRoutesApplication.REGISTER_WHO_ARE_YOU);\n    }\n\n  }\n  openTerms() {\n    this.dialogsService.openTerms();\n  }\n  openPrivacy() {\n    this.dialogsService.openPrivacy();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_mixins';\n@import '_sizes';\n@import '_buttons';\n\n\n#register {\n  display: flex;\n  width: $s-100per;\n  flex-direction: column;\n}\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routerService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "verifyEmailService",
                        "type": "VerifyEmailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routerService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "verifyEmailService",
                        "type": "VerifyEmailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-register\" class=\"container-default-cards-initial-page\">\n  <section class=\"content-sign-in content-deafult-cards-initial-page\" [class.content-deafult-cards-initial-page-mobile]=\"openMobileSignIn\">\n    <app-header-cards-initial-page [data]=\"dataCardInitialPage\" (headerBtnClick)=\"navigateTo(enumRoute.LOGIN)\"></app-header-cards-initial-page>\n    <form [formGroup]=\"formGroup\" id=\"register\">\n      <div class=\"text error center mt-15px\" >\n        <p *ngIf=\"showErrorCredentials.showError\">\n          {{showErrorCredentials.menssage}}\n        </p>\n      </div>\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>E-mail</mat-label>\n        <input\n          formControlName=\"email\"\n          matInput\n          [placeholder]=\"dataTexts.placeholders.email\"\n          type=\"email\"\n          (blur)=\"verifyEmail()\">\n          <mat-error *ngIf=\"formGroup.controls.email.hasError('required')\">\n            {{dataTexts.inputsErrors.requireds.inputRequired}}\n          </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{dataTexts.signin.password}}</mat-label>\n        <input formControlName=\"password\" matInput [type]=\"hide ? 'password' : 'text'\">\n        <div\n          mat-icon-button\n          matSuffix\n          (click)=\"hide = !hide\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\"\n          class=\"cursor-pointer\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </div>\n        <mat-error *ngIf=\"formGroup.controls.password.hasError('required')\">\n          {{dataTexts.inputsErrors.requireds.inputRequired}}\n        </mat-error>\n      </mat-form-field>\n      <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>{{dataTexts.signin.password}}</mat-label>\n        <input matInput [placeholder]=\"dataTexts.placeholders.password\" type=\"password\">\n      </mat-form-field> -->\n      <button class=\"button primary mtb-15px\" (click)=\"continueToRegister()\">\n        {{dataTexts.buttons.btnContinue}}\n      </button>\n    </form>\n    <button class=\"button third\" (click)=\"navigateTo(enumRoute.LOGIN)\">\n      {{dataTexts.buttons.btnBack}}\n    </button>\n    <p class=\"infos-about-app color-blue-dark mt-15px\">\n      {{dataTexts.txtPrivacyAndTerms}}\n      <span class=\"font-booster-next-bold cursor-pointer\" (click)=\"openPrivacy()\">\n        {{dataTexts.policyPrivacy}}\n      </span>\n      {{dataTexts.and}}\n      <span class=\"font-booster-next-bold cursor-pointer\" (click)=\"openTerms()\">\n        {{dataTexts.termsOfUse}}\n      </span>.\n    </p>\n  </section>\n</div>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n"
        },
        {
            "name": "RegisterDataComponent",
            "id": "component-RegisterDataComponent-84bc21f514a9db3a8c6940ef9b351362d394be4f90e1ba003d099700a88c7f18a6eb3047e33da26f08e2347236ebfb1879a63f10099d6552cc5bafcedcf4ec10",
            "file": "src/app/pages/continue-register/components/register-data/register-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-data",
            "styleUrls": [
                "./register-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register-data.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dateFormatedToSend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "enumRouterApp",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "errorsEnum",
                    "defaultValue": "ErrorsEnum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "filteredCids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "filteredDrugs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "filteredHosptals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "filteredMedicalProcedures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "genderList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "imagesList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "imagesTypes",
                    "defaultValue": "ImagesTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "imagesURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "laguagesApplication",
                    "defaultValue": "EnumLanguages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "maxDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "minDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "sexualOrientationList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "showWasBorn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "specialAccount",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "usageLaguage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "addControlsTypeSpecial",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addImagesURL",
                    "args": [
                        {
                            "name": "key",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addKeyInDisabilitys",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 301,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeTargetGender",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 294,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "continueRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "dateSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 336,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genderChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 318,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDatasSelectTypeSpecial",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 342,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "EnumRoutesApplication",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModalActivateLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeControlsIputSearchSpecialThings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedImage",
                    "args": [
                        {
                            "name": "files",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "imageType",
                            "type": "ImagesTypes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "imageType",
                            "type": "ImagesTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDataInFormWheDataRecovered",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDataToSpecialPerson",
                    "args": [],
                    "optional": false,
                    "returnType": "{ cid: {}; medical_procedures: {}; drugs: {}; hospitals: {}; }",
                    "typeParameters": [],
                    "line": 284,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setFormDataToSendFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSpecifyValueInRegisterState",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 333,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "valueChangesInputsSearchSelects",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 357,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { startWith, map, takeUntil } from 'rxjs/operators';\nimport { StateManagementFuncService } from 'src/app/shared/functions/state-management/state-management-func.service';\nimport { State, Store } from '@ngrx/store';\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { ImagesTypes } from './enum/images-type.enum';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { nameValidatorSpecialCharacteres } from 'src/app/shared/validators/name/name-special-characteres.validator';\nimport { nameValidatorFormatInvalid } from 'src/app/shared/validators/name/name-format-invalid.validator';\nimport { ErrorsEnum } from 'src/app/shared/enum/errors/errors.enum';\nimport { EnumUserType } from 'src/app/shared/enum/user-types/user-type.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\nimport moment from 'moment';\nimport { ChangeMaskService } from 'src/app/shared/functions/change-mask/change-mask.service';\nimport { EnumLanguages } from 'src/app/shared/enum/languages/languages.enum';\nimport { EnumFormatsInputs } from 'src/app/shared/enum/formats-inputs/formats-inputs.enum';\nimport { GetCidsService } from 'src/app/core/services/get-cids/get-cids.service';\nimport { GetHosptalsService } from 'src/app/core/services/get-hosptals/get-hosptals.service';\nimport { GetMedicalProceduresService } from 'src/app/core/services/get-medical-procedures/get-medical-procedures.service';\nimport { ModelCidsResponse } from 'src/app/shared/model/response/get-cids/get-cids.model';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { GetMedicinesService } from 'src/app/core/services/get-medicines/get-medicines.service';\nimport { EnumItensResponseTypeSpecial } from './enum/itens-response.enum';\nimport { Params } from '@angular/router';\nimport { AddDataRegister } from 'src/app/state-management/register/register.action';\nimport { RegisterService } from 'src/app/core/services/register/register.service';\nimport { ProfilePicturesService } from 'src/app/core/services/profile-pictures/profile-pictures.service';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { GetSelectsSpecialPersonService } from 'src/app/shared/functions/get-selects-special-person/get-selects-special-person.service';\nimport { inputsSpecialPerson, searchSpecialPerson } from './consts/inputs-special-person.const';\nimport { EnumControlsSpecialPerson } from './enum/constrols-inputs-special-person.enum';\nimport { UpdateDataService } from 'src/app/core/services/update-data/update-data.service';\nimport { EnumGenders } from 'src/app/shared/enum/genders/genders.enum';\n\n@Component({\n  selector: 'app-register-data',\n  templateUrl: './register-data.component.html',\n  styleUrls: ['./register-data.component.scss']\n})\nexport class RegisterDataComponent implements OnInit {\n  dataTexts;\n  imagesURL;\n  genderList;\n  sexualOrientationList;\n\n  laguagesApplication = EnumLanguages\n  usageLaguage: string;\n\n  imagesTypes = ImagesTypes;\n  errorsEnum = ErrorsEnum;\n  enumRouterApp = EnumRoutesApplication;\n\n  imagesList = [];\n  formGroup: FormGroup;\n  specialAccount = false;\n  showWasBorn = false;\n  loading = false;\n\n  minDate;\n  maxDate;\n  dateFormatedToSend;\n\n  filteredCids: Observable<any[]>;\n  filteredMedicalProcedures: Observable<any[]>;\n  filteredDrugs: Observable<any[]>;\n  filteredHosptals: Observable<any[]>;\n\n  destroy$ = new ReplaySubject(1);\n  constructor(\n    protected store: Store,\n    protected state: State<IAppState>,\n    private translateService: TranslateService,\n    private formBuilder: FormBuilder,\n    private routeService: RouteService,\n    private dialogsService: DialogsService,\n    private changeMaskService: ChangeMaskService,\n    private stateManagementFuncService: StateManagementFuncService,\n    private registerService: RegisterService,\n    private profilePicturesService: ProfilePicturesService,\n    private getSelectsSpecialPersonService: GetSelectsSpecialPersonService,\n    private updateDataService: UpdateDataService,\n\n\n\n  ) {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.usageLaguage = translateService?.dataFormatation;\n    this.minDate = moment().subtract(100, 'years').toDate();\n    this.maxDate = moment().subtract(18, 'years').toDate();\n  }\n  ngOnInit() {\n    this.initForm();\n    if (this.state.getValue()?.registerData?.account_type === EnumUserType.SPECIAL) {\n      this.specialAccount = true;\n      this.addControlsTypeSpecial();\n      this.getDatasSelectTypeSpecial();\n      this.valueChangesInputsSearchSelects();\n\n    };\n    this.setDataInFormWheDataRecovered();\n    this.openModalActivateLocation();\n  }\n  setDataInFormWheDataRecovered() {\n    const registerData = this.state.getValue()?.registerData\n    if (registerData.profile_picture !== null) {\n      if (registerData?.profile_picture[0]) {\n        this.imagesURL = {\n          ...this.imagesURL,\n          [this.imagesTypes.FIRST_IMAGE]: `${environment.urlImages}${registerData?.profile_picture[0]?.path}`\n        }\n      } else {\n        this.imagesURL = {\n          ...this.imagesURL,\n        }\n      }\n    }\n\n    this.formGroup.patchValue(\n      {\n        ...this.state.getValue()?.registerData\n      }\n    );\n  }\n  private initForm() {\n    this.formGroup = this.formBuilder.group({\n      name: [\n        '',\n        [\n          Validators.required,\n          nameValidatorSpecialCharacteres,\n        ]\n      ],\n      occupation: [\n        ''\n      ],\n      birthdate: [\n        '',\n        [\n          Validators.required,\n        ]\n      ],\n      gender: [\n        '',\n        [\n          Validators.required,\n        ]\n      ],\n      show_as_gender: [\n        '',\n        [\n          Validators.required,\n        ]\n      ],\n      sexual_orientation: [\n        '',\n        [\n          Validators.required,\n        ]\n      ],\n      about: [\n        '',\n        [\n          Validators.required,\n        ]\n      ]\n\n    })\n  }\n  selectedImage(files: File, imageType: ImagesTypes) {\n    // const controlPictures = this.formGroup.get('profile_picture');\n    if (files && files[0]) {\n      // (controlPictures as FormArray).push(this.formBuilder.group(files[0]));\n      const reader = new FileReader();\n      reader.readAsDataURL(files[0]);\n      reader.onload = (evt) => {\n        switch (imageType) {\n          case ImagesTypes.FIRST_IMAGE:\n            this.addImagesURL(ImagesTypes.FIRST_IMAGE, evt.target.result);\n            this.imagesList[0] = files[0];\n            break;\n          case ImagesTypes.SECOND_IMAGE:\n            this.addImagesURL(ImagesTypes.SECOND_IMAGE, evt.target.result);\n            this.imagesList[1] = files[0];\n            break;\n          case ImagesTypes.THIRD_IMAGE:\n            this.addImagesURL(ImagesTypes.THIRD_IMAGE, evt.target.result);\n            this.imagesList[2] = files[0];\n            break;\n          case ImagesTypes.FORTY_IMAGE:\n            this.addImagesURL(ImagesTypes.FORTY_IMAGE, evt.target.result);\n            this.imagesList[3] = files[0];\n            break;\n          default:\n            break;\n        }\n      };\n    }\n  }\n  addImagesURL(key, value) {\n    this.imagesURL = {\n      ...this.imagesURL,\n      [key]: value\n    }\n  }\n  get controlsForm() { return this.formGroup.controls; }\n  addControlsTypeSpecial(): void {\n    const controlsSpecial = [\n      ...searchSpecialPerson,\n      ...inputsSpecialPerson,\n    ]\n    controlsSpecial.forEach((value: string) => {\n      if (value.includes('input_')) {\n        this.formGroup\n        .addControl(\n          value,\n          this.formBuilder.control(''));\n      }else {\n        this.formGroup\n        .addControl(\n          value,\n          this.formBuilder.control('', Validators.required));\n      }\n\n    });\n  }\n  removeControlsIputSearchSpecialThings() {\n    const controlsSpecial = [\n      ...searchSpecialPerson,\n      ...inputsSpecialPerson,\n    ];\n    controlsSpecial.forEach((value: string) => {\n      this.formGroup.removeControl(value);\n    });\n  }\n  navigateTo(route: EnumRoutesApplication) {\n    this.routeService.navigateToURL(route);\n  }\n  openModalActivateLocation() {\n    if (!this.state.getValue()?.registerData.lat\n      && !this.state.getValue()?.registerData.lng) {\n      this.dialogsService\n      .openActivateLocation()\n      .afterClosed()\n      .subscribe( c => {\n        this.getSelectsSpecialPersonService\n        .getHosptals().then(res => {\n          this.filteredHosptals = res.data;\n        });\n      });\n    }\n\n  }\n  async continueRegister() {\n    if (this.formGroup.valid) {\n      this.loading = true;\n      let updateData;\n      this.store.dispatch(new AddDataRegister({\n        ...this.formGroup.value,\n        birthdate: this.dateFormatedToSend,\n      }));\n      updateData = {\n        ...this.state.getValue().registerData,\n        target_gender: this.changeTargetGender()\n      }\n      if (this.state.getValue()?.registerData?.account_type === EnumUserType.SPECIAL) {\n        updateData = {\n          ...updateData,\n          disability: this.setDataToSpecialPerson()\n        }\n      }\n      if(this.imagesList.length > 0) {\n        await this.profilePicturesService.post(this.setFormDataToSendFiles()).toPromise();\n      }\n      await this.updateDataService.post(updateData, this.state.getValue().userData.data.id).toPromise();\n      this.loading = false;\n      this.navigateTo(EnumRoutesApplication.MATCHS);\n    }\n\n  }\n  setDataToSpecialPerson() {\n    const disabilitys = {\n      cid: this.addKeyInDisabilitys(this.formGroup.get('my_cids').value),\n      medical_procedures: this.addKeyInDisabilitys(this.formGroup.get('medical_procedures').value),\n      drugs: this.addKeyInDisabilitys(this.formGroup.get('my_drugs').value),\n      hospitals: this.addKeyInDisabilitys(this.formGroup.get('my_hospitals').value),\n    }\n    this.removeControlsIputSearchSpecialThings();\n    return disabilitys;\n  }\n  changeTargetGender() {\n    if (this.formGroup.get('show_as_gender').value === EnumGenders.MALE) {\n      return EnumGenders.FEMALE;\n    } else if (this.formGroup.get('show_as_gender').value === EnumGenders.FEMALE) {\n      return EnumGenders.MALE;\n    }\n  }\n  addKeyInDisabilitys(value) {\n    let newArrayValue = [];\n    if (value) {\n      value.forEach(element => {\n        newArrayValue.push(  element);\n      });\n    }\n\n    return newArrayValue;\n  }\n  setFormDataToSendFiles() {\n    const formData = new FormData();\n    for (let i = 0; i < this.imagesList.length; i++) {\n      formData.append('image[]', this.imagesList[i]);\n    }\n    return formData;\n  }\n  genderChanged(value) {\n    if (\n        value !== 'male'\n        && value !== 'man'\n        && value !== 'female'\n        && value !== 'women'\n      ) {\n      this.showWasBorn = true;\n      return this.showWasBorn;\n    }\n    this.formGroup.get('show_as_gender').setValue(value);\n    this.showWasBorn = false;\n    return this.showWasBorn;\n  }\n\n  setSpecifyValueInRegisterState(key: string, value: any) {\n    this.formGroup.get(key).setValue(value);\n  }\n  dateSelected(event) {\n    const dateMoment = moment(event.value);\n    const birthDateFormated = dateMoment.format(this.changeMaskService.changeMaskBirthDate());\n    this.dateFormatedToSend = dateMoment.format(EnumFormatsInputs.dateToSend)\n    this.setSpecifyValueInRegisterState('birthdate', birthDateFormated);\n  }\n  getDatasSelectTypeSpecial() {\n    this.getSelectsSpecialPersonService\n      .getCids().then(res => {\n        this.filteredCids = res.data;\n      });\n    this.getSelectsSpecialPersonService\n      .getMedicalProcedures().then(res => {\n        this.filteredMedicalProcedures = res.data;\n      });\n    this.getSelectsSpecialPersonService\n      .getDrugsMedicines().then(res => {\n        this.filteredDrugs = res.data;\n      });\n\n  }\n  valueChangesInputsSearchSelects() {\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MY_CID)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getCids(res)\n          .then(selectData => {\n            this.filteredCids = selectData.data;\n        })\n      });\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MY_DRUGS)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getDrugsMedicines(res)\n          .then(selectData => {\n            this.filteredDrugs = selectData.data;\n        })\n      });\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MEDICAL_PROCEDURES)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getMedicalProcedures(res)\n          .then(selectData => {\n            this.filteredMedicalProcedures = selectData.data;\n        })\n      });\n    this.formGroup\n      .get(EnumControlsSpecialPerson.INPUT_MY_HOSPTALS)\n      .valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.getSelectsSpecialPersonService\n          .getHosptals(res)\n          .then(selectData => {\n            this.filteredHosptals = selectData.data;\n        })\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n@import '_mixins';\n\n:host {\n  width: 100%;\n  background: $princiapl-background-gradient;\n}\n#container-register-data {\n  .container-type-data-default {\n    padding: 0;\n  }\n  .container-register-default {\n    @include dp-flex-alignment(column, initial, initial);\n    gap: 20px;\n  }\n  .cotainer-data-register {\n    border-radius: 20px;\n    box-shadow: none;\n    padding: 30px 20px;\n    box-sizing: border-box;\n  }\n  .content-register-data {\n    form {\n      @include dp-flex-alignment(column, initial, initial);\n      gap: 20px;\n    }\n    .container-profile-image {\n      .profile-img{\n        display: flex;\n        margin: 0 auto;\n        position: relative;\n        width:160px;\n        height: 100px;\n        border-radius: 8px;\n        font-size: 120px;\n        &:hover {\n          border: 1px solid $blue-dark;\n          &::before{\n            border: 1px solid $blue-dark;\n          }\n        }\n        &::after, &::before{\n          display: block;\n          position: absolute;\n        }\n\n      }\n      .content-picture {\n        @include dp-flex-alignment();\n      }\n      .photo-principal{\n        max-width: 160px;\n        mat-icon{\n          display: flex;\n          justify-content: center;\n        }\n        .avatar{\n          img{\n            display: block;\n            max-width: 100%;\n            max-height: 100%;\n            border-radius: 8px;\n          }\n        }\n      }\n    }\n    .more-pictures {\n      @include dp-flex-alignment(row, center, space-between);\n      gap: 20px;\n      flex-wrap: wrap;\n\n      .more-photos {\n        background-color: $gray-medium-soft;\n        border: 1px solid $gray-soft;\n        border-radius: 20px;\n        height: 150px;\n        min-width: 150px;\n        max-width: 150px;\n        padding: 5px;\n        box-sizing: border-box;\n        &:hover {\n          border: 1px solid $blue-dark;\n        }\n        img{\n          max-width: 100%;\n          max-height: 100%;\n          border-radius: 8px;\n          display: block;\n          max-height: 100px;\n        }\n        label {\n          width: 100%;\n          height: 100%;\n          @include dp-flex-alignment(column, flex-end, flex-end);\n\n        }\n        mat-icon {\n          width: 100%;\n          max-width: 25px;\n          height: auto;\n          color: $magenta-soft;\n          font-size: 25px;\n        }\n      }\n    }\n\n  }\n  .container-data-person {\n    .content-data-person {\n      padding: 0 15px;\n    }\n\n  }\n\n\n\n}\n\n",
                    "styleUrl": "./register-data.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "changeMaskService",
                        "type": "ChangeMaskService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "profilePicturesService",
                        "type": "ProfilePicturesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getSelectsSpecialPersonService",
                        "type": "GetSelectsSpecialPersonService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 72,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeMaskService",
                        "type": "ChangeMaskService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "profilePicturesService",
                        "type": "ProfilePicturesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getSelectsSpecialPersonService",
                        "type": "GetSelectsSpecialPersonService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updateDataService",
                        "type": "UpdateDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "controlsForm": {
                    "name": "controlsForm",
                    "getSignature": {
                        "name": "controlsForm",
                        "type": "",
                        "returnType": "",
                        "line": 209
                    }
                }
            },
            "templateData": "<div id=\"container-register-data\" class=\"container-default-cards-register\">\n  <mat-card class=\"container-title-register\">\n    <div class=\"container-title-register cursor-pointer\" (click)=\"navigateTo(enumRouterApp.REGISTER_WHO_ARE_YOU)\">\n      <mat-icon class=\"mat-18 color-magenta-soft\">arrow_back_ios</mat-icon>\n      <mat-card-title>{{dataTexts.iamEspecialAndDevotee.headerYourProfile}}</mat-card-title>\n    </div>\n  </mat-card>\n  <div class=\"container-type-data-default\">\n    <main class=\"content-register-data\">\n      <form [formGroup]=\"formGroup\">\n        <mat-card class=\"container-others-pictures container-register-default cotainer-data-register\">\n          <mat-card-title>{{dataTexts.iamEspecialAndDevotee.titleMorePictures}}</mat-card-title>\n          <div class=\"more-pictures\">\n            <div class=\"more-photos flex-1 cursor-pointer\">\n              <label for=\"more-photos-1\" class=\"cursor-pointer\">\n                <mat-icon class=\"profile-img\"*ngIf=\"!imagesURL?.firstImage\">\n                  add_circle\n                </mat-icon>\n                <div *ngIf=\"imagesURL?.firstImage\">\n                  <img class=\"\" src={{imagesURL?.firstImage}} alt=\"\">\n                </div>\n              </label>\n\n              <input\n                type=\"file\"\n                id=\"more-photos-1\"\n                name=\"more-photos-1\"\n                accept=\"image/png, image/jpeg\"\n                class=\"input-file input-photo-principal\"\n                (change)=\"selectedImage($event.target.files, imagesTypes.FIRST_IMAGE)\">\n            </div>\n            <div class=\"more-photos flex-1 cursor-pointer\">\n              <label for=\"more-photos-2\" class=\"cursor-pointer\">\n                <mat-icon class=\"profile-img\" *ngIf=\"!imagesURL?.secondImage\">\n                  add_circle\n                </mat-icon>\n                <div class=\"profile-img\" *ngIf=\"imagesURL?.secondImage\">\n                  <img class=\"\" src={{imagesURL?.secondImage}} alt=\"\">\n                </div>\n              </label>\n\n              <input\n                type=\"file\"\n                id=\"more-photos-2\"\n                name=\"more-photos-2\"\n                accept=\"image/png, image/jpeg\"\n                class=\"input-file input-photo-principal\"\n                (change)=\"selectedImage($event.target.files, imagesTypes.SECOND_IMAGE)\">\n            </div>\n            <div class=\"more-photos flex-1 cursor-pointer\" >\n              <label for=\"more-photos-3\" class=\"cursor-pointer\">\n                <mat-icon class=\"profile-img\" *ngIf=\"!imagesURL?.thirdImage\">\n                  add_circle\n                </mat-icon>\n                <div class=\"profile-img\" *ngIf=\"imagesURL?.thirdImage\">\n                  <img class=\"\" src={{imagesURL?.thirdImage}} alt=\"\">\n                </div>\n              </label>\n              <input\n                type=\"file\"\n                id=\"more-photos-3\"\n                name=\"more-photos-3\"\n                accept=\"image/png, image/jpeg\"\n                class=\"input-file input-photo-principal\"\n                (change)=\"selectedImage($event.target.files, imagesTypes.THIRD_IMAGE)\">\n            </div>\n            <div class=\"more-photos flex-1 cursor-pointer\" >\n              <label for=\"more-photos-4\" class=\"cursor-pointer\">\n                <mat-icon class=\"profile-img\" *ngIf=\"!imagesURL?.fortyImage\">\n                  add_circle\n                </mat-icon>\n                <div class=\"profile-img\" *ngIf=\"imagesURL?.fortyImage\">\n                  <img class=\"\" src={{imagesURL?.fortyImage}} alt=\"\">\n                </div>\n              </label>\n              <input\n                type=\"file\"\n                id=\"more-photos-4\"\n                name=\"more-photos-4\"\n                accept=\"image/png, image/jpeg\"\n                class=\"input-file input-photo-principal\"\n                (change)=\"selectedImage($event.target.files, imagesTypes.FORTY_IMAGE)\">\n            </div>\n          </div>\n        </mat-card>\n        <mat-card class=\"container-data-person container-register-default cotainer-data-register\">\n          <mat-card-title>{{dataTexts.iamEspecialAndDevotee.titleAboutYourself}}</mat-card-title>\n          <div class=\"container-default-inputs-orientation content-data-person\">\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n              <mat-label>{{dataTexts.inputs.name.label}}</mat-label>\n              <input\n                matInput\n                [placeholder]=\"dataTexts.inputs.name.placeHolder\"\n                type=\"name\"\n                autocomplete=\"name\"\n                formControlName=\"name\"\n                >\n                <mat-error *ngIf=\"controlsForm.name.hasError(errorsEnum.REQUIRED)\">\n                  {{ dataTexts.inputs.genericErrors.inputRequired }}\n                </mat-error>\n                <mat-error\n                  *ngIf=\"controlsForm.name.hasError(errorsEnum.SPECIAL_CHARACTERES)\n                  && !controlsForm.name.hasError(errorsEnum.REQUIRED)\">\n                  {{ dataTexts.inputs.name.errors.specialCharacters }}\n                </mat-error>\n                <mat-error\n                  *ngIf=\"!controlsForm.name.hasError(errorsEnum.SPECIAL_CHARACTERES)\n                  && !controlsForm.name.hasError(errorsEnum.REQUIRED)\n                  && controlsForm.name.hasError(errorsEnum.FORMAT_INVALID)\">\n                {{ dataTexts.inputs.name.errors.invalidFormatName }}\n              </mat-error>\n            </mat-form-field>\n            <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n              <mat-label>{{dataTexts.inputs.email.label}}</mat-label>\n              <input\n                matInput\n                [placeholder]=\"dataTexts.inputs.email.placeHolder\"\n                type=\"email\"\n                formControlName=\"email\"\n                >\n                <mat-error *ngIf=\"controlsForm.email.hasError(errorsEnum.REQUIRED)\">\n                  {{ dataTexts.inputs.genericErrors.inputRequired }}\n                </mat-error>\n                <mat-error\n                  *ngIf=\"controlsForm.email.hasError(errorsEnum.EMAIL)\n                  && !controlsForm.email.hasError(errorsEnum.REQUIRED)\">\n                  {{ dataTexts.inputs.email.errors.invalidEmail }}\n                </mat-error>\n            </mat-form-field> -->\n          </div>\n          <div class=\"container-default-inputs-orientation content-data-person\">\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n              <mat-label>{{dataTexts.inputs.profession.label}}</mat-label>\n              <input\n                matInput\n                [placeholder]=\"dataTexts.inputs.profession.placeHolder\"\n                type=\"text\"\n                autocomplete=\"work\"\n                formControlName=\"occupation\"\n                >\n            </mat-form-field>\n            <mat-form-field (click)=\"picker.open()\" appearance=\"fill\">\n              <mat-label (click)=\"picker.open()\">{{dataTexts.inputs.birthdate.label}}</mat-label>\n              <input\n                type=\"hidden\"\n                [min]=\"minDate\"\n                [max]=\"maxDate\"\n                [matDatepicker]=\"picker\"\n                maxlength=\"10\"\n                (dateChange)=\"dateSelected($event)\"\n                (keypress)=\"false\"\n                >\n                <input\n                (keypress)=\"false\"\n                  matInput\n                  [mask]=\"\"\n                  (click)=\"picker.open()\"\n                  formControlName=\"birthdate\">\n              <mat-hint>{{dataTexts.inputs.birthdate.placeHolder}}</mat-hint>\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n              <mat-error *ngIf=\"controlsForm.birthdate.hasError(errorsEnum.REQUIRED)\">\n                {{ dataTexts.inputs.genericErrors.inputRequired }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"container-default-inputs-orientation content-data-person\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.gender.label }}</mat-label>\n              <mat-select formControlName=\"gender\" (valueChange)=\"genderChanged($event)\">\n                <mat-option\n                  *ngFor=\"\n                    let gender\n                    of dataTexts.genders\"\n                  [value]=\"gender.value\">\n                  {{gender.label}}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"controlsForm.gender.hasError(errorsEnum.REQUIRED)\">\n                {{ dataTexts.inputs.genericErrors.inputRequired }}\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" *ngIf=\"showWasBorn\">\n              <mat-label>{{ dataTexts.inputs.wasBorn.label }}</mat-label>\n              <mat-select formControlName=\"show_as_gender\">\n                <mat-option\n                  *ngFor=\"\n                    let gender\n                    of dataTexts.genders.slice(0, 2)\"\n                  [value]=\"gender.value\">\n                  {{gender.label}}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"controlsForm.show_as_gender.hasError(errorsEnum.REQUIRED)\">\n                {{ dataTexts.inputs.genericErrors.inputRequired }}\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.sexualOrientation.label }}</mat-label>\n              <mat-select formControlName=\"sexual_orientation\">\n                <mat-option\n                  *ngFor=\"\n                    let sexualOrientation\n                    of dataTexts.sexualOrientations\"\n                  [value]=\"sexualOrientation.value\">\n                  {{sexualOrientation.label}}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"controlsForm.sexual_orientation.hasError(errorsEnum.REQUIRED)\">\n                {{ dataTexts.inputs.genericErrors.inputRequired }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"container-default-inputs-orientation content-data-person\">\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.moreAboutYourself.label }}</mat-label>\n              <textarea\n                matInput\n                [placeholder]=\"dataTexts.inputs.moreAboutYourself.placeHolder\"\n                formControlName=\"about\">\n              </textarea>\n              <mat-error *ngIf=\"controlsForm.about.hasError(errorsEnum.REQUIRED)\">\n                {{ dataTexts.inputs.genericErrors.inputRequired }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </mat-card>\n        <mat-card *ngIf=\"specialAccount\" class=\"container-data-disability container-register-default cotainer-data-register\">\n          <mat-card-title>{{dataTexts.iamEspecialAndDevotee.titleAboutYourDisability}}</mat-card-title>\n          <div class=\"container-default-inputs-orientation content-data-person\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.selectICD.label }}</mat-label>\n              <mat-select\n              formControlName=\"my_cids\"\n              multiple>\n                <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n                  <mat-label>{{ dataTexts.inputs.searchs.iIcd.label }}</mat-label>\n                  <input\n                    matInput\n                    [placeholder]=\"dataTexts.inputs.searchs.iIcd.placeholder\"\n                    formControlName=\"input_my_cids\"\n                    type=\"search\"\n                    (keydown)=\"$event.stopPropagation()\"\n                    >\n                </mat-form-field>\n                <div *ngIf=\"usageLaguage === laguagesApplication.PT\">\n                  <mat-option [value]=\"icd\" *ngFor=\"let icd of filteredCids\">\n                    {{icd.description}}\n                  </mat-option>\n                </div>\n                <div *ngIf=\"usageLaguage === laguagesApplication.US \">\n                  <mat-option [value]=\"icd\" *ngFor=\"let icd of filteredCids\">\n                    {{icd.description_en}}\n                  </mat-option>\n                </div>\n\n\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.selectMedicalProcedures.label }}</mat-label>\n              <mat-select\n                multiple\n                formControlName=\"medical_procedures\"\n                >\n                <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n                  <mat-label>{{ dataTexts.inputs.searchs.medicalProcedures.label }}</mat-label>\n                  <input\n                    matInput\n                    [placeholder]=\"dataTexts.inputs.searchs.medicalProcedures.placeholder\"\n                    type=\"name\"\n                    autocomplete=\"name\"\n                    formControlName=\"input_medical_procedures\"\n                    (keydown)=\"$event.stopPropagation()\"\n                    >\n                </mat-form-field>\n                <div *ngIf=\"usageLaguage === laguagesApplication.PT\">\n                  <mat-option [value]=\"medicalProcedure\" *ngFor=\"let medicalProcedure of filteredMedicalProcedures\">\n                    {{medicalProcedure.name}}\n                  </mat-option>\n                </div>\n                <div *ngIf=\"usageLaguage === laguagesApplication.US \">\n                  <mat-option [value]=\"medicalProcedure\" *ngFor=\"let medicalProcedure of filteredMedicalProcedures\">\n                    {{medicalProcedure.name_en}}\n                  </mat-option>\n                </div>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div class=\"container-default-inputs-orientation content-data-person\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.selectMedications.label }}</mat-label>\n              <mat-select\n              formControlName=\"my_drugs\"\n              multiple\n              >\n                <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n                  <mat-label>{{ dataTexts.inputs.searchs.medicines.label }}</mat-label>\n                  <input\n                    matInput\n                    [placeholder]=\"dataTexts.inputs.searchs.medicines.placeholder\"\n                    type=\"name\"\n                    autocomplete=\"name\"\n                    formControlName=\"input_my_drugs\"\n                    (keydown)=\"$event.stopPropagation()\"\n                    >\n                </mat-form-field>\n                <div *ngIf=\"usageLaguage === laguagesApplication.PT\">\n                  <mat-option [value]=\"drug\" *ngFor=\"let drug of filteredDrugs\">\n                    {{drug.name}}\n                  </mat-option>\n                </div>\n                <div *ngIf=\"usageLaguage === laguagesApplication.US \">\n                  <mat-option [value]=\"drug\" *ngFor=\"let drug of filteredDrugs\">\n                    {{drug.name_en}}\n                  </mat-option>\n                </div>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>{{ dataTexts.inputs.selectHospitals.label }}</mat-label>\n              <mat-select\n              formControlName=\"my_hospitals\"\n              multiple>\n                <mat-form-field class=\"example-full-width width-100-per\" appearance=\"fill\">\n                  <mat-label>{{ dataTexts.inputs.searchs.hospitals.label }}</mat-label>\n                  <input\n                    matInput\n                    [placeholder]=\"dataTexts.inputs.searchs.hospitals.placeholder\"\n                    type=\"name\"\n                    autocomplete=\"name\"\n                    formControlName=\"input_my_hospitals\"\n                    (keydown)=\"$event.stopPropagation()\"\n                    >\n                </mat-form-field>\n                <div>\n                  <mat-option [value]=\"hosptal\" *ngFor=\"let hosptal of filteredHosptals\">\n                    {{hosptal.name}}\n                  </mat-option>\n                </div>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </mat-card>\n      </form>\n    </main>\n  </div>\n\n</div>\n<section class=\"contianer-btns out-container\">\n  <button\n    class=\"button stroke-primary\"\n    (click)=\"navigateTo(enumRouterApp.REGISTER_WHO_ARE_YOU)\">\n    {{ dataTexts.buttons.btnBack }}\n  </button>\n  <button\n    class=\"button primary\"\n    [disabled]=\"formGroup.invalid\"\n    (click)=\"continueRegister()\">\n    {{ dataTexts.buttons.btnContinue }}\n  </button>\n</section>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n"
        },
        {
            "name": "RememberPasswordComponent",
            "id": "component-RememberPasswordComponent-7a99251f08fc5d9c71f3a09a66bfd1388a772300dd8d4e0d39d098ac3f01c1c48e8e72dcaa82b2a1f74fbb92074246543b5f42dfb2079cb6331d72500a3a595d",
            "file": "src/app/pages/initial-page/components/remember-password/remember-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-remember-password",
            "styleUrls": [
                "./remember-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./remember-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataCardInitialPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IHeaderCardsInitialPage",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "openMobileSignIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "routeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RouteService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeOpenMenuMobile",
                    "args": [
                        {
                            "name": "actionClicked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionClicked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateDataHeaderCard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { State, Store } from '@ngrx/store';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { IHeaderCardsInitialPage } from 'src/app/shared/components/header-cards-initial-page/model/header-cards.data';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { MHeaderCardsInitialPage } from 'src/app/shared/model/header-cards-initial-page/header-cards-initial-page.enum';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { AddControlApp } from 'src/app/state-management/controls/copntrols-app.action';\n\n@Component({\n  selector: 'app-remember-password',\n  templateUrl: './remember-password.component.html',\n  styleUrls: ['./remember-password.component.scss']\n})\nexport class RememberPasswordComponent implements OnInit {\n  openMobileSignIn = false;\n\n  dataTexts;\n  dataCardInitialPage: IHeaderCardsInitialPage;\n  destroy$ = new ReplaySubject();\n\n  constructor(\n    protected state: State<IAppState>,\n    protected store: Store<IAppState>,\n\n    private translateService: TranslateService,\n    private router: Router,\n\n    public routeService: RouteService,\n\n  ) {\n    this.store.select('controlsApp')\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((controlsApp: any) => {\n      this.changeOpenMenuMobile(controlsApp.openSingIn);\n    });\n  }\n\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n    if (!this.routeService.verifyOpenSingIn() && window.innerWidth < 768)\n      this.store.dispatch(new AddControlApp({ openSingIn: true }));\n    this.generateDataHeaderCard();\n  }\n  changeOpenMenuMobile(actionClicked: boolean): void {\n    this.openMobileSignIn = actionClicked;\n  }\n  navigateTo() {\n    this.routeService.navigateToURL(EnumRoutesApplication.LOGIN);\n  }\n  generateDataHeaderCard() {\n    const dataTextHeaderCard = this.dataTexts.rememberPasswordPg;\n    this.dataCardInitialPage =\n      new MHeaderCardsInitialPage(\n        {\n          id: 'titleHeaderCardRememberPassword',\n          label: dataTextHeaderCard.title\n        },\n        {\n          id: 'textHeaderCardRememberPassword',\n          label: dataTextHeaderCard.text\n        }\n      );\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_colors';\n@import '_buttons';\n@import '_mixins';\n@import '_sizes';\n.content-remember-password {\n\n  #sign-in {\n    display: flex;\n    width: $s-100per;\n    flex-direction: column;\n    margin-top: $s-20px;\n  }\n}\n.container-buttons- {\n  &mobile {\n    display: flex;\n    flex-direction: column;\n    gap: $s-10px;\n    @include min-tablet {\n      display: none;\n    }\n  }\n  &others {\n    display: flex;\n    flex-direction: row;\n    gap: $s-10px;\n  }\n}\n.others-logins {\n  text-align: center;\n}\n.infos-about-app {\n  text-align: center;\n}\n\n",
                    "styleUrl": "./remember-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-remember-password\" class=\"container-default-cards-initial-page\">\n  <section class=\"content-remember-password content-deafult-cards-initial-page\" [class.content-deafult-cards-initial-page-mobile]=\"openMobileSignIn\">\n    <app-header-cards-initial-page [data]=\"dataCardInitialPage\" (headerBtnClick)=\"navigateTo()\"></app-header-cards-initial-page>\n    <form id=\"sign-in\" class=\"example-form\">\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>E-mail</mat-label>\n        <input matInput placeholder=\"Digite seu email\" type=\"email\">\n      </mat-form-field>\n      <button class=\"button primary mb-15px\">\n        {{dataTexts.rememberPasswordPg.btnRecover}}\n      </button>\n    </form>\n    <button class=\"button third\" (click)=\"navigateTo()\">\n      {{dataTexts.rememberPasswordPg.btnBack}}\n    </button>\n\n  </section>\n\n</div>\n\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-dd320dd4a28f529a6c97ebb02fe5b5ef62f4233514ceea65a18a96cd5dbe3541911af34ca4c612ac65d13677969cebb05204e976562260bf1ca1469afa253ab3",
            "file": "src/app/pages/initial-page/components/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-in",
            "styleUrls": [
                "./sign-in.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "openMobileSignIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "routesEnum",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "routeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RouteService",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showErrorCredentials",
                    "defaultValue": "INIT_DATA_ERRORS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelErrors",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "changeOpenMenuMobile",
                    "args": [
                        {
                            "name": "actionClicked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionClicked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickopenMobileSignIn",
                    "args": [
                        {
                            "name": "openSignIn",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "openSignIn",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initiForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loginWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openQrSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { INIT_DATA_ERRORS } from './../../../../shared/enum/errors/errors.enum';\nimport { Component, OnInit } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { ReplaySubject } from 'rxjs';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { takeUntil } from 'rxjs/operators';\nimport { AddControlApp } from 'src/app/state-management/controls/copntrols-app.action';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { SignInService } from 'src/app/core/services/sign-in/sign-in.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { StateManagementFuncService } from 'src/app/shared/functions/state-management/state-management-func.service';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginQrCodeComponent } from 'src/app/shared/components/dialogs/login-qr-code/login-qr-code.component';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { ModelErrors } from 'src/app/shared/model/errors/errors.model';\nimport { IUserData } from 'src/app/state-management/user-data/user-data.state';\nimport { UserProfileService } from 'src/app/core/services/user-profile/user-profile.service';\nimport { GoogleLoginProvider, SocialAuthService } from 'angularx-social-login';\nimport { ISignInGoogle } from 'src/app/shared/model/others-sign-in/sign-in.model';\nimport { LoginGoogleService } from 'src/app/core/services/others-sign-in/login-google/login-google.service';\nimport { VerifyStageRegisterDataService } from 'src/app/shared/functions/verify-stage-register-data/verify-stage-register-data.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  openMobileSignIn = false;\n  loading = false;\n\n  dataTexts;\n  routesEnum = EnumRoutesApplication;\n\n  formGroup: FormGroup;\n\n  showErrorCredentials: ModelErrors = INIT_DATA_ERRORS;\n\n  destroy$ = new ReplaySubject();\n  constructor(\n    public routeService: RouteService,\n    protected state: State<IAppState>,\n    protected store: Store<IAppState>,\n    private translateService: TranslateService,\n    private signInService: SignInService,\n    private formBuilder: FormBuilder,\n    private stateManagementFuncServices: StateManagementFuncService,\n    private dialogsService: DialogsService,\n    private userProfileService: UserProfileService,\n    private socialAuthService: SocialAuthService,\n    private loginGoogleService: LoginGoogleService,\n    private verifyStageRegisterDataService: VerifyStageRegisterDataService,\n\n  ) {\n    this.store.select('controlsApp')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((controlsApp: any) => {\n        this.changeOpenMenuMobile(controlsApp.openSingIn);\n      });\n  }\n\n  ngOnInit(): void {\n    this.dataTexts = this.translateService?.textTranslate;\n    this.initiForm();\n  }\n  changeOpenMenuMobile(actionClicked: boolean): void {\n    this.openMobileSignIn = actionClicked;\n  }\n  clickopenMobileSignIn(openSignIn: boolean): void {\n    this.store.dispatch(new AddControlApp({ openSingIn: openSignIn }));\n  }\n  navigateTo(route): void {\n    this.routeService.navigateToURL(route);\n  }\n  openQrSignIn() {\n    this.dialogsService.openQrCodeSignIn();\n  }\n  async signIn() {\n    if (this.formGroup.valid) {\n      this.loading = true;\n      const signInData: IUserData.RootObject = await this.signInService.post(this.formGroup.value).toPromise();\n      if (signInData?.status) {\n        const userProfile: IUserData.RootObject = await this.userProfileService.get(signInData.data.id).toPromise();\n        this.stateManagementFuncServices.funcAddAllDataUser({access_token: signInData.access_token, ...userProfile});\n        this.verifyStageRegisterDataService.redirectRouteWithDataRegistered();\n      } else {\n        this.showErrorCredentials\n        = new ModelErrors(\n          !signInData.status,\n           this.dataTexts.errors.credentials\n        );\n      }\n      this.loading = false;\n    }\n  }\n\n  private initiForm() {\n    this.formGroup = this.formBuilder.group({\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.email\n        ]\n      ],\n      password: [\n        '',\n        [\n          Validators.required,\n        ]\n      ]\n    })\n  }\nasync loginWithGoogle() {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\n    .then(async (res) => {\n      console.log(res);\n      const dataToLoginGoogle = new ISignInGoogle(\n        res.email,\n        res.response.idpId,\n        res.response.id_token\n      );\n      const userData = await this.loginGoogleService.post(dataToLoginGoogle).toPromise();\n      this.stateManagementFuncServices.funcAddDataRegister(userData.data);\n      this.verifyStageRegisterDataService.redirectRouteWithDataRegistered();\n    });\n  }\n  openTerms() {\n    this.dialogsService.openTerms();\n  }\n  openPrivacy() {\n    this.dialogsService.openPrivacy();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_colors';\n@import '_buttons';\n@import '_breakpoints';\n@import '_sizes';\n@import '_mixins';\n.content-sign-in {\n  .content-header-sign-in {\n    display: flex;\n    justify-content: space-between;\n    .title-sign-return {\n      display: flex;\n      flex-direction: column;\n      gap: 30px;\n    }\n    mat-icon {\n      background-color: $gray-soft;\n      width: 35px;\n      height: 35px;\n      border-radius: $s-100per;\n      @include min-tablet {\n        display: none;\n      }\n    }\n    .return-first-pg-mobile {\n      @include min-tablet {\n        display: none;\n      }\n    }\n  }\n  #sign-in {\n    display: flex;\n    width: $s-100per;\n    flex-direction: column;\n    margin-top: $s-20px;\n  }\n}\n.container-buttons- {\n  &mobile {\n    display: flex;\n    flex-direction: column;\n    gap: $s-10px;\n    @include min-tablet {\n      display: none;\n    }\n  }\n  &others {\n    display: flex;\n    flex-direction: column;\n    gap: $s-10px;\n    @include min-tablet {\n      flex-direction: row;\n    }\n  }\n}\n#btn-qrcode {\n  display: none;\n  @include min-tablet {\n    display: flex;\n  }\n}\n.others-logins {\n  text-align: center;\n}\n.infos-about-app {\n  text-align: center;\n}\n\n",
                    "styleUrl": "./sign-in.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "signInService",
                        "type": "SignInService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stateManagementFuncServices",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "socialAuthService",
                        "type": "SocialAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginGoogleService",
                        "type": "LoginGoogleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "signInService",
                        "type": "SignInService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stateManagementFuncServices",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "socialAuthService",
                        "type": "SocialAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginGoogleService",
                        "type": "LoginGoogleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "verifyStageRegisterDataService",
                        "type": "VerifyStageRegisterDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-sign-in\" class=\"container-default-cards-initial-page\">\n  <section class=\"content-sign-in content-deafult-cards-initial-page\" [class.content-deafult-cards-initial-page-mobile]=\"openMobileSignIn\">\n    <div class=\"content-header-sign-in\">\n      <div class=\"title-sign-return\">\n        <mat-icon class=\"cursor-pointer\" svgIcon=\"navigate_before\" (click)=\"clickopenMobileSignIn(false)\"></mat-icon>\n        <a class=\"color-blue-dark font-booster-next-bold f-size-24\" >{{dataTexts.login}}</a>\n      </div>\n      <div>\n        <a class=\"color-magenta-soft cursor-pointer\" (click)=\"navigateTo(routesEnum.REMEMBER)\">{{dataTexts.signin.rememberPassword}}</a>\n      </div>\n    </div>\n\n    <form [formGroup]=\"formGroup\" id=\"sign-in\" class=\"example-form\">\n      <div class=\"text error center\" >\n        <p *ngIf=\"showErrorCredentials.showError\">\n          {{showErrorCredentials.menssage}}\n        </p>\n      </div>\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>E-mail</mat-label>\n        <input\n          formControlName=\"email\"\n          matInput\n          [placeholder]=\"dataTexts.placeholders.email\"\n          type=\"email\"\n          >\n          <mat-error *ngIf=\"formGroup.controls.email.hasError('required')\">\n            {{dataTexts.inputsErrors.requireds.inputRequired}}\n          </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"example-full-width mb-15px\" appearance=\"fill\">\n        <mat-label>{{dataTexts.signin.password}}</mat-label>\n        <input\n          formControlName=\"password\"\n          matInput\n          [placeholder]=\"dataTexts.placeholders.password\"\n          type=\"password\">\n          <mat-error *ngIf=\"formGroup.controls.password.hasError('required')\">\n            {{dataTexts.inputsErrors.requireds.inputRequired}}\n          </mat-error>\n      </mat-form-field>\n      <button\n        class=\"button primary mb-15px\"\n        (click)=\"signIn()\">\n        {{dataTexts.buttonsSignin.btnContinue}}\n      </button>\n    </form>\n    <button class=\"button third\" (click)=\"navigateTo(routesEnum.PRE_REGISTER)\">\n      {{dataTexts.buttonsSignin.btnRegister}}\n    </button>\n    <div class=\"others-logins\">\n      <p class=\"color-blue-dark mtb-15px\">{{dataTexts.or}}</p>\n      <div class=\"container-buttons-others\">\n        <div class=\"button icon-text\" id=\"btn-qrcode\" (click)=\"openQrSignIn()\">\n          <span>{{dataTexts.buttonsSignin.btnQrCode}}</span>\n          <mat-icon svgIcon=\"icon_qr_code\" class=\"size-18\"></mat-icon>\n        </div>\n        <!-- <div class=\"button icon-text\" (click)=\"loginWithGoogle()\">\n          <mat-icon svgIcon=\"logo_google\" class=\"size-18\"></mat-icon>\n          <span>{{dataTexts.buttonsSignin.btnGoogle}}</span>\n        </div> -->\n      </div>\n    </div>\n    <p class=\"infos-about-app color-blue-dark mt-15px\">\n      {{dataTexts.txtPrivacyAndTerms}}\n      <span\n        class=\"font-booster-next-bold cursor-pointer\"\n        (click)=\"openPrivacy()\">\n        {{dataTexts.policyPrivacy}}\n      </span>\n      {{dataTexts.and}}\n      <span\n        class=\"font-booster-next-bold cursor-pointer\"\n        (click)=\"openTerms()\">\n        {{dataTexts.termsOfUse}}\n      </span>.\n    </p>\n  </section>\n  <div class=\"container-buttons-mobile\">\n    <button class=\"button primary\" (click)=\"clickopenMobileSignIn(false); navigateTo(routesEnum.PRE_REGISTER)\">\n      {{dataTexts.signin.register}}\n    </button>\n    <button class=\"button secondary\" (click)=\"clickopenMobileSignIn(true)\">\n      {{dataTexts.signin.alreadyAccount}}\n    </button>\n  </div>\n</div>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n\n"
        },
        {
            "name": "UseOfTermsComponent",
            "id": "component-UseOfTermsComponent-3e7a9d106c684177670e5fddef3244c9bc75f0cf44a1b4cf7e90f58297ab6beee72ec7d2e0983e625839c7c9d83b2a8153bac267bbdfa37b785815b07fe81842",
            "file": "src/app/shared/components/dialogs/use-of-terms/use-of-terms.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-use-of-terms",
            "styleUrls": [
                "./use-of-terms.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./use-of-terms.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getTermsOfUsePt",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { TermsOfUseServiceEn, TermsOfUseServicePt } from 'src/app/core/services/legal-policy/terms-of-user/terms-of-use.service';\nimport { EnumLanguages } from 'src/app/shared/enum/languages/languages.enum';\n\n@Component({\n  selector: 'app-use-of-terms',\n  templateUrl: './use-of-terms.component.html',\n  styleUrls: ['./use-of-terms.component.scss']\n})\nexport class UseOfTermsComponent implements OnInit {\n  loading = false;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private translateService: TranslateService,\n    private matDialogRef: MatDialogRef<UseOfTermsComponent>,\n    private termsOfUseServicePt: TermsOfUseServicePt,\n    private termsOfUseServiceEn: TermsOfUseServiceEn,\n\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getTerms();\n  }\n  closeModal() {\n    this.matDialogRef.close();\n  }\n  async getTerms() {\n    this.loading = true;\n    let termsResponse;\n    if(this.translateService.dataFormatation === EnumLanguages.US) {\n      termsResponse = await this.termsOfUseServiceEn.get().toPromise();\n      if(termsResponse?.data?.value !== \"\") {\n        this.data = termsResponse.data.value\n        this.loading = false;\n        return termsResponse.data.value;\n      } else {\n        this.getTermsOfUsePt();\n      }\n    }\n    this.getTermsOfUsePt();\n  }\n\n  async getTermsOfUsePt() {\n    let termsResponse;\n    termsResponse = await this.termsOfUseServicePt.get().toPromise();\n    this.data = termsResponse.data.value\n    this.loading = false;\n    return termsResponse.data.value;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n\n\nmain {\n  @include dp-flex-alignment(column);\n}\n",
                    "styleUrl": "./use-of-terms.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<UseOfTermsComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "termsOfUseServicePt",
                        "type": "TermsOfUseServicePt",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "termsOfUseServiceEn",
                        "type": "TermsOfUseServiceEn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<UseOfTermsComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "termsOfUseServicePt",
                        "type": "TermsOfUseServicePt",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "termsOfUseServiceEn",
                        "type": "TermsOfUseServiceEn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main >\n  <div class=\"container-close\">\n    <mat-icon class=\"mat-18 cursor-pointer\" (click)=\"closeModal()\">\n      close\n    </mat-icon>\n  </div>\n  <div class=\"container-data-legal-policy\" [innerHTML]=\"data\">\n\n  </div>\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\n\n</main>\n<!-- <app-principal-loading *ngIf=\"loading\"></app-principal-loading> -->\n"
        },
        {
            "name": "UserConfigurationsComponent",
            "id": "component-UserConfigurationsComponent-71d2aa7a5b51fc596254191cde7a4b2e840b6fe3bde38b1fe19a350bdf08a0c16f5f4b4ac1fc51c2aa27963be77d1020e3842a7860e8bd19e3c56d8bf72c1ed7",
            "file": "src/app/pages/user-configurations/user-configurations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-configurations",
            "styleUrls": [
                "./user-configurations.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-configurations.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "enumRoutes",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "lastUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "changePassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "devoteePlus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "return",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "viewMyProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { UserProfileService } from './../../core/services/user-profile/user-profile.service';\nimport { Component, OnInit } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { RouteService } from 'src/app/shared/functions/routes/route.service';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { StateManagementFuncService } from 'src/app/shared/functions/state-management/state-management-func.service';\nimport { SnackBarService } from 'src/app/core/services/snack-bar/snack-bar.service';\nimport { ChangePasswordService } from 'src/app/core/services/change-password/change-password.service';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil, filter, pairwise } from 'rxjs/operators';\nimport { ModelChangePassword } from 'src/app/shared/model/change-password/change-password.model';\nimport { NavigationEnd, NavigationStart, Router, RoutesRecognized } from '@angular/router';\n\n@Component({\n  selector: 'app-user-configurations',\n  templateUrl: './user-configurations.component.html',\n  styleUrls: ['./user-configurations.component.scss']\n})\nexport class UserConfigurationsComponent implements OnInit {\n  dataTexts;\n  enumRoutes = EnumRoutesApplication;\n\n  loading = false;\n  lastUrl: string;\n  destroy$ = new ReplaySubject();\n  constructor(\n    protected state: State<IAppState>,\n    protected store: Store<IAppState>,\n    private translateService: TranslateService,\n    private dialogService: DialogsService,\n    private userProfileService: UserProfileService,\n    private routeService: RouteService,\n    private stateManagementFuncService: StateManagementFuncService,\n    private snackBarService: SnackBarService,\n    private router: Router,\n  ) {\n    // this.router.events\n    // .pipe(filter(event => event instanceof NavigationStart))\n    // .subscribe((event: NavigationStart) => {\n    //   this.lastUrl = event.url\n    // });\n   }\n\n  ngOnInit() {\n    this.dataTexts = this.translateService?.textTranslate;\n  }\n  viewMyProfile() {\n    const userData = this.state.getValue().userData.data;\n    this.dialogService\n      .openProfile(userData)\n      .afterClosed()\n      .subscribe(async res => {\n        if(res === 'saved') {\n          this.loading = true;\n          const data  = await this.userProfileService.get(userData.id).toPromise();\n          this.stateManagementFuncService.funcAddAllDataUser(data);\n          this.viewMyProfile();\n          this.loading = false;\n          this.snackBarService.openSnackbarSuccess(\n            this.dataTexts.snacksBars.successSavedUserData.mensage,\n            this.dataTexts.snacksBars.successSavedUserData.button,\n          )\n        }\n      });\n  }\n  navigateTo(route: string) {\n    this.routeService.navigateToURL(route)\n  }\n  logout() {\n    localStorage.clear();\n    window.location.href = this.enumRoutes.LOGIN;\n  }\n  changePassword() {\n    this.dialogService\n      .openChangePassword()\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((closed: ModelChangePassword) => {\n\n      })\n  }\n  devoteePlus() {\n    this.dialogService\n      .openDevoteePlus()\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((closed: ModelChangePassword) => {\n\n      })\n  }\n  return() {\n    this.navigateTo(EnumRoutesApplication.MATCHS);\n\n  //  this.lastUrl !== EnumRoutesApplication.SETTINGS ?\n  //     this.navigateTo(EnumRoutesApplication.MATCHS):\n  //     this.navigateTo(this.lastUrl);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n:host {\n  width: 100%;\n  height: 100%;\n}\n#container-user-settings {\n  .container-cards-settings {\n    display: grid;\n    grid-row-gap: 1em;\n    margin-top: 1.4rem;\n    grid-column-gap: 20px;\n    justify-content: space-between;\n    grid-template-columns: 1fr;\n    @media screen and(min-width: $epecific-mobile-configurations) {\n      grid-template-columns: 1fr 1fr;\n\n    }\n    @include min-tablet {\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n    .card-settings{\n      cursor: pointer;\n      display: grid;\n      justify-content: center;\n      align-items: center;\n      justify-items: center;\n      color: $blue-dark;\n      border-radius: 10px;\n      min-height: 150px;\n      padding: 40px;\n      box-sizing: border-box;\n      border: 1px solid transparent;\n\n      &:hover{\n        border: 1px solid $magenta-soft;\n        background-color: $blue-soft;\n        transition: 0.2s;\n      }\n      mat-icon{\n        display: flex;\n        color: $magenta-soft;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 25px;\n        font-size: 50px;\n        width: 100%;\n        height: 100%;\n        max-width: 50px;\n      }\n      mat-card-title{\n        font-size: 20px;\n        text-align: center;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./user-configurations.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routeService",
                        "type": "RouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackBarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"container-user-settings\" class=\"container-default-cards-register\">\n  <main>\n    <mat-card class=\"container-title-register\">\n      <div class=\"container-title-register cursor-pointer\" (click)=\"return()\">\n        <mat-icon class=\"mat-18 color-magenta-soft\">arrow_back_ios</mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.headerYourProfile}}</mat-card-title>\n      </div>\n\n    </mat-card>\n    <section class=\"container-cards-settings\">\n      <mat-card class=\"card-settings\" (click)=\"viewMyProfile()\">\n        <mat-icon svgIcon=\"account_circle\"></mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.features.myProfile}}</mat-card-title>\n      </mat-card>\n\n      <mat-card class=\"card-settings\" (click)=\"navigateTo(enumRoutes.FILTERS)\">\n        <mat-icon svgIcon=\"interests\"></mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.features.preferences}}</mat-card-title>\n      </mat-card>\n      <mat-card class=\"card-settings\"  (click)=\"changePassword()\">\n        <mat-icon svgIcon=\"change_password\"></mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.features.changePassword}}</mat-card-title>\n      </mat-card>\n      <mat-card class=\"card-settings\" *ngIf=\"false\">\n        <mat-icon>delete</mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.features.deleteAccount}}</mat-card-title>\n      </mat-card>\n      <mat-card class=\"card-settings\" (click)=\"logout()\">\n        <mat-icon>logout</mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.features.logout}}</mat-card-title>\n      </mat-card>\n      <mat-card class=\"card-settings\" (click)=\"devoteePlus()\">\n        <mat-icon>add</mat-icon>\n        <mat-card-title>Devotee <span class=\"color-magenta-soft\">+</span></mat-card-title>\n      </mat-card>\n      <mat-card class=\"card-settings\" >\n        <mat-icon>new_releases</mat-icon>\n        <mat-card-title>{{dataTexts.userConfigurations.features.workFeatures}}</mat-card-title>\n      </mat-card>\n    </section>\n  </main>\n</div>\n<app-principal-loading *ngIf=\"loading\"></app-principal-loading>\n"
        },
        {
            "name": "UserMatchsComponent",
            "id": "component-UserMatchsComponent-04a106fe02878b8feb579439e01af1fb70967fdc0b3635b716eebea74636e42efcf7a4858387cddf894dd54a1a280ab19a63d92d9395221acac20aa950340274",
            "file": "src/app/pages/user-matchs/user-matchs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-matchs",
            "styleUrls": [
                "./user-matchs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-matchs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "allSugestionMatchs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "countMatchsSlided",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "currentX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "currentY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "dataTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "deslikePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new ReplaySubject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "disliked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "enumLikeDislikeAction",
                    "defaultValue": "EnumLikeDislikeActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "enumRoutesApplication",
                    "defaultValue": "EnumRoutesApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "initialX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "initialY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "liked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "likePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "matchUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "showAds",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "xOffset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "yOffset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "addClassAnimation",
                    "args": [
                        {
                            "name": "likeOrDeslike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "likeOrDeslike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buttonDisabled",
                    "args": [
                        {
                            "name": "addOrRemove",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "addOrRemove",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeUserImageInBackground",
                    "args": [
                        {
                            "name": "profilePicture",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "profilePicture",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickAddMoreMatchAndTransition",
                    "args": [
                        {
                            "name": "likeOrDeslike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "likeOrDeslike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "countShowAdsAndExecLikeDislike",
                    "args": [
                        {
                            "name": "likeOrDislike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "likeOrDislike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drag",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dragCard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dragEnd",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dragExecDislikeAddMore",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dragExecLikeAddMore",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dragStart",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "execDragSplitSugestions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getDistance",
                    "args": [
                        {
                            "name": "distanceFull",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "distanceFull",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSugestionMatchs",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "likeUnlikeMatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetCountEnableButtons",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeCountsAds",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "transformAge",
                    "args": [
                        {
                            "name": "birthdateUser",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "birthdateUser",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transitionOptionMatch",
                    "args": [
                        {
                            "name": "likeOrDeslike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "likeOrDeslike",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "viewProfile",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { GetSugestionMatchsService } from 'src/app/core/services/get-sugestion-matchs/get-sugestion-matchs.service';\nimport { LikeDislikeService } from 'src/app/core/services/like-dislike/like-dislike.service';\nimport { TranslateService } from 'src/app/core/services/translate/translate.service';\nimport { EnumLikeDislikeActions } from 'src/app/shared/enum/like-dislike/likes-dislike.enum';\nimport { EnumRoutesApplication } from 'src/app/shared/enum/routes.enum';\nimport { DialogsService } from 'src/app/shared/functions/dialogs/dialogs.service';\nimport { StateManagementFuncService } from 'src/app/shared/functions/state-management/state-management-func.service';\nimport { ModelLikeDislikeRequest } from 'src/app/shared/model/request/like-dislike-request/like-dislike.model';\nimport { IAppState } from 'src/app/state-management/app.model';\nimport { IControlsApp } from 'src/app/state-management/controls/controls-app.state';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-user-matchs',\n  templateUrl: './user-matchs.component.html',\n  styleUrls: ['./user-matchs.component.scss']\n})\nexport class UserMatchsComponent implements OnInit, AfterViewInit {\n  enumLikeDislikeAction = EnumLikeDislikeActions;\n  enumRoutesApplication = EnumRoutesApplication\n  dataTexts;\n\n  active = false;\n  loading = false;\n  showAds = false;\n  liked = false;\n  disliked = false;\n\n  matchUser;\n  allSugestionMatchs;\n  currentX;\n  currentY;\n  initialX;\n  initialY;\n  likePosition;\n  deslikePosition;\n  xOffset: number = 0;\n  yOffset: number = 0;\n\n  countMatchsSlided = 0;\n\n  destroy$ = new ReplaySubject();\n  constructor(\n    protected state: State<IAppState>,\n    protected store: Store,\n    private likeDislikeService: LikeDislikeService,\n    private getSugestionMatchsService: GetSugestionMatchsService,\n    private translateService: TranslateService,\n    private dialogsService: DialogsService,\n    private stateManagementFuncService: StateManagementFuncService,\n  ) {\n\n\n  }\n\n  ngOnInit() {\n    this.getSugestionMatchs();\n    this.execDragSplitSugestions();\n    this.subscribeCountsAds();\n\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n    try {\n        (window[\"adsbygoogle\"] = window[\"adsbygoogle\"] || []).push({});\n      } catch (e) {\n        console.error(e);\n      }\n    }, 2000);\n  }\n  subscribeCountsAds() {\n    this.store\n    .select((state: IAppState) => state.controlsApp.countShowAds)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(state => {\n      console.log(state);\n\n      if (state === 10) {\n        this.buttonDisabled('add')\n        this.showAds = true;\n\n      } else {\n        this.showAds = false;\n      }\n    })\n  }\n  async getSugestionMatchs() {\n    this.loading = true;\n    this.dataTexts = this.translateService?.textTranslate;\n    const sugestionMatchs = await this.getSugestionMatchsService.get().toPromise();\n    this.matchUser = sugestionMatchs?.data?.slice(0, 3);\n    this.allSugestionMatchs = sugestionMatchs.data;\n    this.loading = false;\n    this.dragCard();\n\n  }\n  dragCard(): void {\n    const container = document.querySelector('#container-drag');\n    container?.addEventListener('touchstart', this.dragStart, false);\n    container?.addEventListener('touchend', this.dragEnd, false);\n    container?.addEventListener('touchmove', this.drag, false);\n\n    container?.addEventListener('mousedown', this.dragStart, false);\n    container?.addEventListener('mouseup', this.dragEnd, false);\n    container?.addEventListener('mousemove', this.drag, false);\n    // elm.style.transform = `translate3d(${pos1}px, ${pos2}px, 20px)`;\n  }\n  async likeUnlikeMatch( action: string) {\n    const data = new ModelLikeDislikeRequest(\n      this.matchUser[0]?.id,\n      action\n    )\n    const a = await this.likeDislikeService.post(data).toPromise();\n    const sugestionMatchs = await this.getSugestionMatchsService.get().toPromise();\n    this.matchUser = sugestionMatchs?.data?.slice(0, 3);\n  }\n  async execDragSplitSugestions() {\n    if (document.querySelectorAll('.ads')[0] === undefined) {\n      const dragItemInterval = setInterval(() => {\n        const dragItem: any = document.querySelectorAll('.sugestion-match')[0];\n        const dragDataPosition: any = dragItem?.getAttribute('data-position');\n        dragDataPosition === '150' ? this.countShowAdsAndExecLikeDislike(this.enumLikeDislikeAction.LIKE) : dragItem?.setAttribute('data-position', 0 );\n        dragDataPosition === '-150' ? this.countShowAdsAndExecLikeDislike(this.enumLikeDislikeAction.UNLIKE) :  dragItem?.setAttribute('data-position', 0 );\n      }, 1000);\n      setTimeout(() => {\n        clearInterval(dragItemInterval);\n      }, 1500);\n    } else {\n      const dragItem: any = document.querySelectorAll('.sugestion-match')[0];\n      const dragDataPosition: any = dragItem?.getAttribute('data-position');\n      dragDataPosition === '150' ? this.resetCountEnableButtons() : dragItem?.setAttribute('data-position', 0 );\n      dragDataPosition === '-150' ? this.resetCountEnableButtons() :  dragItem?.setAttribute('data-position', 0 );\n    }\n  }\n  resetCountEnableButtons() {\n    this.buttonDisabled('remove');\n    this.stateManagementFuncService.resetCountShowAdsense();\n  }\n  countShowAdsAndExecLikeDislike(likeOrDislike) {\n    this.likeUnlikeMatch(likeOrDislike);\n    this.stateManagementFuncService.incrementCountShowAdsense();\n  }\n  dragExecLikeAddMore(): any {\n    this.likeUnlikeMatch(this.enumLikeDislikeAction.LIKE);\n  }\n  dragExecDislikeAddMore(): any {\n    this.likeUnlikeMatch(this.enumLikeDislikeAction.UNLIKE);\n  }\n  drag(e): void {\n    if (this.active) {\n      const dragItem: any = document.querySelectorAll('.sugestion-match')[0];\n      const buttons = document.querySelectorAll('.container-buttons-action');\n      e.preventDefault();\n      if (e.type === 'touchmove') {\n        this.currentX = e.touches[0].clientX - this.initialX;\n        this.currentY = e.touches[0].clientY - this.initialY;\n      } else {\n        this.currentX = e.clientX - this.initialX;\n        this.currentY = e.clientY - this.initialY;\n      }\n\n      if (this.currentX >= 140 && this.currentX <= 150){\n        dragItem.setAttribute('data-position', 150 );\n        dragItem.classList.add('like-animation');\n        buttons.forEach((value) => {value.setAttribute('disabled', 'true'); });\n      }\n      if (this.currentX <= -150 && this.currentX >= -160) {\n        dragItem.setAttribute('data-position', -150 );\n        dragItem.classList.add('dislike-animation');\n        buttons.forEach((value) => {value.removeAttribute('disabled'); });\n\n      }\n      this.xOffset = this.currentX;\n      this.yOffset = this.currentY;\n      dragItem.style.transform = `rotate(${this.currentX / 10}deg) translate3d(${this.currentX}px, ${ this.currentY}px, 0)`;\n\n    }\n  }\n  dragStart(e): void {\n    const dragItem: any = document.querySelectorAll('.sugestion-match')[0];\n    const imgDragItem: any = document.querySelectorAll('.container-sugestion-perfil')[0];\n    const nameProfileDrag: any = document.querySelectorAll('.profile-img')[0];\n    if (e.type === 'touchstart') {\n      this.initialX = e.touches[0].clientX;\n      this.initialY = e.touches[0].clientY;\n    } else {\n      this.initialX = e.clientX;\n      this.initialY = e.clientY;\n    }\n    if (e.target === dragItem || e.target === imgDragItem || e.target === nameProfileDrag ) {\n      this.active = true;\n    }\n  }\n  dragEnd(e): any {\n    const dragItem: any = document.querySelectorAll('.sugestion-match')[0];\n    this.initialX =  this.initialX - this.currentX;\n    this.initialY =  this.initialY - this.currentY;\n    dragItem.style.transform = `translate3d(0px, 0px, 0)`;\n    this.active = false;\n  }\n  addClassAnimation(likeOrDeslike): void {\n    const addAnimation: any = document.querySelectorAll('.sugestion-match')[0];\n    likeOrDeslike === 'like' ?\n      addAnimation.classList.add('like-animation') :\n      addAnimation.classList.add('dislike-animation');\n  }\n  transitionOptionMatch(likeOrDeslike): Promise<boolean>{\n    return new Promise((resolve: any, reject: any) => {\n      this.addClassAnimation(likeOrDeslike);\n      this.buttonDisabled('add');\n      setInterval(() => {\n        resolve(true);\n      }, 1000);\n    });\n  }\n  buttonDisabled(addOrRemove): void {\n    const buttons = document.querySelectorAll('.container-buttons-action');\n    addOrRemove === 'add' ?\n      buttons.forEach((value) => {value.setAttribute('disabled', 'true'); }) :\n      buttons.forEach((value) => {value.removeAttribute('disabled'); });\n  }\n  clickAddMoreMatchAndTransition(likeOrDeslike): void {\n    this.transitionOptionMatch(likeOrDeslike).then((res: boolean) => {\n      if (res) {\n        likeOrDeslike === this.enumLikeDislikeAction.LIKE ? this.countShowAdsAndExecLikeDislike(this.enumLikeDislikeAction.LIKE) : '';\n        likeOrDeslike === this.enumLikeDislikeAction.UNLIKE ? this.countShowAdsAndExecLikeDislike(this.enumLikeDislikeAction.UNLIKE) : '';\n        this.buttonDisabled('remove');\n        // this.addMoreMatch();\n      }\n    });\n  }\n  changeUserImageInBackground(profilePicture): string {\n    return `background-image: url(${environment.urlImages}${profilePicture[0]?.path}); background-color: #D9D9D9;`;\n  }\n  transformAge(birthdateUser) {\n    const birthdate = birthdateUser.replace(/-/g, '')\n    const year = Number(birthdate.substr(0, 4));\n    const today = new Date();\n    const month = Number(birthdate.substr(4, 2)) - 1;\n    const day = Number(birthdate.substr(6, 2));\n    let age = today.getFullYear() - year;\n    if (today.getMonth() < month || (today.getMonth() == month && today.getDate() < day)) {\n      age--;\n    }\n    return age;\n  }\n  getDistance(distanceFull: number) {\n    return Math.trunc(distanceFull);\n  }\n  viewProfile(id) {\n    this.dialogsService.openProfile(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '_custom';\n:host {\n  background: transparent linear-gradient(180deg, $sand-soft 0%, $sand-medium 100%) 0% 0% no-repeat padding-box;;\n  height: 100%;\n}\n.ads {\n  width: 100%;\n  height: 100% !important;\n  min-height: 650px;\n  position: absolute;\n  background-color: $gray-medium-soft;\n}\n#container-user-matchs {\n  @include dp-flex-alignment(column);\n  height: 100%;\n  min-height: 100%;\n  margin: 45px auto;\n\n  @include min-tablet {\n    @include dp-flex-alignment(row, initial, center);\n\n  }\n  .container-infos {\n    @include dp-flex-alignment(row, center, flex-end);\n    gap: 15px;\n    margin: 10px;\n    max-width: 400px;\n    width: 100%;\n    .container-icon-info {\n      @include dp-flex-alignment();\n      width: 50px;\n      height: 50px;\n      border-radius: 100%;\n      cursor: pointer;\n      mat-icon {\n        color: $gray-icons-50;\n        width: 30px;\n        height: 30px;\n        font-size: 30px;\n        &.activated {\n          color: $gray-icons;\n        }\n      }\n    }\n  }\n  .sugestion-matchs {\n    width: 100%;\n    height: 100%;\n    min-height: 650px;\n    position: relative;\n    @include dp-flex-alignment(column);\n  }\n  .container-havent-match {\n    @include dp-flex-alignment(column);\n\n    .icon-havent-match {\n      font-size: 40px;\n      width: 40px;\n      height: 40px;\n    }\n    .not-found-message {\n      text-align: center;\n    }\n  }\n  .container-sugestion-matchs {\n    width: 100%;\n    height: 100%;\n    @include dp-flex-alignment();\n    .container-match-and-action {\n      width: 100%;\n      height: 100%;\n\n\n      position: relative;\n      @include dp-flex-alignment(column);\n      overflow: hidden;\n      border-radius: 10px;\n      .action-active {\n        position: absolute;\n        bottom: 10px;\n        z-index: 6;\n        gap: 10px;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n        @include dp-flex-alignment();\n        max-width: 400px;\n\n\n      }\n    }\n    .container-cards-matchs {\n      @include dp-flex-alignment(column, initial, flex-end);\n      background-repeat: no-repeat;\n      background-attachment: inherit;\n      background-position: center;\n      background-size: cover;\n      height: 100%;\n      width: 100%;\n      border-radius: 10px;\n      min-height: 560px;\n      max-width: 400px;\n\n      .container-gradient-see-infos {\n        background-image: linear-gradient($black-01, $black-80);\n        @include dp-flex-alignment(column, initial, flex-end);\n        gap: 10px;\n        padding: 20px 10px;\n        border-radius: 10px;\n        .container-user-info {\n          .tip-user-type {\n            @include dp-flex-alignment();\n            max-width: 80px;\n            border-radius: 30px;\n            font-size: 14px;\n            padding: 2px 0;\n          }\n        }\n        .distance-match {\n          @include dp-flex-alignment(row, center, flex-start);\n          mat-icon {\n            font-size: 20px;\n            width: 20px;\n            height: 20px;\n          }\n          p {\n            font-size: 14px;\n          }\n        }\n        .container-buttons-action {\n          @include dp-flex-alignment();\n          gap: 15px;\n        }\n\n      }\n      &:nth-child(1) {\n        z-index: 5;\n        top: 0;\n        width: 100%;\n\n      }\n      &:nth-child(2) {\n        z-index: 4;\n        position: absolute;\n        // top: 20px;\n        width: 100%;\n      }\n      &:nth-child(3) {\n        position: absolute;\n        // top: 40px;\n        z-index: 3;\n        width: 100%;\n      }\n    }\n    .like-animation {\n      transform: rotate(45deg) translate3d(640px,240px,20px)!important;\n      transition: 1.5s!important;\n      background-color: #00DB92;\n    }\n\n    .dislike-animation {\n      transform: rotate(-45deg) translate3d(-640px,240px,20px)!important;\n      transition: 1.5s!important;\n      background-color: red;\n    }\n  }\n  .display-none {\n    display: none;\n  }\n}\n",
                    "styleUrl": "./user-matchs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "likeDislikeService",
                        "type": "LikeDislikeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getSugestionMatchsService",
                        "type": "GetSugestionMatchsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "likeDislikeService",
                        "type": "LikeDislikeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getSugestionMatchsService",
                        "type": "GetSugestionMatchsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogsService",
                        "type": "DialogsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stateManagementFuncService",
                        "type": "StateManagementFuncService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div id=\"container-user-matchs\" class=\"container-default\">\n\n  <main class=\"sugestion-matchs\">\n    <section class=\"container-infos\" *ngIf=\"!loading\">\n      <div class=\"container-icon-info\" [routerLink]=\"enumRoutesApplication.FILTERS\">\n        <mat-icon>tune</mat-icon>\n      </div>\n    </section>\n\n    <div class=\"container-loading\" *ngIf=\"loading\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"matchUser?.length === 0\" class=\"container-havent-match\">\n      <mat-icon class=\"icon-havent-match color-blue-dark\">account_box</mat-icon>\n      <div class=\"not-found-message\">\n        <p class=\"font-booster-next-bold color-blue-dark\">{{dataTexts.sugestionMatchs.noProfileFound.title}}</p>\n        <p class=\"font-booster-next-regular color-blue-dark\">{{dataTexts.sugestionMatchs.noProfileFound.text}}</p>\n      </div>\n    </div>\n    <div [class.display-none]=\"matchUser?.length === 0 || loading\" class=\"container-sugestion-matchs\">\n      <div class=\"container-match-and-action\"id=\"container-drag\">\n        <div *ngIf=\"showAds\" class=\"ads container-cards-matchs sugestion-match cursor-grab\">\n          <ins\n            class=\"adsbygoogle\"\n            style=\"display:block\"\n            data-ad-client=\"ca-pub-4813221246235159\"\n            data-ad-slot=\"3610382183\"\n            data-ad-format=\"auto\"\n            data-full-width-responsive=\"true\"\n            >\n          </ins>\n        </div>\n        <section\n          class=\"container-cards-matchs sugestion-match cursor-grab\"\n          [style]=\"changeUserImageInBackground(match.profile_picture)\"\n          draggable=\"true\"\n          data-position=\"0\"\n          *ngFor=\"let match of matchUser\"\n          data-position=\"0\"\n          (mouseenter)=\"execDragSplitSugestions()\"\n          >\n          <div class=\"nd\" ></div>\n          <div class=\"container-gradient-see-infos cursor-pointer\">\n            <div class=\"container-user-info\" (click)=\"viewProfile(match)\">\n              <section class=\"tip-user-type font-booster-next-bold bg-color-blue-dark color-white\">\n                {{match?.account_type}}\n              </section>\n              <section class=\"container-user-name-age font-booster-next-bold color-white\">\n                {{match?.name}}, {{transformAge(match.birthdate)}}\n              </section>\n            </div>\n            <div class=\"distance-match\">\n              <mat-icon class=\"color-white\"> location_on</mat-icon>\n              <p class=\"color-white \">{{ getDistance(match.distance)}} km from you</p>\n            </div>\n            <div class=\"container-buttons-action\" style=\"visibility: hidden;\">\n              <button\n              (click)=\"this.countShowAdsAndExecLikeDislike(this.enumLikeDislikeAction.UNLIKE)\"\n                class=\"button like-dislike dislike\"\n                >\n                <mat-icon>close</mat-icon>\n              </button>\n              <button\n              (click)=\"this.countShowAdsAndExecLikeDislike(this.enumLikeDislikeAction.LIKE)\"\n                class=\"button like-dislike like\"\n                >\n                <mat-icon svgIcon=\"heart\"></mat-icon>\n              </button>\n            </div>\n          </div>\n        </section>\n        <section [class.display-none]=\"!showAds\" class=\"container-buttons-action action-active\">\n          <button\n          (click)=\"clickAddMoreMatchAndTransition(enumLikeDislikeAction.UNLIKE)\"\n            class=\"button like-dislike dislike\"\n            [class.disliked]=\"disliked\"\n            >\n            <mat-icon>close</mat-icon>\n          </button>\n          <button\n          (click)=\"clickAddMoreMatchAndTransition(enumLikeDislikeAction.LIKE)\"\n            class=\"button like-dislike like\"\n            [class.liked]=\"liked\"\n            >\n            <mat-icon svgIcon=\"heart\"></mat-icon>\n          </button>\n        </section>\n\n      </div>\n\n\n    </div>\n\n\n  </main>\n\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-09a18d30342f6b01f44a98e9c923ed57036a43dae17c857794f235dc865538e7ba54ede85f34db5a63e83ba3104df0edc124c800b835ffcbce46937817ea5092",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { rootReducer } from \"./state-management/root.reducer\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { IConfig, NgxMaskModule } from \"ngx-mask\";\nimport { AuthGuardService } from \"./core/guards/auth-guard/auth.guard.service\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(rootReducer),\n    NgxMaskModule.forRoot(maskConfig),\n\n  ],\n  exports:[\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: true, //keeps the user signed in\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider('670097540184-3liid93hjkcib38idqtrnvrgfa6drm69.apps.googleusercontent.com') // your client id\n          }\n        ]\n      }\n    },\n    AuthGuardService,\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-806b5b07c7d7707872bd579be0a0370c1a6cb58f84eb0f72dad870737ca0d68d1ab0ae6d643718ff542d5b6243c938c89a06ef277dc5a945c5612730590ea13a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from './core/guards/auth-guard/auth.guard.service';\nimport { LoggedService } from './core/guards/logged/logged.guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    loadChildren: () => \"import('src/app/pages/landing-page/landing-page.module').then(m => m.LandingPageModule)\",\n    canActivate: [LoggedService]\n  },\n  {\n    path: '',\n    loadChildren: () => \"import('src/app/pages/initial-page/initial-page.module').then(m => m.InitialPageModule)\",\n    canActivate: [LoggedService]\n  },\n  {\n    path: 'rules',\n    loadChildren: () => \"import('src/app/pages/etical-rules/etical-rules.module').then(m => m.EticalRulesModule)\",\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('src/app/pages/continue-register/continue-register.module').then(m => m.ContinueRegisterModule)\",\n  },\n  {\n    path: '',\n    loadChildren: () => \"import('src/app/pages/logged/logged.module').then(m => m.LoggedModule)\",\n    canActivate: [AuthGuardService]\n  },\n  { path: '**',  redirectTo: '/', pathMatch: 'full'  },\n  { path: 'error',  redirectTo: '/',}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChatModule",
            "id": "module-ChatModule-56ea1819f1e9a026a06b02d4b4151672dd1bcc2b1390b23def5a5088c409f0bd5a6c1c8d73cbf624a40a722e908aa4886cb052206d2febdb4e364691a6df1d72",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/chat/chat.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatComponent } from './chat.component';\nimport { ChatRoutingModule } from './chat-rounting.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    ChatComponent,\n  ],\n  imports: [\n    CommonModule,\n    ChatRoutingModule,\n    SharedModule,\n  ]\n})\nexport class ChatModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChatComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ChatRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChatRoutingModule",
            "id": "module-ChatRoutingModule-7c54f823f8e7c41bac305b7183a31e82dd1b6d5ab843b8d65b7c1e04df1adb69a46f3959fbb9e0f570e80301d240a5401d5466328051989b6096601b7139b7cd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/chat/chat-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChatRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ContinueRegisterModule",
            "id": "module-ContinueRegisterModule-64aec673b27c9b46a4725bd3c18c050401920f0e0b616214484d1d658fe78b13330d8deae44cd0157d790c61bd3ea7f940b491e420300f7f15a8552df74b8ca9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/continue-register/continue-register.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContinueRegisterComponent } from './continue-register.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContinueRegisterRoutingModule } from './continue-register-rounting.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RegisterDataComponent } from './components/register-data/register-data.component';\nimport { ChangeUserTypeComponent } from './components/change-user-type/change-user-type.component';\nimport { NgxMaskModule } from 'ngx-mask';\n\n@NgModule({\n  declarations: [\n    ContinueRegisterComponent,\n    RegisterDataComponent,\n    ChangeUserTypeComponent,\n  ],\n  imports: [\n    CommonModule,\n    ContinueRegisterRoutingModule,\n    SharedModule,\n    NgxMaskModule.forChild()\n  ]\n})\nexport class ContinueRegisterModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChangeUserTypeComponent"
                        },
                        {
                            "name": "ContinueRegisterComponent"
                        },
                        {
                            "name": "RegisterDataComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ContinueRegisterRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ContinueRegisterRoutingModule",
            "id": "module-ContinueRegisterRoutingModule-2fa2a04df941d797442750beb14278d0886363d5fd319149f2a315fe2b3c1c411e490ae8645c1446e733c5b3887a459877e711dff439ffba0238c1aa4ebaeeba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/continue-register/continue-register-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRegistredCorrectService } from 'src/app/core/guards/user-registred-correct/user-registred-correct.service';\nimport { WhoAreYouRegistredCorrectService } from 'src/app/core/guards/who-are-you-registred-correct/who-are-you-registred-correct.service';\nimport { ChangeUserTypeComponent } from './components/change-user-type/change-user-type.component';\nimport { RegisterDataComponent } from './components/register-data/register-data.component';\nimport { ContinueRegisterComponent } from './continue-register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContinueRegisterComponent,\n    children: [\n      {\n        path: 'who-are-you',\n        component: ChangeUserTypeComponent,\n        canActivate: [WhoAreYouRegistredCorrectService]\n      },\n      {\n        path: 'user-data',\n        component: RegisterDataComponent,\n        canActivate: [UserRegistredCorrectService]\n\n      }\n\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContinueRegisterRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DialogsModule",
            "id": "module-DialogsModule-90cddb37ecfe96963fe824a24d03d07276842561e9f660ef2cfffceb8d43f41e1dab7b662a3f01ed71392f2a8c6732f09cdb4e357f1b5adc834e32325d9fb8dd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/components/dialogs/dialogs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SharedModule } from '../../shared.module';\nimport { LoginQrCodeComponent } from './login-qr-code/login-qr-code.component';\nimport { ActivateLocationComponent } from './activate-location/activate-location.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { EditProfilePicturesComponent } from './edit-profile-pictures/edit-profile-pictures.component';\nimport { EditAboutMeComponent } from './edit-about-me/edit-about-me.component';\nimport { UseOfTermsComponent } from './use-of-terms/use-of-terms.component';\nimport { PrivacyPolicyComponent } from './privacy-policy/privacy-policy.component';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\nimport { DevoteePlusComponent } from './devotee-plus/devotee-plus.component';\n\nconst dialogsComponent = [\n  LoginQrCodeComponent,\n  ActivateLocationComponent,\n  ProfileComponent,\n  ChangePasswordComponent,\n  EditProfilePicturesComponent,\n  EditAboutMeComponent,\n  UseOfTermsComponent,\n  PrivacyPolicyComponent,\n  DevoteePlusComponent,\n]\n\n@NgModule({\n  declarations: [\n    ...dialogsComponent,\n\n  ],\n  imports: [\n    SharedModule,\n    QRCodeModule,\n    GooglePlaceModule\n  ],\n  exports: [\n    ...dialogsComponent,\n\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class DialogsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ActivateLocationComponent"
                        },
                        {
                            "name": "ChangePasswordComponent"
                        },
                        {
                            "name": "DevoteePlusComponent"
                        },
                        {
                            "name": "EditAboutMeComponent"
                        },
                        {
                            "name": "EditProfilePicturesComponent"
                        },
                        {
                            "name": "LoginQrCodeComponent"
                        },
                        {
                            "name": "PrivacyPolicyComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "UseOfTermsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ActivateLocationComponent"
                        },
                        {
                            "name": "ChangePasswordComponent"
                        },
                        {
                            "name": "DevoteePlusComponent"
                        },
                        {
                            "name": "EditAboutMeComponent"
                        },
                        {
                            "name": "EditProfilePicturesComponent"
                        },
                        {
                            "name": "LoginQrCodeComponent"
                        },
                        {
                            "name": "PrivacyPolicyComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "UseOfTermsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EticalRulesModule",
            "id": "module-EticalRulesModule-3b738ddf74c289c2493e7b7659f39818e472523d3eceea80101cd855ce92e0220236b61eee6f1bfe61fd847f37fe5f6ee3fa1e693ba80effc3428805326aeed6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/etical-rules/etical-rules.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EticalRulesComponent } from './etical-rules.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EticalRulesComponent,\n  }\n]\n\n@NgModule({\n  declarations: [\n    EticalRulesComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n  ]\n})\nexport class EticalRulesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EticalRulesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FilterPreferencesModule",
            "id": "module-FilterPreferencesModule-d0ed80f1791fd66fe8404f38aaf1412b11a9c03730c039823aedafd6a99ef70f8894787ec9588ab15ac9eb6ed08a1ec1f241c62670cffb564deec61f89c59510",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/filter-preferences/filter-preferences.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPreferencesComponent } from './filter-preferences.component';\nimport { FilterPreferencesRoutingModule } from './filter-preferences-rounting.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    FilterPreferencesComponent,\n  ],\n  imports: [\n    CommonModule,\n    FilterPreferencesRoutingModule,\n    SharedModule,\n  ]\n})\nexport class FilterPreferencesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FilterPreferencesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FilterPreferencesRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FilterPreferencesRoutingModule",
            "id": "module-FilterPreferencesRoutingModule-e95892e0b01893feda39f9464f835859c5dd4916f2a9fb2a04915974dc4dcfeb8fb0358219de2348bb4713c981535f1019b224db749b21f9adf8ec7b94c01168",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/filter-preferences/filter-preferences-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FilterPreferencesComponent } from './filter-preferences.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilterPreferencesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilterPreferencesRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconModule",
            "id": "module-IconModule-96ebefd20022c5646274d828fb580f736d7c3df6fe02760d122544072e9e0e9208d6dced20885cc03b0b2986836b120522d27f1ad5bfa8d70c858d74da91d340",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/components/custom-icons/icon.module.ts",
            "methods": [
                {
                    "name": "setPath",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SafeResourceUrl",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\n@NgModule({\n  imports:[MatIconModule],\n  exports: [MatIconModule],\n  providers:[MatIconRegistry]})\nexport class IconModule {\n private path = '../../../../assets/images';\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer) {\n    this.matIconRegistry\n      .addSvgIcon('navigate_before', this.setPath(`${this.path}/navigate_before.svg`))\n      .addSvgIcon('logo_google', this.setPath(`${this.path}/logo-google.svg`))\n      .addSvgIcon('icon_qr_code', this.setPath(`${this.path}/qr_code.svg`))\n      .addSvgIcon('logo_raposo_shoping', this.setPath(`${this.path}/logo-raposo-shopping.svg`))\n      .addSvgIcon('check_magenta', this.setPath(`${this.path}/check.svg`))\n      .addSvgIcon('camera_add_picture', this.setPath(`${this.path}/camera-add-picture.svg`))\n      .addSvgIcon('heart', this.setPath(`${this.path}/heart.svg`))\n\n      .addSvgIcon('add_location', this.setPath(`${this.path}/add_location.svg`))\n      .addSvgIcon('change_password', this.setPath(`${this.path}/change-password.svg`))\n      .addSvgIcon('interests', this.setPath(`${this.path}/interests.svg`))\n      .addSvgIcon('account_circle', this.setPath(`${this.path}/account_circle.svg`))\n      .addSvgIcon('local_mall', this.setPath(`${this.path}/local_mall.svg`))\n      .addSvgIcon('logo_facebook', this.setPath(`${this.path}/logo-facebook.svg`))\n      .addSvgIcon('logo_instagram', this.setPath(`${this.path}/logo-instagram.svg`))\n      .addSvgIcon('logo_youtube', this.setPath(`${this.path}/logo-youtube.svg`))\n\n      ;\n\n    }\n  private setPath(url: string): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InitialPageModule",
            "id": "module-InitialPageModule-726a6a7df5f5707be7cf669759b3d1191387a7b51a2c3f182e8d6325b16bcde22eb0bcf038bdf10bf1e7bacbed69f21d9489e8eecce0ee8120e67c9900ec7103",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/initial-page.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InitialPageComponent } from './initial-page.component';\nimport { InitialPageRoutingModule } from './initial-page-rounting.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    InitialPageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [InitialPageComponent],\n  exports: [\n    InitialPageRoutingModule,\n  ]\n})\nexport class InitialPageModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InitialPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "InitialPageRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InitialPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InitialPageRoutingModule",
            "id": "module-InitialPageRoutingModule-3e4a382b49950ff0f6d8ce3d50b98fcf2952b0a913d26fa6f7f131d0a9a709a06bd00752bdb07816e241613e64f45b11dc57e88e68557dec31407795c8d7ae4d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/initial-page-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InitialPageComponent } from './initial-page.component';\n\nconst routes: Routes = [\n  {path: '',\n  component: InitialPageComponent,\n  children: [\n    {\n      path: 'login',\n      loadChildren: () => \"import('src/app/pages/initial-page/components/sign-in/sign-in.module').then(m => m.SignInModule)\"\n    },\n    {\n      path: 'recuperar',\n      loadChildren: () => \"import('src/app/pages/initial-page/components/remember-password/remember-password.module').then(m => m.RememberPasswordModule)\"\n    },\n    {\n      path: 'pre-register',\n      loadChildren: () => \"import('src/app/pages/initial-page/components/register/register.module').then(m => m.RegisterModule)\"\n    },\n  ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InitialPageRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LandingPageModule",
            "id": "module-LandingPageModule-662f2dcc3fb7cefbc3da20c5a2e6c7e714bda9c85fa1470c6b8aa30e8c70a27d4e8b179f04e35a610fb0459013a8d55aacce4c66d6e2003993b2887c62563510",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/landing-page/landing-page.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LandingPageComponent } from './landing-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingPageComponent,\n  }\n]\n\n@NgModule({\n  declarations: [\n    LandingPageComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n  ]\n})\nexport class LandingPageModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LikedMeModule",
            "id": "module-LikedMeModule-ebb0a300d4d0ab78a9bf7cf806fe4709ea81370150a8966a7405514d7c453a04cdc808087f46c01525e562627f5f83ffa77159b12395ace6e12ed469f1b4d555",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/liked-me/liked-me.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LikedMeComponent } from './liked-me.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LikedMeComponent,\n  }\n]\n\n@NgModule({\n  declarations: [\n    LikedMeComponent\n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    SharedModule,\n  ]\n})\nexport class LikedMeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LikedMeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoggedModule",
            "id": "module-LoggedModule-544cfeda49cb12423d031df5679f1c03904480a450c8b5f4d93813eda81ed9db974c2724155245b27daf57456d8e291c7f6aa58ee2817c1f26a72d2aeb7e2eef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/logged/logged.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LoggedComponent } from './logged.component';\nimport { RouterModule } from '@angular/router';\nimport { LoggedRoutingModule } from './logged-rounting.module';\n\n\n\n@NgModule({\n  declarations: [\n    LoggedComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    LoggedRoutingModule,\n  ]\n})\nexport class LoggedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoggedComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoggedRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoggedRoutingModule",
            "id": "module-LoggedRoutingModule-b1e882f35c35a8f8682098ad04fe188e5de7210c19b161521387c776451cb294765793fe1012971f8a1da03d5d17ea7588ce64bb2155638da93ff511f20f54b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/logged/logged-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { titleHeader } from './../../shared/components/header-cards-initial-page/model/header-cards.data';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoggedComponent } from './logged.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoggedComponent,\n    children: [\n      {\n        path: 'settings',\n        loadChildren: () => \"import('src/app/pages/user-configurations/user-configurations.module').then(m => m.UserConfigurationsModule)\",\n      },\n      {\n        path: 'filters',\n        loadChildren: () => \"import('src/app/pages/filter-preferences/filter-preferences.module').then(m => m.FilterPreferencesModule)\",\n      },\n      {\n        path: 'chat',\n        loadChildren: () => \"import('src/app/pages/chat/chat.module').then(m => m.ChatModule)\",\n      },\n      {\n        path: 'matchs',\n        loadChildren: () => \"import('src/app/pages/user-matchs/user-matchs.module').then(m => m.UserMatchsModule)\",\n      },\n      {\n        path: 'likes',\n        loadChildren: () => \"import('src/app/pages/liked-me/liked-me.module').then(m => m.LikedMeModule)\",\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoggedRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterModule",
            "id": "module-RegisterModule-3ca458cb7c7c9671150d38f207da3efd7a4ef199d354c2bdf7034cb43e2ec68e0900ff71bc7909ea7b0a061a6d1192c965c94f1a802600f1dc7c8d579c355760",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/components/register/register.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { RegisterRoutingModule } from './register-rounting.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    SharedModule,\n  ]\n})\nexport class RegisterModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RegisterRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterRoutingModule",
            "id": "module-RegisterRoutingModule-90ca53559d19b351fc5aebd06c13e3c3a759b2b6d5aeed0f5c3edfcff73fb704b69ec5bc0e2a60bc7464c90826e87e4d4d4bed843b167e1ca2156b9fbdf2021e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/components/register/register-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RememberPasswordModule",
            "id": "module-RememberPasswordModule-d21747c34f969a2f862c7c70ad8e93705057974de5b70c506648ae4c271b753b6cbf8c8a08611df488bc6e9eb231a049eab74d5fdaa99a88a0e3b2210b0d7984",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/components/remember-password/remember-password.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RememberPasswordComponent } from './remember-password.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RememberPasswordRoutingModule } from './remember-password-rounting.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RememberPasswordRoutingModule,\n  ],\n  declarations: [RememberPasswordComponent]\n})\nexport class RememberPasswordModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RememberPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RememberPasswordRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RememberPasswordRoutingModule",
            "id": "module-RememberPasswordRoutingModule-b55d321a83c6ab017c1a2a78fbc0527ef40f6eefe7a2362834db27d9b83095a3669d40665eca2e21e7d4dff67857e054b41446f3d8348b385ccfbb21934422f5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/components/remember-password/remember-password-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RememberPasswordComponent } from './remember-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RememberPasswordComponent\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RememberPasswordRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-ee887e2666bcc34a2480c78c0798003c3c15bff9904a5ed881489955b5c759cd20469f78e75b89a7545680975cc6f19e9f6dfe4c2ba76d59bb6f625900577545",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { MatCardModule } from '@angular/material/card';\nimport { CardImgTitleTextComponent } from './components/card-img-title-text/card-img-title-text.component';\nimport { NgModule } from '@angular/core';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { IconModule } from './components/custom-icons/icon.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DialogsModule } from './components/dialogs/dialogs.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HeaderCardsInitialPageComponent } from './components/header-cards-initial-page/header-cards-initial-page.component';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HeaderLoggedComponent } from './components/header-logged/header-logged.component';\nimport { RouterModule } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { PrincipalLoadingComponent } from './components/principal-loading/principal-loading.component';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ChatMessagesComponent } from './components/chat-messages/chat-messages.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { AdsCardsComponent } from './components/google-ads/ads-cards/ads-cards/ads-cards.component';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\n\nconst components = [\n  FooterComponent,\n  HeaderCardsInitialPageComponent,\n  CardImgTitleTextComponent,\n  HeaderLoggedComponent,\n  PrincipalLoadingComponent,\n  ChatMessagesComponent,\n  AdsCardsComponent,\n]\nconst angularMaterialModules = [\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatAutocompleteModule,\n  MatSelectModule,\n  MatCardModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  MatSliderModule,\n  MatBadgeModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  DragDropModule,\n]\n@NgModule({\n  declarations: [\n    ...components,\n    AdsCardsComponent,\n  ],\n  imports: [\n    ...angularMaterialModules,\n    IconModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    CommonModule,\n    RouterModule,\n    GooglePlaceModule,\n\n  ],\n  exports: [\n    ...components,\n    ...angularMaterialModules,\n    IconModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    CommonModule,\n    RouterModule,\n\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdsCardsComponent"
                        },
                        {
                            "name": "CardImgTitleTextComponent"
                        },
                        {
                            "name": "ChatMessagesComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HeaderCardsInitialPageComponent"
                        },
                        {
                            "name": "HeaderLoggedComponent"
                        },
                        {
                            "name": "PrincipalLoadingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdsCardsComponent"
                        },
                        {
                            "name": "CardImgTitleTextComponent"
                        },
                        {
                            "name": "ChatMessagesComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HeaderCardsInitialPageComponent"
                        },
                        {
                            "name": "HeaderLoggedComponent"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "PrincipalLoadingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignInModule",
            "id": "module-SignInModule-191abf986e48092e0dbc996e60f09f50fcced4e28a5e98c4835572c4818e764804419d727975127bb738b13ce74b79fb9e324b99fdb3ddc94e75717d4b746a1f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/components/sign-in/sign-in.module.ts",
            "methods": [],
            "sourceCode": "import { MatDialogModule } from '@angular/material/dialog';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SignInComponent } from './sign-in.component';\nimport { RouterModule } from '@angular/router';\nimport { SignInRoutingModule } from './sign-in-rounting.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GoogleLoginProvider, SocialAuthService } from 'angularx-social-login';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SignInRoutingModule,\n    SharedModule,\n    MatDialogModule,\n  ],\n  declarations: [SignInComponent],\n  exports: [],\n  providers: [\n    SocialAuthService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: true, //keeps the user signed in\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider('670097540184-3liid93hjkcib38idqtrnvrgfa6drm69.apps.googleusercontent.com') // your client id\n          }\n        ]\n      }\n    },\n  ]\n})\nexport class SignInModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SignInComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SignInRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignInRoutingModule",
            "id": "module-SignInRoutingModule-3a5f38576056590052c65478dc8ddb9d9ad3cfd69a6b6fa7e76f83761708c8045393ccbeaa0fecde8049ad15934e03977292bce4a66b9c0c321c8d8e65985f58",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/initial-page/components/sign-in/sign-in-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { SignInComponent } from './sign-in.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignInComponent\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignInRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserConfigurationsModule",
            "id": "module-UserConfigurationsModule-6efe0be13e50d0cf2f1437078a84da28fe58edfc2fcfa92b9a00b0ece7443d373c7c4fcb3e032d204795801a0bc61d2e23960c5102a9d17a3d384cee57b5b562",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/user-configurations/user-configurations.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserConfigurationsComponent } from './user-configurations.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { UserConfigurationsRoutingModule } from './user-configurations-rounting.module';\n\n\n\n@NgModule({\n  declarations: [\n    UserConfigurationsComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UserConfigurationsRoutingModule,\n  ]\n})\nexport class UserConfigurationsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UserConfigurationsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "UserConfigurationsRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserConfigurationsRoutingModule",
            "id": "module-UserConfigurationsRoutingModule-b48bc4ca316da21a64fa36ed49c6792bd7fd2b49c82bccd00660f9d3b1595315f6db10afc90a094c1e3638de686f5f0b18f20f9c17fd2c961f5092c9c6f4db64",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/user-configurations/user-configurations-rounting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserConfigurationsComponent } from './user-configurations.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserConfigurationsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserConfigurationsRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserMatchsModule",
            "id": "module-UserMatchsModule-1bf2ac1b6f6bba68c1d763573801f852879c8cef59655804b55a44ad9ebe66a7d084934cc08d55333aa10df38082f6647c3f9ab896173b41aa1fd18bea4e2a6d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/user-matchs/user-matchs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserMatchsComponent } from './user-matchs.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserMatchsComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    UserMatchsComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class UserMatchsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UserMatchsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "angularMaterialModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatAutocompleteModule,\n  MatSelectModule,\n  MatCardModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  MatSliderModule,\n  MatBadgeModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  DragDropModule,\n]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  FooterComponent,\n  HeaderCardsInitialPageComponent,\n  CardImgTitleTextComponent,\n  HeaderLoggedComponent,\n  PrincipalLoadingComponent,\n  ChatMessagesComponent,\n  AdsCardsComponent,\n]"
            },
            {
                "name": "content",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/typings.d 2.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "controlsAppReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/controls/controls-app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(new AddControlApp().creatAction(), (state,  action: any) => ({\n    ...state,\n    ...action.payload\n  })),\n  on(new IncrementCountShowAds().creatAction(), (state, action: any ) => ({\n    ...state,\n    countShowAds: state.countShowAds + 1\n  })),\n  on(new ResetCountShowAds().creatAction(), (state, action: any ) => ({\n    ...state,\n    countShowAds: 0\n  }))\n)"
            },
            {
                "name": "dialogsComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dialogs/dialogs.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  LoginQrCodeComponent,\n  ActivateLocationComponent,\n  ProfileComponent,\n  ChangePasswordComponent,\n  EditProfilePicturesComponent,\n  EditAboutMeComponent,\n  UseOfTermsComponent,\n  PrivacyPolicyComponent,\n  DevoteePlusComponent,\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  api:'https://apiv2.devotee.com.br/',\n  urlImages: 'https://devote-v2.s3.sa-east-1.amazonaws.com/',\n  socketUrL:'https://apiv2.devotee.com.br:6001/',\n  webSocket: {\n    url: 'apiv2.devotee.com.br',\n    port: 6001,\n    cluster: 'devows',\n    events: {\n      loginQrCode: 'login-qrcode',\n      chat: 'new-message',\n      matches: 'new-match',\n      userUpdate: 'update'\n    },\n    channels: {\n      loginQrCode: 'login.',\n      chat: 'match.',\n      matches: 'matches.',\n      userUpdate: 'user.'\n\n    }\n  },\n  urls: {\n    login: 'api/login',\n    loginGoogle: 'login/google',\n    registerUser: 'api/users',\n    updateUser: 'api/users/update',\n    listCards: 'api/cards',\n    userProfile: 'api/users',\n    getMatches: 'api/matches',\n    getChat: 'api/match/messages',\n    getHosptals: 'api/hospitals',\n    getCids: 'api/cid',\n    getMedicalProcedure: 'api/medical-procedures',\n    getMedicines: 'api/drugs',\n    generateHash: 'api/create-hash',\n    readHash: 'api/read-hash',\n    profilePictures: 'api/user/pictures',\n    likes: 'api/likes',\n    getSugestionMatchs: 'api/cards',\n    updateProfilePictureByOrder: 'api/user/pictures/update-by-order',\n    termsOfUsePt: 'api/settings/terms',\n    termsOfUseEn: 'api/settings/terms_en',\n    privacyPolicyPt: 'api/settings/privacy',\n    privacyPolicyEn: 'api/settings/privacy_en',\n    likedMe: 'api/liked-me'\n\n  },\n  googleApis: {\n    key: 'AIzaSyCYUz4sGa9i9jwNwomxPywGVN13kMN4q3c',\n    api: 'https://maps.googleapis.com/maps/',\n    getAddrress: 'api/geocode/json',\n    getPlacesAutocomplete: 'api/place/autocomplete/json'\n  }\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  api:'https://apiv2.devotee.com.br/',\n  urlImages: 'https://devote-v2.s3.sa-east-1.amazonaws.com/',\n  socketUrL:'https://apiv2.devotee.com.br:6001/',\n  webSocket: {\n    url: 'apiv2.devotee.com.br',\n    port: 6001,\n    cluster: 'devows',\n    events: {\n      loginQrCode: 'login-qrcode',\n      chat: 'new-message',\n      matches: 'new-match',\n      userUpdate: 'update'\n    },\n    channels: {\n      loginQrCode: 'login.',\n      chat: 'match.',\n      matches: 'matches.',\n      userUpdate: 'user.'\n\n    }\n  },\n  urls: {\n    login: 'api/login',\n    loginGoogle: 'login/google',\n    registerUser: 'api/users',\n    updateUser: 'api/users/update',\n    listCards: 'api/cards',\n    userProfile: 'api/users',\n    getMatches: 'api/matches',\n    getChat: 'api/match/messages',\n    getHosptals: 'api/hospitals',\n    getCids: 'api/cid',\n    getMedicalProcedure: 'api/medical-procedures',\n    getMedicines: 'api/drugs',\n    generateHash: 'api/create-hash',\n    readHash: 'api/read-hash',\n    profilePictures: 'api/user/pictures',\n    likes: 'api/likes',\n    getSugestionMatchs: 'api/cards',\n    updateProfilePictureByOrder: 'api/user/pictures/update-by-order',\n    termsOfUsePt: 'api/settings/terms',\n    termsOfUseEn: 'api/settings/terms_en',\n    privacyPolicyPt: 'api/settings/privacy',\n    privacyPolicyEn: 'api/settings/privacy_en',\n    likedMe: 'api/liked-me'\n\n  },\n  googleApis: {\n    key: 'AIzaSyCYUz4sGa9i9jwNwomxPywGVN13kMN4q3c',\n    api: 'https://maps.googleapis.com/maps/',\n    getAddrress: 'api/geocode/json',\n    getPlacesAutocomplete: 'api/place/autocomplete/json'\n  }\n}"
            },
            {
                "name": "genderEn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/continue-register/components/register-data/consts/gender.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Male',\n    value: 'male'\n  },\n  {\n    label: 'Female',\n    value: 'female'\n  },\n  {\n    label: 'Trans',\n    value: 'trans'\n  },\n  {\n    label: 'Other',\n    value: 'other'\n  }\n\n]"
            },
            {
                "name": "genderPt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/continue-register/components/register-data/consts/gender.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Masculino',\n    value: 'male'\n  },\n  {\n    label: 'Feminino',\n    value: 'female'\n  },\n  {\n    label: 'Trans',\n    value: 'trans'\n  },\n  {\n    label: 'Outro',\n    value: 'other'\n  }\n]"
            },
            {
                "name": "INIT_DATA_ERRORS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/enum/errors/errors.enum.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ModelErrors",
                "defaultValue": "{\n  showError: false,\n  menssage: ''\n}"
            },
            {
                "name": "INITIAL_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/initial.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IAppState",
                "defaultValue": "{\n  registerData: INITIAL_STATE_REGISTER_USER,\n  controlsApp: INITIAL_STATE_CONTROLS_APP,\n  userData: INITIAL_STATE_USER_DATA,\n  listCards: INITIAL_STATE_LIST_CARDS,\n}"
            },
            {
                "name": "INITIAL_STATE_CONTROLS_APP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/controls/controls-app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  openSingIn: false,\n  showAds: false,\n  countShowAds: 0,\n}"
            },
            {
                "name": "INITIAL_STATE_LIST_CARDS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/list-cards/list-cards.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IListCards.RootObject",
                "defaultValue": "{\n  status: null,\n  data: null,\n}"
            },
            {
                "name": "INITIAL_STATE_REGISTER_USER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/register/register.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IRegisterUser",
                "defaultValue": "{\n\taccount_type: null,\n\tname: null,\n\tbirthdate: null,\n\tgender: null,\n\tsexual_orientation: null,\n\ttarget_gender: null,\n\trelationship_type: 'all',\n\ttarget_account_type: 'all',\n\tprofile_picture: null,\n\tautomatic_location: null,\n\tlat: null,\n\tlng: null,\n\tnotification_message: true,// pergunta unica\n\tnotification_match: true,\n\tnotification_like: true,\n\toccupation: null,\n\tabout: null,\n\taddress_description: null,\n\tage_min: 18,\n\tage_max: 50,\n\tmax_distance: 10, // nao pergunta default 10km\n\tshow_as_gender: null,// string male, woman, trans\n\ttiic: false, // default false\n\tshow_me: true, // default true\n\tprejudice: false,  // default false\n\tshow_age: true,  // default true\n\tshow_distance: true,  // default true\n\tthings_i_use: null,  // default null\n\tillicit_drugs: null,  // default null\n}"
            },
            {
                "name": "INITIAL_STATE_USER_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/user-data/user-data.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IUserData.RootObject",
                "defaultValue": "{\n  status: null,\n  data: null,\n  access_token: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/controls/controls-app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IControlsApp",
                "defaultValue": "INITIAL_STATE_CONTROLS_APP"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/list-cards/list-cards.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IListCards.RootObject",
                "defaultValue": "INITIAL_STATE_LIST_CARDS"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/register/register.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IRegisterUser",
                "defaultValue": "INITIAL_STATE_REGISTER_USER"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/user-data/user-data.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IUserData.RootObject",
                "defaultValue": "INITIAL_STATE_USER_DATA"
            },
            {
                "name": "inputsSpecialPerson",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  EnumControlsSpecialPerson.MY_CIDS,\n  EnumControlsSpecialPerson.MY_DRUGS,\n  EnumControlsSpecialPerson.MY_HOSPTALS,\n  EnumControlsSpecialPerson.MEDICAL_PROCEDURES,\n]"
            },
            {
                "name": "LadingPage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/landing-page/Landing-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "listCardsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/list-cards/list-cards.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(new ListCardsAddData().creatAction(), (state,  payload: any ) => ({\n    ...state,\n    ...payload\n  }))\n)"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "maskConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<IConfig>",
                "defaultValue": "{\n  validation: false,\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "registerReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/register/register.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(new AddDataRegister().creatAction(), (state,  data: any ) => ({\n    ...state,\n    ...data.payload\n  }))\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "rootReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/root.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<IAppState>",
                "defaultValue": "{\n  registerData: registerReducer,\n  controlsApp: controlsAppReducer,\n  userData: userDataReducer,\n  listCards: listCardsReducer,\n}"
            },
            {
                "name": "searchSpecialPerson",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  EnumControlsSpecialPerson.INPUT_MY_CID,\n  EnumControlsSpecialPerson.INPUT_MY_DRUGS,\n  EnumControlsSpecialPerson.INPUT_MY_HOSPTALS,\n  EnumControlsSpecialPerson.INPUT_MEDICAL_PROCEDURES,\n]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sexualOrientationEn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Heterosexual',\n    value: 'heterosexual'\n  },\n  {\n    label: 'Homosexual',\n    value: 'homosexual'\n  },\n  {\n    label: 'Bisexual',\n    value: 'bisexual'\n  }\n]"
            },
            {
                "name": "sexualOrientationPt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Heterossexual',\n    value: 'heterosexual'\n  },\n  {\n    label: 'Homossexual',\n    value: 'homosexual'\n  },\n  {\n    label: 'Bissexual',\n    value: 'bisexual'\n  },\n]"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/landing-page/Landing-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LandingPageComponent>",
                "defaultValue": "(args: LandingPageComponent) => ({\n  props: {\n    ...args\n  },\n})"
            },
            {
                "name": "translateService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/landing-page/Landing-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new TranslateService()"
            },
            {
                "name": "userDataReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state-management/user-data/user-data.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(new AddAllDataUser().creatAction(), (state,  action: any) => ({\n    ...state,\n    ...action.payload\n  }))\n)"
            }
        ],
        "functions": [
            {
                "name": "nameValidatorFormatInvalid",
                "file": "src/app/shared/validators/name/name-format-invalid.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "nameValidatorSpecialCharacteres",
                "file": "src/app/shared/validators/name/name-special-characteres.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ControlsEnum",
                "childs": [
                    {
                        "name": "addControlsApp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[controls] add Constrols"
                    },
                    {
                        "name": "countShowAds",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[controls] count show ads"
                    },
                    {
                        "name": "resetCountShowAds",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[controls]reset count show ads"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/state-management/controls/register.enum.ts"
            },
            {
                "name": "EnumControlsSpecialPerson",
                "childs": [
                    {
                        "name": "MY_CIDS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "my_cids"
                    },
                    {
                        "name": "MY_HOSPTALS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "my_hospitals"
                    },
                    {
                        "name": "MY_DRUGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "my_drugs"
                    },
                    {
                        "name": "MEDICAL_PROCEDURES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "medical_procedures"
                    },
                    {
                        "name": "INPUT_MY_CID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "input_my_cids"
                    },
                    {
                        "name": "INPUT_MY_HOSPTALS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "input_my_hospitals"
                    },
                    {
                        "name": "INPUT_MY_DRUGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "input_my_drugs"
                    },
                    {
                        "name": "INPUT_MEDICAL_PROCEDURES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "input_medical_procedures"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/continue-register/components/register-data/enum/constrols-inputs-special-person.enum.ts"
            },
            {
                "name": "EnumFormatsInputs",
                "childs": [
                    {
                        "name": "datePt",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DD/MM/YYYY"
                    },
                    {
                        "name": "dateUs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MM/DD/YYYY"
                    },
                    {
                        "name": "dateToSend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "YYYY-MM-DD"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/formats-inputs/formats-inputs.enum.ts"
            },
            {
                "name": "EnumGenders",
                "childs": [
                    {
                        "name": "MALE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "male"
                    },
                    {
                        "name": "FEMALE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "female"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/genders/genders.enum.ts"
            },
            {
                "name": "EnumItensResponseTypeSpecial",
                "childs": [
                    {
                        "name": "NAME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "name"
                    },
                    {
                        "name": "NAME_EN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "name_en"
                    },
                    {
                        "name": "DESCRIPTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description"
                    },
                    {
                        "name": "DESCRIPTION_EN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description_en"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/continue-register/components/register-data/enum/itens-response.enum.ts"
            },
            {
                "name": "EnumLanguages",
                "childs": [
                    {
                        "name": "PT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "pt"
                    },
                    {
                        "name": "US",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "us"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/languages/languages.enum.ts"
            },
            {
                "name": "EnumLikeDislikeActions",
                "childs": [
                    {
                        "name": "LIKE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "like"
                    },
                    {
                        "name": "UNLIKE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "unlike"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/like-dislike/likes-dislike.enum.ts"
            },
            {
                "name": "EnumParamsChat",
                "childs": [
                    {
                        "name": "MATCH_ID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "match_id"
                    },
                    {
                        "name": "PAGE_NUMBER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "page"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/chat/enum/params-chat.enum.ts"
            },
            {
                "name": "EnumRoutesApplication",
                "childs": [
                    {
                        "name": "LOGIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/login"
                    },
                    {
                        "name": "REMEMBER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/recuperar"
                    },
                    {
                        "name": "PRE_REGISTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/pre-register"
                    },
                    {
                        "name": "REGISTER_WHO_ARE_YOU",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/register/who-are-you"
                    },
                    {
                        "name": "REGISTER_USER_DATA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/register/user-data"
                    },
                    {
                        "name": "FILTERS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/filters"
                    },
                    {
                        "name": "MATCHS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/matchs"
                    },
                    {
                        "name": "RULES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/rules"
                    },
                    {
                        "name": "SETTINGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/settings"
                    },
                    {
                        "name": "LANDING_PAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "/"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/routes.enum.ts"
            },
            {
                "name": "EnumUserType",
                "childs": [
                    {
                        "name": "SPECIAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "special"
                    },
                    {
                        "name": "DEVOTEE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "devotee"
                    },
                    {
                        "name": "CURIOUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "curious"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/user-types/user-type.enum.ts"
            },
            {
                "name": "ErrorsEnum",
                "childs": [
                    {
                        "name": "REQUIRED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "required"
                    },
                    {
                        "name": "EMAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "email"
                    },
                    {
                        "name": "INVALID_EMAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "invalidEmail"
                    },
                    {
                        "name": "SPECIAL_CHARACTERES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "containSpecialCharacters"
                    },
                    {
                        "name": "FORMAT_INVALID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "formatInvalid"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enum/errors/errors.enum.ts"
            },
            {
                "name": "icon",
                "childs": [
                    {
                        "name": "CHECK_MAGENTA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "check_magenta"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/etical-rules/enum/card-img-title-text.enum.ts"
            },
            {
                "name": "idsRules",
                "childs": [
                    {
                        "name": "FIRST_RULE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "firstRule"
                    },
                    {
                        "name": "SECOND_RULE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "secondRule"
                    },
                    {
                        "name": "THIRD_RULE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "thirdRule"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/etical-rules/enum/card-img-title-text.enum.ts"
            },
            {
                "name": "ImagesTypes",
                "childs": [
                    {
                        "name": "PROFILE_URL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "profileURL"
                    },
                    {
                        "name": "FIRST_IMAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "firstImage"
                    },
                    {
                        "name": "SECOND_IMAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "secondImage"
                    },
                    {
                        "name": "THIRD_IMAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "thirdImage"
                    },
                    {
                        "name": "FORTY_IMAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "fortyImage"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/continue-register/components/register-data/enum/images-type.enum.ts"
            },
            {
                "name": "ListCardsEnum",
                "childs": [
                    {
                        "name": "addData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[list cards] add data"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/state-management/list-cards/list-cards.enum.ts"
            },
            {
                "name": "RegisterEnum",
                "childs": [
                    {
                        "name": "addData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[register] add data"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/state-management/register/register.enum.ts"
            },
            {
                "name": "UserDataEnum",
                "childs": [
                    {
                        "name": "addDataAll",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[userData] add all data"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/state-management/user-data/user-data.enum.ts"
            },
            {
                "name": "ValueAboutME",
                "childs": [
                    {
                        "name": "MALE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "male"
                    },
                    {
                        "name": "MASCULINO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "masculino"
                    },
                    {
                        "name": "FEMALE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "female"
                    },
                    {
                        "name": "FEMININO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "feminino"
                    },
                    {
                        "name": "TRANS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "trans"
                    },
                    {
                        "name": "TRANSEXUAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "transexual"
                    },
                    {
                        "name": "HETERO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hetero"
                    },
                    {
                        "name": "HETEROSEXUAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "heterosexual"
                    },
                    {
                        "name": "HOMO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "homo"
                    },
                    {
                        "name": "HOMOSEXUAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "homosexual"
                    },
                    {
                        "name": "BI",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi"
                    },
                    {
                        "name": "BISEXUAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bisexual"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/continue-register/components/register-data/enum/values-edit-about-me/values-edit-about-me.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/shared.module.ts": [
                {
                    "name": "angularMaterialModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatAutocompleteModule,\n  MatSelectModule,\n  MatCardModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  MatSliderModule,\n  MatBadgeModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  DragDropModule,\n]"
                },
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  FooterComponent,\n  HeaderCardsInitialPageComponent,\n  CardImgTitleTextComponent,\n  HeaderLoggedComponent,\n  PrincipalLoadingComponent,\n  ChatMessagesComponent,\n  AdsCardsComponent,\n]"
                }
            ],
            ".storybook/typings.d 2.ts": [
                {
                    "name": "content",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/typings.d 2.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/state-management/controls/controls-app.reducer.ts": [
                {
                    "name": "controlsAppReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/controls/controls-app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(new AddControlApp().creatAction(), (state,  action: any) => ({\n    ...state,\n    ...action.payload\n  })),\n  on(new IncrementCountShowAds().creatAction(), (state, action: any ) => ({\n    ...state,\n    countShowAds: state.countShowAds + 1\n  })),\n  on(new ResetCountShowAds().creatAction(), (state, action: any ) => ({\n    ...state,\n    countShowAds: 0\n  }))\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/controls/controls-app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IControlsApp",
                    "defaultValue": "INITIAL_STATE_CONTROLS_APP"
                }
            ],
            "src/app/shared/components/dialogs/dialogs.module.ts": [
                {
                    "name": "dialogsComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dialogs/dialogs.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  LoginQrCodeComponent,\n  ActivateLocationComponent,\n  ProfileComponent,\n  ChangePasswordComponent,\n  EditProfilePicturesComponent,\n  EditAboutMeComponent,\n  UseOfTermsComponent,\n  PrivacyPolicyComponent,\n  DevoteePlusComponent,\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  api:'https://apiv2.devotee.com.br/',\n  urlImages: 'https://devote-v2.s3.sa-east-1.amazonaws.com/',\n  socketUrL:'https://apiv2.devotee.com.br:6001/',\n  webSocket: {\n    url: 'apiv2.devotee.com.br',\n    port: 6001,\n    cluster: 'devows',\n    events: {\n      loginQrCode: 'login-qrcode',\n      chat: 'new-message',\n      matches: 'new-match',\n      userUpdate: 'update'\n    },\n    channels: {\n      loginQrCode: 'login.',\n      chat: 'match.',\n      matches: 'matches.',\n      userUpdate: 'user.'\n\n    }\n  },\n  urls: {\n    login: 'api/login',\n    loginGoogle: 'login/google',\n    registerUser: 'api/users',\n    updateUser: 'api/users/update',\n    listCards: 'api/cards',\n    userProfile: 'api/users',\n    getMatches: 'api/matches',\n    getChat: 'api/match/messages',\n    getHosptals: 'api/hospitals',\n    getCids: 'api/cid',\n    getMedicalProcedure: 'api/medical-procedures',\n    getMedicines: 'api/drugs',\n    generateHash: 'api/create-hash',\n    readHash: 'api/read-hash',\n    profilePictures: 'api/user/pictures',\n    likes: 'api/likes',\n    getSugestionMatchs: 'api/cards',\n    updateProfilePictureByOrder: 'api/user/pictures/update-by-order',\n    termsOfUsePt: 'api/settings/terms',\n    termsOfUseEn: 'api/settings/terms_en',\n    privacyPolicyPt: 'api/settings/privacy',\n    privacyPolicyEn: 'api/settings/privacy_en',\n    likedMe: 'api/liked-me'\n\n  },\n  googleApis: {\n    key: 'AIzaSyCYUz4sGa9i9jwNwomxPywGVN13kMN4q3c',\n    api: 'https://maps.googleapis.com/maps/',\n    getAddrress: 'api/geocode/json',\n    getPlacesAutocomplete: 'api/place/autocomplete/json'\n  }\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  api:'https://apiv2.devotee.com.br/',\n  urlImages: 'https://devote-v2.s3.sa-east-1.amazonaws.com/',\n  socketUrL:'https://apiv2.devotee.com.br:6001/',\n  webSocket: {\n    url: 'apiv2.devotee.com.br',\n    port: 6001,\n    cluster: 'devows',\n    events: {\n      loginQrCode: 'login-qrcode',\n      chat: 'new-message',\n      matches: 'new-match',\n      userUpdate: 'update'\n    },\n    channels: {\n      loginQrCode: 'login.',\n      chat: 'match.',\n      matches: 'matches.',\n      userUpdate: 'user.'\n\n    }\n  },\n  urls: {\n    login: 'api/login',\n    loginGoogle: 'login/google',\n    registerUser: 'api/users',\n    updateUser: 'api/users/update',\n    listCards: 'api/cards',\n    userProfile: 'api/users',\n    getMatches: 'api/matches',\n    getChat: 'api/match/messages',\n    getHosptals: 'api/hospitals',\n    getCids: 'api/cid',\n    getMedicalProcedure: 'api/medical-procedures',\n    getMedicines: 'api/drugs',\n    generateHash: 'api/create-hash',\n    readHash: 'api/read-hash',\n    profilePictures: 'api/user/pictures',\n    likes: 'api/likes',\n    getSugestionMatchs: 'api/cards',\n    updateProfilePictureByOrder: 'api/user/pictures/update-by-order',\n    termsOfUsePt: 'api/settings/terms',\n    termsOfUseEn: 'api/settings/terms_en',\n    privacyPolicyPt: 'api/settings/privacy',\n    privacyPolicyEn: 'api/settings/privacy_en',\n    likedMe: 'api/liked-me'\n\n  },\n  googleApis: {\n    key: 'AIzaSyCYUz4sGa9i9jwNwomxPywGVN13kMN4q3c',\n    api: 'https://maps.googleapis.com/maps/',\n    getAddrress: 'api/geocode/json',\n    getPlacesAutocomplete: 'api/place/autocomplete/json'\n  }\n}"
                }
            ],
            "src/app/pages/continue-register/components/register-data/consts/gender.const.ts": [
                {
                    "name": "genderEn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/continue-register/components/register-data/consts/gender.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Male',\n    value: 'male'\n  },\n  {\n    label: 'Female',\n    value: 'female'\n  },\n  {\n    label: 'Trans',\n    value: 'trans'\n  },\n  {\n    label: 'Other',\n    value: 'other'\n  }\n\n]"
                },
                {
                    "name": "genderPt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/continue-register/components/register-data/consts/gender.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Masculino',\n    value: 'male'\n  },\n  {\n    label: 'Feminino',\n    value: 'female'\n  },\n  {\n    label: 'Trans',\n    value: 'trans'\n  },\n  {\n    label: 'Outro',\n    value: 'other'\n  }\n]"
                }
            ],
            "src/app/shared/enum/errors/errors.enum.ts": [
                {
                    "name": "INIT_DATA_ERRORS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/enum/errors/errors.enum.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelErrors",
                    "defaultValue": "{\n  showError: false,\n  menssage: ''\n}"
                }
            ],
            "src/app/state-management/initial.state.ts": [
                {
                    "name": "INITIAL_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/initial.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAppState",
                    "defaultValue": "{\n  registerData: INITIAL_STATE_REGISTER_USER,\n  controlsApp: INITIAL_STATE_CONTROLS_APP,\n  userData: INITIAL_STATE_USER_DATA,\n  listCards: INITIAL_STATE_LIST_CARDS,\n}"
                }
            ],
            "src/app/state-management/controls/controls-app.state.ts": [
                {
                    "name": "INITIAL_STATE_CONTROLS_APP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/controls/controls-app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  openSingIn: false,\n  showAds: false,\n  countShowAds: 0,\n}"
                }
            ],
            "src/app/state-management/list-cards/list-cards.state.ts": [
                {
                    "name": "INITIAL_STATE_LIST_CARDS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/list-cards/list-cards.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IListCards.RootObject",
                    "defaultValue": "{\n  status: null,\n  data: null,\n}"
                }
            ],
            "src/app/state-management/register/register.state.ts": [
                {
                    "name": "INITIAL_STATE_REGISTER_USER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/register/register.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IRegisterUser",
                    "defaultValue": "{\n\taccount_type: null,\n\tname: null,\n\tbirthdate: null,\n\tgender: null,\n\tsexual_orientation: null,\n\ttarget_gender: null,\n\trelationship_type: 'all',\n\ttarget_account_type: 'all',\n\tprofile_picture: null,\n\tautomatic_location: null,\n\tlat: null,\n\tlng: null,\n\tnotification_message: true,// pergunta unica\n\tnotification_match: true,\n\tnotification_like: true,\n\toccupation: null,\n\tabout: null,\n\taddress_description: null,\n\tage_min: 18,\n\tage_max: 50,\n\tmax_distance: 10, // nao pergunta default 10km\n\tshow_as_gender: null,// string male, woman, trans\n\ttiic: false, // default false\n\tshow_me: true, // default true\n\tprejudice: false,  // default false\n\tshow_age: true,  // default true\n\tshow_distance: true,  // default true\n\tthings_i_use: null,  // default null\n\tillicit_drugs: null,  // default null\n}"
                }
            ],
            "src/app/state-management/user-data/user-data.state.ts": [
                {
                    "name": "INITIAL_STATE_USER_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/user-data/user-data.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUserData.RootObject",
                    "defaultValue": "{\n  status: null,\n  data: null,\n  access_token: null,\n}"
                }
            ],
            "src/app/state-management/list-cards/list-cards.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/list-cards/list-cards.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IListCards.RootObject",
                    "defaultValue": "INITIAL_STATE_LIST_CARDS"
                },
                {
                    "name": "listCardsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/list-cards/list-cards.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(new ListCardsAddData().creatAction(), (state,  payload: any ) => ({\n    ...state,\n    ...payload\n  }))\n)"
                }
            ],
            "src/app/state-management/register/register.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/register/register.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IRegisterUser",
                    "defaultValue": "INITIAL_STATE_REGISTER_USER"
                },
                {
                    "name": "registerReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/register/register.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(new AddDataRegister().creatAction(), (state,  data: any ) => ({\n    ...state,\n    ...data.payload\n  }))\n)"
                }
            ],
            "src/app/state-management/user-data/user-data.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/user-data/user-data.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUserData.RootObject",
                    "defaultValue": "INITIAL_STATE_USER_DATA"
                },
                {
                    "name": "userDataReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/user-data/user-data.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(new AddAllDataUser().creatAction(), (state,  action: any) => ({\n    ...state,\n    ...action.payload\n  }))\n)"
                }
            ],
            "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts": [
                {
                    "name": "inputsSpecialPerson",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  EnumControlsSpecialPerson.MY_CIDS,\n  EnumControlsSpecialPerson.MY_DRUGS,\n  EnumControlsSpecialPerson.MY_HOSPTALS,\n  EnumControlsSpecialPerson.MEDICAL_PROCEDURES,\n]"
                },
                {
                    "name": "searchSpecialPerson",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  EnumControlsSpecialPerson.INPUT_MY_CID,\n  EnumControlsSpecialPerson.INPUT_MY_DRUGS,\n  EnumControlsSpecialPerson.INPUT_MY_HOSPTALS,\n  EnumControlsSpecialPerson.INPUT_MEDICAL_PROCEDURES,\n]"
                }
            ],
            "src/app/pages/landing-page/Landing-page.stories.ts": [
                {
                    "name": "LadingPage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/landing-page/Landing-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/landing-page/Landing-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LandingPageComponent>",
                    "defaultValue": "(args: LandingPageComponent) => ({\n  props: {\n    ...args\n  },\n})"
                },
                {
                    "name": "translateService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/landing-page/Landing-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new TranslateService()"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "maskConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IConfig>",
                    "defaultValue": "{\n  validation: false,\n}"
                }
            ],
            "src/app/state-management/root.reducer.ts": [
                {
                    "name": "rootReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state-management/root.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<IAppState>",
                    "defaultValue": "{\n  registerData: registerReducer,\n  controlsApp: controlsAppReducer,\n  userData: userDataReducer,\n  listCards: listCardsReducer,\n}"
                }
            ],
            "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts": [
                {
                    "name": "sexualOrientationEn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Heterosexual',\n    value: 'heterosexual'\n  },\n  {\n    label: 'Homosexual',\n    value: 'homosexual'\n  },\n  {\n    label: 'Bisexual',\n    value: 'bisexual'\n  }\n]"
                },
                {
                    "name": "sexualOrientationPt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Heterossexual',\n    value: 'heterosexual'\n  },\n  {\n    label: 'Homossexual',\n    value: 'homosexual'\n  },\n  {\n    label: 'Bissexual',\n    value: 'bisexual'\n  },\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/validators/name/name-format-invalid.validator.ts": [
                {
                    "name": "nameValidatorFormatInvalid",
                    "file": "src/app/shared/validators/name/name-format-invalid.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/validators/name/name-special-characteres.validator.ts": [
                {
                    "name": "nameValidatorSpecialCharacteres",
                    "file": "src/app/shared/validators/name/name-special-characteres.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/state-management/controls/register.enum.ts": [
                {
                    "name": "ControlsEnum",
                    "childs": [
                        {
                            "name": "addControlsApp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[controls] add Constrols"
                        },
                        {
                            "name": "countShowAds",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[controls] count show ads"
                        },
                        {
                            "name": "resetCountShowAds",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[controls]reset count show ads"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/state-management/controls/register.enum.ts"
                }
            ],
            "src/app/pages/continue-register/components/register-data/enum/constrols-inputs-special-person.enum.ts": [
                {
                    "name": "EnumControlsSpecialPerson",
                    "childs": [
                        {
                            "name": "MY_CIDS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "my_cids"
                        },
                        {
                            "name": "MY_HOSPTALS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "my_hospitals"
                        },
                        {
                            "name": "MY_DRUGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "my_drugs"
                        },
                        {
                            "name": "MEDICAL_PROCEDURES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "medical_procedures"
                        },
                        {
                            "name": "INPUT_MY_CID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "input_my_cids"
                        },
                        {
                            "name": "INPUT_MY_HOSPTALS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "input_my_hospitals"
                        },
                        {
                            "name": "INPUT_MY_DRUGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "input_my_drugs"
                        },
                        {
                            "name": "INPUT_MEDICAL_PROCEDURES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "input_medical_procedures"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/continue-register/components/register-data/enum/constrols-inputs-special-person.enum.ts"
                }
            ],
            "src/app/shared/enum/formats-inputs/formats-inputs.enum.ts": [
                {
                    "name": "EnumFormatsInputs",
                    "childs": [
                        {
                            "name": "datePt",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DD/MM/YYYY"
                        },
                        {
                            "name": "dateUs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MM/DD/YYYY"
                        },
                        {
                            "name": "dateToSend",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "YYYY-MM-DD"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/formats-inputs/formats-inputs.enum.ts"
                }
            ],
            "src/app/shared/enum/genders/genders.enum.ts": [
                {
                    "name": "EnumGenders",
                    "childs": [
                        {
                            "name": "MALE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "male"
                        },
                        {
                            "name": "FEMALE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "female"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/genders/genders.enum.ts"
                }
            ],
            "src/app/pages/continue-register/components/register-data/enum/itens-response.enum.ts": [
                {
                    "name": "EnumItensResponseTypeSpecial",
                    "childs": [
                        {
                            "name": "NAME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "name"
                        },
                        {
                            "name": "NAME_EN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "name_en"
                        },
                        {
                            "name": "DESCRIPTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description"
                        },
                        {
                            "name": "DESCRIPTION_EN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description_en"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/continue-register/components/register-data/enum/itens-response.enum.ts"
                }
            ],
            "src/app/shared/enum/languages/languages.enum.ts": [
                {
                    "name": "EnumLanguages",
                    "childs": [
                        {
                            "name": "PT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "pt"
                        },
                        {
                            "name": "US",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "us"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/languages/languages.enum.ts"
                }
            ],
            "src/app/shared/enum/like-dislike/likes-dislike.enum.ts": [
                {
                    "name": "EnumLikeDislikeActions",
                    "childs": [
                        {
                            "name": "LIKE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "like"
                        },
                        {
                            "name": "UNLIKE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "unlike"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/like-dislike/likes-dislike.enum.ts"
                }
            ],
            "src/app/pages/chat/enum/params-chat.enum.ts": [
                {
                    "name": "EnumParamsChat",
                    "childs": [
                        {
                            "name": "MATCH_ID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "match_id"
                        },
                        {
                            "name": "PAGE_NUMBER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "page"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/chat/enum/params-chat.enum.ts"
                }
            ],
            "src/app/shared/enum/routes.enum.ts": [
                {
                    "name": "EnumRoutesApplication",
                    "childs": [
                        {
                            "name": "LOGIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/login"
                        },
                        {
                            "name": "REMEMBER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/recuperar"
                        },
                        {
                            "name": "PRE_REGISTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/pre-register"
                        },
                        {
                            "name": "REGISTER_WHO_ARE_YOU",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/register/who-are-you"
                        },
                        {
                            "name": "REGISTER_USER_DATA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/register/user-data"
                        },
                        {
                            "name": "FILTERS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/filters"
                        },
                        {
                            "name": "MATCHS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/matchs"
                        },
                        {
                            "name": "RULES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/rules"
                        },
                        {
                            "name": "SETTINGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/settings"
                        },
                        {
                            "name": "LANDING_PAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "/"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/routes.enum.ts"
                }
            ],
            "src/app/shared/enum/user-types/user-type.enum.ts": [
                {
                    "name": "EnumUserType",
                    "childs": [
                        {
                            "name": "SPECIAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "special"
                        },
                        {
                            "name": "DEVOTEE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "devotee"
                        },
                        {
                            "name": "CURIOUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "curious"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/user-types/user-type.enum.ts"
                }
            ],
            "src/app/shared/enum/errors/errors.enum.ts": [
                {
                    "name": "ErrorsEnum",
                    "childs": [
                        {
                            "name": "REQUIRED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "required"
                        },
                        {
                            "name": "EMAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "email"
                        },
                        {
                            "name": "INVALID_EMAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "invalidEmail"
                        },
                        {
                            "name": "SPECIAL_CHARACTERES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "containSpecialCharacters"
                        },
                        {
                            "name": "FORMAT_INVALID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "formatInvalid"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enum/errors/errors.enum.ts"
                }
            ],
            "src/app/pages/etical-rules/enum/card-img-title-text.enum.ts": [
                {
                    "name": "icon",
                    "childs": [
                        {
                            "name": "CHECK_MAGENTA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "check_magenta"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/etical-rules/enum/card-img-title-text.enum.ts"
                },
                {
                    "name": "idsRules",
                    "childs": [
                        {
                            "name": "FIRST_RULE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "firstRule"
                        },
                        {
                            "name": "SECOND_RULE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "secondRule"
                        },
                        {
                            "name": "THIRD_RULE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "thirdRule"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/etical-rules/enum/card-img-title-text.enum.ts"
                }
            ],
            "src/app/pages/continue-register/components/register-data/enum/images-type.enum.ts": [
                {
                    "name": "ImagesTypes",
                    "childs": [
                        {
                            "name": "PROFILE_URL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "profileURL"
                        },
                        {
                            "name": "FIRST_IMAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "firstImage"
                        },
                        {
                            "name": "SECOND_IMAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "secondImage"
                        },
                        {
                            "name": "THIRD_IMAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "thirdImage"
                        },
                        {
                            "name": "FORTY_IMAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "fortyImage"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/continue-register/components/register-data/enum/images-type.enum.ts"
                }
            ],
            "src/app/state-management/list-cards/list-cards.enum.ts": [
                {
                    "name": "ListCardsEnum",
                    "childs": [
                        {
                            "name": "addData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[list cards] add data"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/state-management/list-cards/list-cards.enum.ts"
                }
            ],
            "src/app/state-management/register/register.enum.ts": [
                {
                    "name": "RegisterEnum",
                    "childs": [
                        {
                            "name": "addData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[register] add data"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/state-management/register/register.enum.ts"
                }
            ],
            "src/app/state-management/user-data/user-data.enum.ts": [
                {
                    "name": "UserDataEnum",
                    "childs": [
                        {
                            "name": "addDataAll",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[userData] add all data"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/state-management/user-data/user-data.enum.ts"
                }
            ],
            "src/app/pages/continue-register/components/register-data/enum/values-edit-about-me/values-edit-about-me.enum.ts": [
                {
                    "name": "ValueAboutME",
                    "childs": [
                        {
                            "name": "MALE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "male"
                        },
                        {
                            "name": "MASCULINO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "masculino"
                        },
                        {
                            "name": "FEMALE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "female"
                        },
                        {
                            "name": "FEMININO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "feminino"
                        },
                        {
                            "name": "TRANS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "trans"
                        },
                        {
                            "name": "TRANSEXUAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "transexual"
                        },
                        {
                            "name": "HETERO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hetero"
                        },
                        {
                            "name": "HETEROSEXUAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "heterosexual"
                        },
                        {
                            "name": "HOMO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "homo"
                        },
                        {
                            "name": "HOMOSEXUAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "homosexual"
                        },
                        {
                            "name": "BI",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi"
                        },
                        {
                            "name": "BISEXUAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bisexual"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/continue-register/components/register-data/enum/values-edit-about-me/values-edit-about-me.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/",
                        "pathMatch": "full"
                    },
                    {
                        "path": "",
                        "loadChildren": "src/app/pages/landing-page/landing-page.module#LandingPageModule",
                        "canActivate": [
                            "LoggedService"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/landing-page/landing-page.module.ts",
                                        "module": "LandingPageModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LandingPageComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "LandingPageModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "loadChildren": "src/app/pages/initial-page/initial-page.module#InitialPageModule",
                        "canActivate": [
                            "LoggedService"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/initial-page/initial-page-rounting.module.ts",
                                        "module": "InitialPageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "InitialPageComponent",
                                                "children": [
                                                    {
                                                        "path": "login",
                                                        "loadChildren": "src/app/pages/initial-page/components/sign-in/sign-in.module#SignInModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/initial-page/components/sign-in/sign-in-rounting.module.ts",
                                                                        "module": "SignInRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "SignInComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "SignInModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "recuperar",
                                                        "loadChildren": "src/app/pages/initial-page/components/remember-password/remember-password.module#RememberPasswordModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/initial-page/components/remember-password/remember-password-rounting.module.ts",
                                                                        "module": "RememberPasswordRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "RememberPasswordComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "RememberPasswordModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "pre-register",
                                                        "loadChildren": "src/app/pages/initial-page/components/register/register.module#RegisterModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/initial-page/components/register/register-rounting.module.ts",
                                                                        "module": "RegisterRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "RegisterComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "RegisterModule"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "InitialPageModule"
                            }
                        ]
                    },
                    {
                        "path": "rules",
                        "loadChildren": "src/app/pages/etical-rules/etical-rules.module#EticalRulesModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/etical-rules/etical-rules.module.ts",
                                        "module": "EticalRulesModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "EticalRulesComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "EticalRulesModule"
                            }
                        ]
                    },
                    {
                        "path": "register",
                        "loadChildren": "src/app/pages/continue-register/continue-register.module#ContinueRegisterModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/continue-register/continue-register-rounting.module.ts",
                                        "module": "ContinueRegisterRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ContinueRegisterComponent",
                                                "children": [
                                                    {
                                                        "path": "who-are-you",
                                                        "component": "ChangeUserTypeComponent",
                                                        "canActivate": [
                                                            "WhoAreYouRegistredCorrectService"
                                                        ]
                                                    },
                                                    {
                                                        "path": "user-data",
                                                        "component": "RegisterDataComponent",
                                                        "canActivate": [
                                                            "UserRegistredCorrectService"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ContinueRegisterModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "loadChildren": "src/app/pages/logged/logged.module#LoggedModule",
                        "canActivate": [
                            "AuthGuardService"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/logged/logged-rounting.module.ts",
                                        "module": "LoggedRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LoggedComponent",
                                                "children": [
                                                    {
                                                        "path": "settings",
                                                        "loadChildren": "src/app/pages/user-configurations/user-configurations.module#UserConfigurationsModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/user-configurations/user-configurations-rounting.module.ts",
                                                                        "module": "UserConfigurationsRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "UserConfigurationsComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "UserConfigurationsModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "filters",
                                                        "loadChildren": "src/app/pages/filter-preferences/filter-preferences.module#FilterPreferencesModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/filter-preferences/filter-preferences-rounting.module.ts",
                                                                        "module": "FilterPreferencesRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "FilterPreferencesComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "FilterPreferencesModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "chat",
                                                        "loadChildren": "src/app/pages/chat/chat.module#ChatModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/chat/chat-rounting.module.ts",
                                                                        "module": "ChatRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "ChatComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "ChatModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "matchs",
                                                        "loadChildren": "src/app/pages/user-matchs/user-matchs.module#UserMatchsModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [],
                                                                "module": "UserMatchsModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "likes",
                                                        "loadChildren": "src/app/pages/liked-me/liked-me.module#LikedMeModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/pages/liked-me/liked-me.module.ts",
                                                                        "module": "LikedMeModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "LikedMeComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "LikedMeModule"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "LoggedModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": "/",
                        "pathMatch": "full"
                    },
                    {
                        "path": "error",
                        "redirectTo": "/"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/typings.d 2.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "content",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "maskConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth-guard/auth.guard.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/logged/logged.guard.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "LoggedService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/user-registred-correct/user-registred-correct.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UserRegistredCorrectService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/who-are-you-registred-correct/who-are-you-registred-correct.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "WhoAreYouRegistredCorrectService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/change-password/change-password.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChangePasswordSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/change-password/change-password.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChangePasswordService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/generate-hash-qrcode/generate-hash-qrcode.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GenerateHashQrcodeSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/generate-hash-qrcode/generate-hash-qrcode.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GenerateHashQrcodeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/generics-http/httpService.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-address-lat-long/get-address-lat-long.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetAddressLatLongSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-address-lat-long/get-address-lat-long.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetAddressLatLongService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-chat/get-chat.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetChatServiceSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-chat/get-chat.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetChatService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-cids/get-cids.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetCidsSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-cids/get-cids.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetCidsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-hosptals/get-hosptals.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetHosptalsSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-hosptals/get-hosptals.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetHosptalsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-matches/get-matches.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetMatchesSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-matches/get-matches.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetMatchesService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-medical-procedures/get-medical-procedures.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetMedicalProceduresSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-medical-procedures/get-medical-procedures.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetMedicalProceduresService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-medicines/get-medicines.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetMedicinesSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-medicines/get-medicines.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetMedicinesService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-sugestion-matchs/get-sugestion-matchs.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetSugestionSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/get-sugestion-matchs/get-sugestion-matchs.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetSugestionMatchsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/legal-policy/privacy-policy/privacy-policy.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TermsOfUseSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/legal-policy/privacy-policy/privacy-policy.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PrivacyPolicyServiceEn",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/legal-policy/privacy-policy/privacy-policy.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PrivacyPolicyServicePt",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/legal-policy/terms-of-user/terms-of-use.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TermsOfUseSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/legal-policy/terms-of-user/terms-of-use.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TermsOfUseServiceEn",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/legal-policy/terms-of-user/terms-of-use.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TermsOfUseServicePt",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/like-dislike/like-dislike.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LikeDislikeSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/like-dislike/like-dislike.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LikeDislikeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/liked-me/liked-me.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LikedMeSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/liked-me/liked-me.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LikedMeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/list-cards/list-cards.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ListCardsSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/list-cards/list-cards.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ListCardsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/location.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocationService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/others-sign-in/login-google/login-google.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoginGoogleSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/others-sign-in/login-google/login-google.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginGoogleService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/places-auto-complete/places-auto-complete.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PlacesAutoCompleteSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/places-auto-complete/places-auto-complete.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PlacesAutoCompleteService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/profile-pictures/profile-pictures.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProfilePicturesSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/profile-pictures/profile-pictures.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProfilePicturesService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/read-hash-qrcode/read-hash-qrcode.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ReadHashQrcodeSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/read-hash-qrcode/read-hash-qrcode.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ReadHashQrcodeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/register/register.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RegisterUserSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/register/register.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegisterService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/send-message/send-message.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SendMessageSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/send-message/send-message.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SendMessageService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/sign-in/sign-in.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SignInSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/sign-in/sign-in.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SignInService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/snack-bar/snack-bar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SnackBarService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/translate/translate.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslateService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/update-data/update-data.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateDataSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/update-data/update-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UpdateDataService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/update-picture-by-order/update-picture-by-order.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdatePictureByOrderSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/update-picture-by-order/update-picture-by-order.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UpdatePictureByOrderService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/user-profile/user-profile.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserProfileSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/user-profile/user-profile.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserProfileService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/verify-email/verify-email.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RegisterUserSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/verify-email/verify-email.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VerifyEmailService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/websockets/chat-connector/chat-connector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChatConnectorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/websockets/login-qrcode-connector/login-qrcode-connector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginQrcodeConnectorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/websockets/matches-connector/matches-connector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MatchesConnectorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/websockets/pusher/pusher-auth/pusher-auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PusherAuthService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/chat/chat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/change-user-type/change-user-type.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangeUserTypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/consts/gender.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "genderEn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/consts/gender.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "genderPt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "inputsSpecialPerson",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/consts/inputs-special-person.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "searchSpecialPerson",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sexualOrientationEn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/consts/sexual-orientation.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sexualOrientationPt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/components/register-data/register-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/43",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/continue-register/continue-register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContinueRegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/etical-rules/etical-rules.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EticalRulesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/filter-preferences/filter-preferences.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterPreferencesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/initial-page/components/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/initial-page/components/remember-password/remember-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RememberPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/initial-page/components/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/initial-page/initial-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InitialPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/landing-page/Landing-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LadingPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/landing-page/Landing-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/landing-page/Landing-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "translateService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/landing-page/landing-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/liked-me/liked-me.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LikedMeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/logged/logged.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoggedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user-configurations/user-configurations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserConfigurationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user-matchs/user-matchs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserMatchsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card-img-title-text/card-img-title-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardImgTitleTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/chat-messages/chat-messages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChatMessagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/activate-location/activate-location.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActivateLocationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/change-password/change-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangePasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/devotee-plus/devotee-plus.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DevoteePlusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/dialogs.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dialogsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/edit-about-me/edit-about-me.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditAboutMeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/edit-profile-pictures/edit-profile-pictures.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditProfilePicturesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/login-qr-code/login-qr-code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginQrCodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/privacy-policy/privacy-policy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrivacyPolicyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialogs/use-of-terms/use-of-terms.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UseOfTermsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/google-ads/ads-cards/ads-cards/ads-cards.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdsCardsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header-cards-initial-page/header-cards-initial-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderCardsInitialPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header-cards-initial-page/model/header-cards.data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IHeaderCardsInitialPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header-cards-initial-page/model/header-cards.data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "textHeader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header-cards-initial-page/model/header-cards.data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "titleHeader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header-logged/header-logged.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderLoggedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/principal-loading/principal-loading.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrincipalLoadingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/enum/errors/errors.enum.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INIT_DATA_ERRORS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/change-mask/change-mask.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChangeMaskService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/dialogs/dialogs.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DialogsService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/get-selects-special-person/get-selects-special-person.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetSelectsSpecialPersonService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/routes/route.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RouteService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/state-management/state-management-func.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StateManagementFuncService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/transform-age/transform-age.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransformAgeService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/functions/verify-stage-register-data/verify-stage-register-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VerifyStageRegisterDataService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/card-img-title-text/card-img-title-text.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ModelCardImgTitleText",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/card-img-title-text/card-img-title-text.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "defaultDataAnyway",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/card-img-title-text/card-img-title-text.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IModelCardImgTitleText",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/change-password/change-password.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ModelChangePassword",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/errors/errors.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ModelErrors",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/header-cards-initial-page/header-cards-initial-page.enum.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MHeaderCardsInitialPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/location/location.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MLocation",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/others-sign-in/sign-in.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ISignInGoogle",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/qrcode/qrcode.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDataQrcode",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/qrcode/qrcode.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObjetct",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/request/like-dislike-request/like-dislike.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ModelLikeDislikeRequest",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-cids/get-cids.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-cids/get-cids.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-cids/get-cids.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-hosptals/get-hosptals.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Datum",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-hosptals/get-hosptals.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-hosptals/get-hosptals.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProfilePicture",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RootObject",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Target",
                "coveragePercent": 0,
                "coverageCount": "0/50",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-liked-me/get-liked-me.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/50",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-matches/get-matches.response.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-matches/get-matches.response.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ILastedMessage",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-matches/get-matches.response.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ITargetUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-matches/get-matches.response.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IUserDataMatches",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-matches/get-matches.response.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RootObject",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Datum",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-medical-procedures/get-medical-procedures.mode.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-medicines/get-medicines.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Datum",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-medicines/get-medicines.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-medicines/get-medicines.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Datum",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/get-sugestion-matchs/get-sugestion-matchs.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProfilePicture",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Bounds",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Geometry",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObjetct",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Location",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Northeast",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Northeast2",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PlusCode",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PlusCode2",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Result",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Southwest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Southwest2",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-address-lat-long/getAddressLatLong.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Viewport",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MainTextMatchedSubstring",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MatchedSubstring",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Prediction",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SecondaryTextMatchedSubstring",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StructuredFormatting",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/google/get-places-autocomplete/getPlacesAutocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Term",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/like-dislike-response/like-dislike.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IData",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/response/like-dislike-response/like-dislike.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootObject",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/serializer/resource.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Resource",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/serializer/serializer.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Serializer",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/sign-in/sign-in.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ISignIn",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/verify-email/verify-email.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Response",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/verify-email/verify-email.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponseErrors",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "angularMaterialModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/name/name-format-invalid.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "nameValidatorFormatInvalid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/name/name-special-characteres.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "nameValidatorSpecialCharacteres",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/app.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAppState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/controls-app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "controlsAppReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/controls-app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/controls-app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IControlsApp",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/controls-app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE_CONTROLS_APP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/copntrols-app.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddControlApp",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/copntrols-app.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IncrementCountShowAds",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/controls/copntrols-app.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ResetCountShowAds",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/custom.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomAction",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/initial.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/list-cards/list-cards.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ListCardsAddData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/list-cards/list-cards.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/list-cards/list-cards.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "listCardsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/list-cards/list-cards.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RootObject",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/list-cards/list-cards.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE_LIST_CARDS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/register/register.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddDataRegister",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/register/register.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/register/register.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registerReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/register/register.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IRegisterUser",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/register/register.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE_REGISTER_USER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/root.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rootReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/type.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPayload",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddAllDataUser",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userDataReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ICid",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IData",
                "coveragePercent": 0,
                "coverageCount": "0/53",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IDrug",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IHosptal",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IMedicalProcedures",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IMedicaPocedureData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IMyDrugs",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IMyHosptals",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IMyICDs",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProfilePicture",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RootObject",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/state-management/user-data/user-data.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE_USER_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}